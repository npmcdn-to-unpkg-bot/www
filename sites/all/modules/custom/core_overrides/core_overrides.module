<?php 
/*
*** Custom Module By PSKS Web Services for NABC2017 Project. 
*/


/*
 * Implementing hook_menu
 * */
function core_overrides_menu() {
  $items = array();
  $items['admin/config/social/settings'] = array(
    'title' => 'Social Network settings',
    'description' => 'Configuration of the social links on the application',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('core_overrides_social_form'),
    'access arguments' => array('administer'),
    'type' => MENU_NORMAL_ITEM,
   );
   
   $items['member/login/saved'] = array(
    'title' => 'Member Login',
    'description' => 'Saved Profile Login',
    'page callback' => 'core_overrides_get_form_saved_member',
    'page arguments' => array(''),
    'access arguments' => array('access content'),
    'type' => MENU_NORMAL_ITEM,
   );
   
   $items['sponsor/login/saved'] = array(
    'title' => 'Sponsor Login',
    'description' => 'Saved Profile Login',
    'page callback' => 'core_overrides_get_form_saved_sponsor_member',
    'page arguments' => array(''),
    'access arguments' => array('access content'),
    'type' => MENU_NORMAL_ITEM,
   );
   
  $items['payment/process'] = array(
    'title' => t('Processing Payment'),
    'description' => t('Paypal payment form'),
    'page callback' => 'drupal_get_form',
	'page arguments' => array('core_overrides_paypal_payment_form'),
    'type' => MENU_CALLBACK,
    'access callback' => TRUE,
   );
   
   $items['payment/process/sponsor'] = array(
    'title' => t('Processing Payment'),
    'description' => t('Paypal payment form'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('core_overrides_paypal_payment_sponsor_form'),
    'type' => MENU_CALLBACK,
    'access callback' => TRUE,
   );
   
   $items['paypal/ipn'] = array(
    'title' => t('IPN Notification'),
    'description' => t('IPN Notification Paypal'),
    'page callback' => 'core_overrides_paypal_payment_ipn',
    'page arguments' => array(''),
    'type' => MENU_CALLBACK,
    'access callback' => TRUE,
   );
   
   $items['paypal/ipn/sponsor'] = array(
    'title' => t('IPN Notification'),
    'description' => t('IPN Notification Paypal'),
    'page callback' => 'core_overrides_paypal_payment_sponsor_ipn',
    'page arguments' => array(''),
    'type' => MENU_CALLBACK,
    'access callback' => TRUE,
   );
    
  $items['admin/config/paypal/settings'] = array(
    'title' => 'Paypal Settings',
    'description' => 'Configuration for Paypal of the application',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('core_overrides_paypal_settings_form'),
    'access arguments' => array('administer webmaster'),
    'type' => MENU_NORMAL_ITEM,
   );
   
    $items['member/logout'] = array(
    'title' => 'Member Logout',
    'description' => 'Logout Member who has logged in with email address and membership number/login token',
    'page callback' => 'core_overrides_member_logout',
    'page arguments' => array(''),
    'access arguments' => array(''),
	'access callback' => TRUE,
    'type' => MENU_CALLBACK,
   );
   
   $items['sponsor/logout'] = array(
    'title' => 'Sponsor Logout',
    'description' => 'Logout Sponsor Member who has logged in with email address and membership number/login token',
    'page callback' => 'core_overrides_sponsor_member_logout',
    'page arguments' => array(''),
    'access arguments' => array(''),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
   );
   /*$items['admin/config/footermap/settings'] = array(
    'title' => 'Footer Map',
    'description' => 'Configuration of the Footer Map',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('core_overrides_footer_form'),
    'access arguments' => array('administer admin'),
    'type' => MENU_NORMAL_ITEM,
   );  
   $items['admin/config/residents-widget/settings'] = array(
    'title' => 'Residents Widget Images',
    'description' => 'Configuration of the Residents Widget Images',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('core_overrides_residents_widget_form'),
    'access arguments' => array('administer admin'),
    'type' => MENU_NORMAL_ITEM,
   );    */
return $items;
} 

function core_overrides_get_form_saved_member(){
 return theme('member_login_form', array('form' => drupal_get_form('core_overrides_membership_login_form'),));
}

function core_overrides_get_form_saved_sponsor_member(){
 return theme('sponsor_member_login_form', array('form' => drupal_get_form('core_overrides_sponsor_membership_login_form'),));
}

function getFormErrors(){
    $messages = drupal_get_messages('error');
	$html = '';
    if(isset($messages['error']) && is_array($messages['error']) && count($messages['error'])) {
    $html = '<div id="messages">
        <div class="section clearfix">
            <div class="messages error">
                <ul>';
                    
     foreach($messages['error'] as $item) {
     $html .= '<li>'.$item.'</li>';
     }
     $html .='</ul></div></div></div>';
    }
	return $html;
} 

function core_overrides_paypal_payment_ipn(){
    //$file = drupal_get_path('module', 'core_overrides').'/ipn.txt';
    //print $file ; die();
    // Open the file to get existing content
    //$current = file_get_contents($file);
    // Append a new person to the file
    //$request = $_REQUEST;
    //echo "<pre>"; print_r($_REQUEST); echo "</pre>"; die();
    //$current .= http_build_query($request);
    // Write the contents back to the file
    //file_put_contents($file, $current);
	
	global $base_url;
	
	watchdog('core_overrides',t('Paypal Payment Received sent successfully - '.http_build_query($_REQUEST)),NULL,WATCHDOG_INFO);
	$item_number = isset($_REQUEST['item_number']) ? $_REQUEST['item_number'] : '';
	$membership_number = '';
	$member_nid = '';
	$split_item = explode('-',$item_number);
	if(is_array($split_item)){
		$membership_number = $split_item[0];
		$member_nid = $split_item[1];
	}
	/*$query_update = new EntityFieldQuery();
    $query_update->entityCondition('entity_type', 'node');
    $query_update->entityCondition('bundle', 'register');
    $query_update->propertyCondition('status', 1);
    $query_update->fieldCondition('field_membership_number', 'value', trim($membership_number) , '=');
    $result = $query_update->execute();
	if($membership_number!='' && isset($result['node'])){
    	$member = $result['node'];
        foreach($member as $reg_member){
            $member_nid = $reg_member->nid;
        }*/ 
       
		$membership_details = node_load($member_nid);
		//echo "<pre>"; print_r($membership_details); echo "</pre>"; die();
		$membership_type_details = node_load($membership_details->field_membership['und'][0]['nid']);
		//echo "<pre>"; print_r($membership_type_details); echo "</pre>"; die();
		$membership_type = $membership_type_details->title;
		if($membership_details){
		$membership_details->field_payment_transaction_number['und'][0]['value'] = isset($_REQUEST['txn_id']) ? $_REQUEST['txn_id'] : '';
		$membership_details->field_payment_transaction_number['und'][0]['safe_value'] = isset($_REQUEST['txn_id']) ? $_REQUEST['txn_id'] : '';
		
		$membership_details->field_paypal_transaction_id['und'][0]['value'] = isset($_REQUEST['txn_id']) ? $_REQUEST['txn_id'] : '';
		$membership_details->field_paypal_transaction_id['und'][0]['safe_value'] = isset($_REQUEST['txn_id']) ? $_REQUEST['txn_id'] : '';
		
		$membership_details->field_paypal_payment_status['und'][0]['value'] = isset($_REQUEST['payment_status']) ? $_REQUEST['payment_status'] : '';
		$membership_details->field_paypal_payment_status['und'][0]['safe_value'] = isset($_REQUEST['payment_status']) ? $_REQUEST['payment_status'] : '';
		
		$membership_details->field_paypal_email_address['und'][0]['value'] = isset($_REQUEST['payer_email']) ? urldecode($_REQUEST['payer_email']) : '';
		$membership_details->field_paypal_email_address['und'][0]['safe_value'] = isset($_REQUEST['payer_email']) ? urldecode($_REQUEST['payer_email']) : '';
		
		$membership_details->field_payment_date['und'][0]['value'] = isset($_REQUEST['payment_date']) ? urldecode($_REQUEST['payment_date']) : '';
		$membership_details->field_payment_date['und'][0]['safe_value'] = isset($_REQUEST['payment_date']) ? urldecode($_REQUEST['payment_date']) : '';
		
		$membership_details->field_paypal_payer_id['und'][0]['value'] = isset($_REQUEST['payer_id']) ? urldecode($_REQUEST['payer_id']) : '';
		$membership_details->field_paypal_payer_id['und'][0]['safe_value'] = isset($_REQUEST['payer_id']) ? urldecode($_REQUEST['payer_id']) : '';
		
		
		$membership_details->field_payment_status['und'][0]['value'] = (isset($_REQUEST['payment_status']) && $_REQUEST['payment_status'] == 'Completed') ? 'Paid' : 'Pending';
		
		
		//echo "<pre>"; print_r($membership_details); echo "</pre>"; die();
		
		node_save($membership_details);
		$systemUser = user_load_by_name('system_user');
		/*****Email notification to administrator****/
		$from = $systemUser->mail;
		$to = variable_get('site_mail', 'notification@nabc2017.com');
		$subject = 'Paypal Payment Received at NABC 2017 Membership';
		
		$email_body = '';
		if(file_exists(drupal_get_path('module','core_overrides').'/email_templates/email_template_payment_confirmation.php')) require(drupal_get_path('module','core_overrides').'/email_templates/email_template_payment_confirmation.php');
		$body    = $email_body;
		//echo $from.'<br/>';
		//echo $to.'<br/>';
		//echo $subject.'<br/>';
		//echo $message.'<br/>';
		//echo $body.'<br/>';
		//die();
		if(core_overrides_mail($from,$to,$subject,$body)){
			watchdog('core_overrides',t('Payment email sent successfully - Administrator'),NULL,WATCHDOG_INFO);
		  //drupal_set_message('Message sent successfully. Our representative will get back to you shortly.','status');		
		}
		else{
			watchdog('core_overrides',t('Error Unable to payment email notification - Administrator'),NULL,WATCHDOG_ERROR);
		}
		/*****Email notification to member****/
		$from = $systemUser->mail;
		$to = $membership_details->field_email_address['und'][0]['value'];
		$subject = 'Thank you for payment at NABC 2017 Membership';
		$email_body = '';
		if(file_exists(drupal_get_path('module','core_overrides').'/email_templates/email_template_payment_confirmation.php')) require(drupal_get_path('module','core_overrides').'/email_templates/email_template_payment_confirmation.php');
		$body    = $email_body;
		//echo $from.'<br/>';
		//echo $to.'<br/>';
		//echo $subject.'<br/>';
		//echo $message.'<br/>';
		//echo $body.'<br/>';
		//die();
		if(core_overrides_mail($from,$to,$subject,$body)){
		watchdog('core_overrides',t('Payment email sent successfully - Member'),NULL,WATCHDOG_INFO);
		  //drupal_set_message('Message sent successfully. Our representative will get back to you shortly.','status');		
		}
		else{
			watchdog('core_overrides',t('Error Unable to payment email notification - Member'),NULL,WATCHDOG_ERROR);
			drupal_set_message('. Try again.','error');	
		}
	}
	
	
}

function core_overrides_paypal_payment_ipn_1(){
    //$file = drupal_get_path('module', 'core_overrides').'/ipn.txt';
    //print $file ; die();
    // Open the file to get existing content
    //$current = file_get_contents($file);
    // Append a new person to the file
    //$request = $_REQUEST;
    //echo "<pre>"; print_r($_REQUEST); echo "</pre>"; die();
    //$current .= http_build_query($request);
    // Write the contents back to the file
    //file_put_contents($file, $current);
	
	global $base_url;
	
	watchdog('core_overrides',t('Paypal Payment Received sent successfully - '.http_build_query($_REQUEST)),NULL,WATCHDOG_INFO);
	
	$membership_number = isset($_REQUEST['item_number']) ? $_REQUEST['item_number'] : '';
	$query_update = new EntityFieldQuery();
    $query_update->entityCondition('entity_type', 'node');
    $query_update->entityCondition('bundle', 'register');
    $query_update->propertyCondition('status', 1);
    $query_update->fieldCondition('field_membership_number', 'value', trim($membership_number) , '=');
    $result = $query_update->execute();
	if($membership_number!='' && isset($result['node'])){
    	$member = $result['node'];
        foreach($member as $reg_member){
            $member_nid = $reg_member->nid;
        }
        $membership_details = node_load($member_nid);
		
		$membership_details->field_payment_transaction_number['und'][0]['value'] = isset($_REQUEST['txn_id']) ? $_REQUEST['txn_id'] : '';
		$membership_details->field_payment_transaction_number['und'][0]['safe_value'] = isset($_REQUEST['txn_id']) ? $_REQUEST['txn_id'] : '';
		
		$membership_details->field_paypal_transaction_id['und'][0]['value'] = isset($_REQUEST['txn_id']) ? $_REQUEST['txn_id'] : '';
		$membership_details->field_paypal_transaction_id['und'][0]['safe_value'] = isset($_REQUEST['txn_id']) ? $_REQUEST['txn_id'] : '';
		
		$membership_details->field_paypal_payment_status['und'][0]['value'] = isset($_REQUEST['payment_status']) ? $_REQUEST['payment_status'] : '';
		$membership_details->field_paypal_payment_status['und'][0]['safe_value'] = isset($_REQUEST['payment_status']) ? $_REQUEST['payment_status'] : '';
		
		$membership_details->field_paypal_email_address['und'][0]['value'] = isset($_REQUEST['payer_email']) ? urldecode($_REQUEST['payer_email']) : '';
		$membership_details->field_paypal_email_address['und'][0]['safe_value'] = isset($_REQUEST['payer_email']) ? urldecode($_REQUEST['payer_email']) : '';
		
		$membership_details->field_payment_date['und'][0]['value'] = isset($_REQUEST['payment_date']) ? urldecode($_REQUEST['payment_date']) : '';
		$membership_details->field_payment_date['und'][0]['safe_value'] = isset($_REQUEST['payment_date']) ? urldecode($_REQUEST['payment_date']) : '';
		
		$membership_details->field_paypal_payer_id['und'][0]['value'] = isset($_REQUEST['payer_id']) ? urldecode($_REQUEST['payer_id']) : '';
		$membership_details->field_paypal_payer_id['und'][0]['safe_value'] = isset($_REQUEST['payer_id']) ? urldecode($_REQUEST['payer_id']) : '';
		
		
		$membership_details->field_payment_status['und'][0]['value'] = (isset($_REQUEST['payment_status']) && $_REQUEST['payment_status'] == 'Completed') ? 'Paid' : 'Pending';
		
		
		//echo "<pre>"; print_r($membership_details); echo "</pre>"; die();
		
		node_save($membership_details);
		$systemUser = user_load_by_name('system_user');
		/*****Email notification to administrator****/
		$from = $systemUser->mail;
		$to = variable_get('site_mail', 'notification@nabc2017.com');
		$subject = 'Paypal Payment Received at NABC 2017 Membership';
		
		$email_body = '';
		if(file_exists(drupal_get_path('module','core_overrides').'/email_templates/email_template_payment_confirmation.php')) require(drupal_get_path('module','core_overrides').'/email_templates/email_template_payment_confirmation.php');
		$body    = $email_body;
		//echo $from.'<br/>';
		//echo $to.'<br/>';
		//echo $subject.'<br/>';
		//echo $message.'<br/>';
		//echo $body.'<br/>';
		//die();
		if(core_overrides_mail($from,$to,$subject,$body)){
			watchdog('core_overrides',t('Payment email sent successfully - Administrator'),NULL,WATCHDOG_INFO);
		  //drupal_set_message('Message sent successfully. Our representative will get back to you shortly.','status');		
		}
		else{
			watchdog('core_overrides',t('Error Unable to payment email notification - Administrator'),NULL,WATCHDOG_ERROR);
		}
		/*****Email notification to member****/
		$from = $systemUser->mail;
		$to = $membership_details->field_email_address['und'][0]['value'];
		$subject = 'Thank you for payment at NABC 2017 Membership';
		$email_body = '';
		if(file_exists(drupal_get_path('module','core_overrides').'/email_templates/email_template_payment_confirmation.php')) require(drupal_get_path('module','core_overrides').'/email_templates/email_template_payment_confirmation.php');
		$body    = $email_body;
		//echo $from.'<br/>';
		//echo $to.'<br/>';
		//echo $subject.'<br/>';
		//echo $message.'<br/>';
		//echo $body.'<br/>';
		//die();
		if(core_overrides_mail($from,$to,$subject,$body)){
		watchdog('core_overrides',t('Payment email sent successfully - Member'),NULL,WATCHDOG_INFO);
		  //drupal_set_message('Message sent successfully. Our representative will get back to you shortly.','status');		
		}
		else{
			watchdog('core_overrides',t('Error Unable to payment email notification - Member'),NULL,WATCHDOG_ERROR);
			drupal_set_message('. Try again.','error');	
		}
	}
	
	
}

/****Sponsor Paypal IPN Notification****/
function core_overrides_paypal_payment_sponsor_ipn(){
    //$file = drupal_get_path('module', 'core_overrides').'/ipn.txt';
    //print $file ; die();
    // Open the file to get existing content
    //$current = file_get_contents($file);
    // Append a new person to the file
    //$request = $_REQUEST;
    //$current .= http_build_query($request);
    // Write the contents back to the file
    //file_put_contents($file, $current);
    
    global $base_url;
    
    watchdog('core_overrides',t('Sponsor Paypal Payment Received sent successfully - '.http_build_query($_REQUEST)),NULL,WATCHDOG_INFO);
    
	$item_number = isset($_REQUEST['item_number']) ? $_REQUEST['item_number'] : '';
	$membership_number = '';
	$member_nid = '';
	$split_item = explode('-',$item_number);
	if(is_array($split_item)){
		$membership_number = $split_item[0];
		$member_nid = $split_item[1];
	}
    /*$membership_number = isset($_REQUEST['item_number']) ? $_REQUEST['item_number'] : '';
    $query = new EntityFieldQuery();
    $query->entityCondition('entity_type', 'node');
    $query->entityCondition('bundle', 'sponsor_registration');
    $query->propertyCondition('status', 1);
    $query->fieldCondition('field_sponsor_membership_number', 'value', $membership_number , '=');
    $result = $query->execute();
    
    if($membership_number!='' && isset($result['node'])){
        $member = $result['node'];
        //echo "<pre>"; print_r($member); print "</pre>";
        foreach($member as $reg_member){
            $member_nid = $reg_member->nid;
        }*/
        
		$membership_details = node_load($member_nid);
        if($membership_details){
        $member_plan = node_load($membership_details->field_sponsor_membership_plan['und'][0]['target_id']);
		$member_plan_name = $member_plan->title;
		$membership_details->field_sponsor_payment_txn_number['und'][0]['value'] = isset($_REQUEST['txn_id']) ? $_REQUEST['txn_id'] : '';
        $membership_details->field_sponsor_payment_txn_number['und'][0]['safe_value'] = isset($_REQUEST['txn_id']) ? $_REQUEST['txn_id'] : '';
        
        $membership_details->field_sponsor_pp_payment_status['und'][0]['value'] = isset($_REQUEST['payment_status']) ? $_REQUEST['payment_status'] : '';
        $membership_details->field_sponsor_pp_payment_status['und'][0]['safe_value'] = isset($_REQUEST['payment_status']) ? $_REQUEST['payment_status'] : '';
        
        $membership_details->field_sponsor_paypal_email_add['und'][0]['value'] = isset($_REQUEST['payer_email']) ? urldecode($_REQUEST['payer_email']) : '';
        $membership_details->field_sponsor_paypal_email_add['und'][0]['safe_value'] = isset($_REQUEST['payer_email']) ? urldecode($_REQUEST['payer_email']) : '';
        
        $membership_details->field_sponsor_payment_date['und'][0]['value'] = isset($_REQUEST['payment_date']) ? urldecode($_REQUEST['payment_date']) : '';
        $membership_details->field_sponsor_payment_date['und'][0]['safe_value'] = isset($_REQUEST['payment_date']) ? urldecode($_REQUEST['payment_date']) : '';
        
        $membership_details->field_sponsor_paypal_payer_id['und'][0]['value'] = isset($_REQUEST['payer_id']) ? urldecode($_REQUEST['payer_id']) : '';
        $membership_details->field_sponsor_paypal_payer_id['und'][0]['safe_value'] = isset($_REQUEST['payer_id']) ? urldecode($_REQUEST['payer_id']) : '';
        
        
        $membership_details->field_sponsor_payment_status['und'][0]['value'] = (isset($_REQUEST['payment_status']) && $_REQUEST['payment_status'] == 'Completed') ? 'Paid' : 'Pending';
        
        
        //echo "<pre>"; print_r($membership_details); echo "</pre>"; die();
        
        node_save($membership_details);
        $systemUser = user_load_by_name('system_user');
        /*****Email notification to administrator****/
        $from = $systemUser->mail;
        $to = variable_get('site_mail', 'notification@nabc2017.com');
        $subject = 'Sponsor Paypal Payment Received at NABC 2017 Membership';
        $email_body = '';
		if(file_exists(drupal_get_path('module','core_overrides').'/email_templates/email_template_payment_confirmation.php')) require(drupal_get_path('module','core_overrides').'/email_templates/email_template_payment_sponsor_confirmation.php');
		$body    = $email_body;
		//echo $from.'<br/>';
        //echo $to.'<br/>';
        //echo $subject.'<br/>';
        //echo $message.'<br/>';
        //echo $body.'<br/>';
        //die();
        if(core_overrides_mail($from,$to,$subject,$body)){
            watchdog('core_overrides',t('Sponsor Payment email sent successfully - Administrator'),NULL,WATCHDOG_INFO);
          //drupal_set_message('Message sent successfully. Our representative will get back to you shortly.','status');     
        }
        else{
            watchdog('core_overrides',t('Error Unable to send sponsor payment email notification - Administrator'),NULL,WATCHDOG_ERROR);
        }
        /*****Email notification to member****/
        $from = $systemUser->mail;
        $to = $membership_details->field_sponsor_email_address['und'][0]['value'];
        $subject = 'Thank you for payment at NABC 2017 Sponsor Membership';
        $email_body = '';
		if(file_exists(drupal_get_path('module','core_overrides').'/email_templates/email_template_payment_confirmation.php')) require(drupal_get_path('module','core_overrides').'/email_templates/email_template_payment_sponsor_confirmation.php');
		$body    = $email_body;
		//echo $from.'<br/>';
        //echo $to.'<br/>';
        //echo $subject.'<br/>';
        //echo $message.'<br/>';
        //echo $body.'<br/>';
        //die();
        if(core_overrides_mail($from,$to,$subject,$body)){
        watchdog('core_overrides',t('Sponsor Payment email sent successfully - Member'),NULL,WATCHDOG_INFO);
          //drupal_set_message('Message sent successfully. Our representative will get back to you shortly.','status');     
        }
        else{
            watchdog('core_overrides',t('Error Unable to send payment email notification - Member'),NULL,WATCHDOG_ERROR);
            drupal_set_message('. Try again.','error'); 
        }
    }
    
    
}
function core_overrides_paypal_payment_sponsor_ipn_1(){
    //$file = drupal_get_path('module', 'core_overrides').'/ipn.txt';
    //print $file ; die();
    // Open the file to get existing content
    //$current = file_get_contents($file);
    // Append a new person to the file
    //$request = $_REQUEST;
    //$current .= http_build_query($request);
    // Write the contents back to the file
    //file_put_contents($file, $current);
    
    global $base_url;
    
    watchdog('core_overrides',t('Sponsor Paypal Payment Received sent successfully - '.http_build_query($_REQUEST)),NULL,WATCHDOG_INFO);
    
    $membership_number = isset($_REQUEST['item_number']) ? $_REQUEST['item_number'] : '';
    $query = new EntityFieldQuery();
    $query->entityCondition('entity_type', 'node');
    $query->entityCondition('bundle', 'sponsor_registration');
    $query->propertyCondition('status', 1);
    $query->fieldCondition('field_sponsor_membership_number', 'value', $membership_number , '=');
    $result = $query->execute();
    
    if($membership_number!='' && isset($result['node'])){
        $member = $result['node'];
        //echo "<pre>"; print_r($member); print "</pre>";
        foreach($member as $reg_member){
            $member_nid = $reg_member->nid;
        }
        $membership_details = node_load($member_nid);
        
        $membership_details->field_sponsor_payment_txn_number['und'][0]['value'] = isset($_REQUEST['txn_id']) ? $_REQUEST['txn_id'] : '';
        $membership_details->field_sponsor_payment_txn_number['und'][0]['safe_value'] = isset($_REQUEST['txn_id']) ? $_REQUEST['txn_id'] : '';
        
        $membership_details->field_sponsor_pp_payment_status['und'][0]['value'] = isset($_REQUEST['payment_status']) ? $_REQUEST['payment_status'] : '';
        $membership_details->field_sponsor_pp_payment_status['und'][0]['safe_value'] = isset($_REQUEST['payment_status']) ? $_REQUEST['payment_status'] : '';
        
        $membership_details->field_sponsor_paypal_email_add['und'][0]['value'] = isset($_REQUEST['payer_email']) ? urldecode($_REQUEST['payer_email']) : '';
        $membership_details->field_sponsor_paypal_email_add['und'][0]['safe_value'] = isset($_REQUEST['payer_email']) ? urldecode($_REQUEST['payer_email']) : '';
        
        $membership_details->field_sponsor_payment_date['und'][0]['value'] = isset($_REQUEST['payment_date']) ? urldecode($_REQUEST['payment_date']) : '';
        $membership_details->field_sponsor_payment_date['und'][0]['safe_value'] = isset($_REQUEST['payment_date']) ? urldecode($_REQUEST['payment_date']) : '';
        
        $membership_details->field_sponsor_paypal_payer_id['und'][0]['value'] = isset($_REQUEST['payer_id']) ? urldecode($_REQUEST['payer_id']) : '';
        $membership_details->field_sponsor_paypal_payer_id['und'][0]['safe_value'] = isset($_REQUEST['payer_id']) ? urldecode($_REQUEST['payer_id']) : '';
        
        
        $membership_details->field_sponsor_payment_status['und'][0]['value'] = (isset($_REQUEST['payment_status']) && $_REQUEST['payment_status'] == 'Completed') ? 'Paid' : 'Pending';
        
        
        //echo "<pre>"; print_r($membership_details); echo "</pre>"; die();
        
        node_save($membership_details);
        $systemUser = user_load_by_name('system_user');
        /*****Email notification to administrator****/
        $from = $systemUser->mail;
        $to = variable_get('site_mail', 'notification@nabc2017.com');
        $subject = 'Sponsor Paypal Payment Received at NABC 2017 Membership';
        $email_body = '';
		if(file_exists(drupal_get_path('module','core_overrides').'/email_templates/email_template_payment_confirmation.php')) require(drupal_get_path('module','core_overrides').'/email_templates/email_template_payment_sponsor_confirmation.php');
		$body    = $email_body;
		//echo $from.'<br/>';
        //echo $to.'<br/>';
        //echo $subject.'<br/>';
        //echo $message.'<br/>';
        //echo $body.'<br/>';
        //die();
        if(core_overrides_mail($from,$to,$subject,$body)){
            watchdog('core_overrides',t('Sponsor Payment email sent successfully - Administrator'),NULL,WATCHDOG_INFO);
          //drupal_set_message('Message sent successfully. Our representative will get back to you shortly.','status');     
        }
        else{
            watchdog('core_overrides',t('Error Unable to send sponsor payment email notification - Administrator'),NULL,WATCHDOG_ERROR);
        }
        /*****Email notification to member****/
        $from = $systemUser->mail;
        $to = $membership_details->field_sponsor_email_address['und'][0]['value'];
        $subject = 'Thank you for payment at NABC 2017 Sponsor Membership';
        $email_body = '';
		if(file_exists(drupal_get_path('module','core_overrides').'/email_templates/email_template_payment_confirmation.php')) require(drupal_get_path('module','core_overrides').'/email_templates/email_template_payment_sponsor_confirmation.php');
		$body    = $email_body;
		//echo $from.'<br/>';
        //echo $to.'<br/>';
        //echo $subject.'<br/>';
        //echo $message.'<br/>';
        //echo $body.'<br/>';
        //die();
        if(core_overrides_mail($from,$to,$subject,$body)){
        watchdog('core_overrides',t('Sponsor Payment email sent successfully - Member'),NULL,WATCHDOG_INFO);
          //drupal_set_message('Message sent successfully. Our representative will get back to you shortly.','status');     
        }
        else{
            watchdog('core_overrides',t('Error Unable to send payment email notification - Member'),NULL,WATCHDOG_ERROR);
            drupal_set_message('. Try again.','error'); 
        }
    }
    
    
}
/********************************/

function core_overrides_member_logout(){
	if(isset($_SESSION['valid_membership_email'])){ unset($_SESSION['valid_membership_email']);}
	if(isset($_SESSION['valid_membership_token'])){ unset($_SESSION['valid_membership_token']);}
	if(isset($_SESSION['valid_membership_nid'])){ unset($_SESSION['valid_membership_nid']);}
	if(isset($_SESSION['valid_membership_number'])){ unset($_SESSION['valid_membership_number']);}
	drupal_set_message('You have logged out successfully.','status');
    drupal_goto('member/login');
}

function core_overrides_sponsor_member_logout(){
    if(isset($_SESSION['valid_sponsor_membership_email'])){ unset($_SESSION['valid_sponsor_membership_email']);}
    if(isset($_SESSION['valid_sponsor_membership_token'])){ unset($_SESSION['valid_sponsor_membership_token']);}
    if(isset($_SESSION['valid_sponsor_membership_nid'])){ unset($_SESSION['valid_sponsor_membership_nid']);}
	if(isset($_SESSION['valid_sponsor_membership_number'])){ unset($_SESSION['valid_sponsor_membership_number']);}
    drupal_set_message('You have logged out successfully.','status');
    drupal_goto('sponsor/login');
}

function core_overrides_membership_login_form($form, $form_state, $no_js_use = FALSE){
    $form['field_email_address'] = array(
    '#title' => t('Email Address'),    
    '#type' => 'textfield',
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'placeholder' => t('email address'),'id'=>'field_email_address',"maxlength"=>"60"),
    '#default_value' => '',
    );
    
    $form['field_email_address_1'] = array(
    '#title' => t('Email Address'),    
    '#type' => 'textfield',
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'placeholder' => t('email address'),'id'=>'field_email_address_1',"maxlength"=>"60"),
    '#default_value' => '',
    );
    
    $form['field_membership_number'] = array(
    '#title' => t('Membership Number'),    
    '#type' => 'textfield',
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'placeholder' => t('membership number'),'id'=>'field_membership_number',"maxlength"=>"16"),
    '#default_value' => '',
    );
    
    $form['field_membership_token'] = array(
    '#title' => t('Login Token'),    
    '#type' => 'textfield',
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'placeholder' => t('login token'),'id'=>'field_membership_token',"maxlength"=>"8"),
    '#default_value' => '',
    );
    
    $form['#method'] = 'post';
    $form['#cache'] = FALSE; 
    $form['#no_cache'] = TRUE; 
    $form_state['cache'] = FALSE;
        
    $form['actions']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Login'),
    '#attributes' => array(
        'class' => array('btn', 'btn-default'),
        'id' => 'login-paid-member-btn',
        ),
    '#name' => 'login-paid-member-btn',  
    '#submit' => array('core_overrides_membership_login_form_submit'),
    '#validate' => array('core_overrides_membership_login_form_validate'),
    );
    
    $form['actions']['submit1'] = array(
    '#type' => 'submit',
    '#value' => t('Login'),
    '#attributes' => array(
        'class' => array('btn', 'btn-default'),
        'id' => 'login-paid-member-btn1',
        ),
    '#name' => 'login-paid-member-btn1',  
    '#submit' => array('core_overrides_membership_login_form_1_submit'),
    '#validate' => array('core_overrides_membership_login_form_1_validate'),
    );

    $form['#method'] = 'post';
    $form['#id'] = 'core_overrides_paid_membership_form';
    $form['#attribute'] = array('#id' => 'core_overrides_paid_membership_form');
    //$form['#validate'][] = 'core_overrides_membership_login_form_validate';  
    //$form['#submit'][] = 'core_overrides_membership_login_form_submit';
    $form['#action'] = url('member/login');
    return $form;
}

function core_overrides_membership_login_form_validate(&$form, &$form_state){
            
        
        //echo "In Paid Member Validation"; echo "<pre>"; print_r($form_state); echo "</pre>"; die(); 
        $field_email_address = $form_state['input']['field_email_address'];
        $field_membership_number = $form_state['input']['field_membership_number'];

		$view = views_get_view('validate_user_login');
		$view->set_display('member_block');
		$view->set_arguments(array($field_email_address,));
		$view->pre_execute();
		$view->execute();
		
		if(count($view->result) > 0){
			//echo "<pre>"; print_r($view->result); echo "</pre>"; die();
			foreach($view->result as $result){
				$membership_email = isset($result->field_field_email_address[0]) ? $result->field_field_email_address[0]['raw']['value'] : '';
				$membership_number = isset($result->field_field_membership_number[0]) ? $result->field_field_membership_number[0]['raw']['value'] : '';
				$member_nid = isset($result->nid) ? $result->nid : '';
			}
		}
       // echo $field_email_address."<br>"; echo $field_membership_number."<br>"; echo $membership_email."<br>"; echo $membership_number."<br>"; echo $member_nid."<br>"; die();
        /*$query = new EntityFieldQuery();
          
        $query->entityCondition('entity_type', 'node');
        $query->entityCondition('bundle', 'register');
        $query->propertyCondition('status', 1);
        $query->fieldCondition('field_email_address', 'value', $field_email_address , '=');
        $query->fieldCondition('field_membership_number', 'value', $field_membership_number , '=');
        $query->fieldCondition('field_payment_status', 'value', 'Paid' , '=');
        
        $result = $query->execute();*/
		
		
        
        if($field_email_address==''){
            form_set_error('field_email_address',t('Please enter email address'));
        }
        if($field_email_address!='' && !valid_email_address($field_email_address)){
            form_set_error('field_email_address',t('Please enter valid email address'));
        }
        
        if($field_membership_number==''){
            form_set_error('field_membership_number',t('Please enter membership number'));
        }
    
        if($membership_email == $field_email_address && $membership_number == $field_membership_number){
           
        }
		else{
		 form_set_error('invalid_information',t('Invalid Email Address or Membership Number. Try again.'));
		}
    }
function core_overrides_membership_login_form_submit($form, &$form_state){
    global $base_url;
    //echo "<h2>Coming Soon!!</h2>"; 
	//echo "<pre>"; print_r($form); echo "</pre>"; 
	//die();
    
    $field_email_address = $form['field_email_address']['#value'];
    $field_membership_number = $form['field_membership_number']['#value'];
    
	$view = views_get_view('validate_user_login');
	$view->set_display('member_block');
	$view->set_arguments(array($field_email_address,));
	$view->pre_execute();
	$view->execute();
	
	if(count($view->result) > 0){
		//echo "<pre>"; print_r($view->result); echo "</pre>"; die();
		foreach($view->result as $result){
			$membership_email = isset($result->field_field_email_address[0]) ? $result->field_field_email_address[0]['raw']['value'] : '';
			$membership_number = isset($result->field_field_membership_number[0]) ? $result->field_field_membership_number[0]['raw']['value'] : '';
			$member_nid = isset($result->nid) ? $result->nid : '';
		}   
	/*$query = new EntityFieldQuery();
          
    $query->entityCondition('entity_type', 'node');
    $query->entityCondition('bundle', 'register');
    $query->propertyCondition('status', 1);
    $query->fieldCondition('field_email_address', 'value', $field_email_address , '=');
    $query->fieldCondition('field_membership_number', 'value', $field_membership_number , '=');
    $query->fieldCondition('field_payment_status', 'value', 'Paid' , '=');
	$result = $query->execute();*/
    //echo "<pre>"; print_r($result['node']); echo "</pre>"; die();
     if(count($view->result) > 0){
           $_SESSION['valid_membership_email'] = $membership_email;
           $_SESSION['valid_membership_number'] = $membership_number;
           $_SESSION['valid_membership_nid'] = $member_nid;
           //$membership_details = get_membership_data($member_nid);
           drupal_goto('member/profile');         
        }
	 } 	
    
}

function core_overrides_membership_login_form_1_validate(&$form, &$form_state){
            
        
        //echo "In Non Paid Member Validation";  echo "<pre>"; print_r($form_state); echo "</pre>"; die(); 
        $field_email_address = $form_state['input']['field_email_address_1'];
        $field_membership_token = $form_state['input']['field_membership_token'];

        
        $query = new EntityFieldQuery();
          
        $query->entityCondition('entity_type', 'node');
        $query->entityCondition('bundle', 'register');
        $query->propertyCondition('status', 1);
        $query->fieldCondition('field_email_address', 'value', $field_email_address , '=');
        $query->fieldCondition('field_membership_token', 'value', $field_membership_token , '=');
        $query->fieldCondition('field_payment_status', 'value', 'Processing' , '=');
        $result = $query->execute();
        
        if($field_email_address==''){
            form_set_error('field_email_address',t('Please enter email address'));
        }
        if($field_email_address!='' && !valid_email_address($field_email_address)){
            form_set_error('field_email_address',t('Please enter valid email address'));
        }
        
        if($field_membership_token==''){
            form_set_error('field_membership_token',t('Please enter login token'));
        }
    
        if(!isset($result['node'])){
            form_set_error('invalid_information',t('Invalid Email Address or Login Token. Try again.'));
        }
    }
function core_overrides_membership_login_form_1_submit($form, &$form_state){
    global $base_url;
    //echo "<pre>"; print_r($form); echo "</pre>"; die();
    $field_email_address = $form['field_email_address_1']['#value'];
    $field_membership_token = $form['field_membership_token']['#value'];
    
    $query = new EntityFieldQuery();
    
    $query->entityCondition('entity_type', 'node');
    $query->entityCondition('bundle', 'register');
    $query->propertyCondition('status', 1);
    $query->fieldCondition('field_email_address', 'value', $field_email_address , '=');
    $query->fieldCondition('field_membership_token', 'value', $field_membership_token , '=');
    $query->fieldCondition('field_payment_status', 'value', 'Processing' , '=');
    $result = $query->execute();
    
    if(isset($result['node'])){
           $member = $result['node'];
           foreach($member as $reg_member){
            $member_nid = $reg_member->nid;
           }
           $_SESSION['valid_membership_email'] = $field_email_address;
           $_SESSION['valid_membership_token'] = $field_membership_token;
           $_SESSION['valid_membership_nid'] = $member_nid;
           $membership_details = get_membership_data($member_nid);
		   if(in_array($membership_details->field_membership['und'][0]['nid'],array(1,2,8))){
           	drupal_goto('registration/complete');
		   }
		   if($membership_details->field_membership['und'][0]['nid'] == 98){
		   	drupal_goto('registration/donor/complete');
		   }
           //$membership_details = get_membership_data($member_nid);
           //echo "<pre>"; print_r($membership_details); echo "</pre>"; die();
           
        }
}

function core_overrides_sponsor_membership_login_form($form, $form_state, $no_js_use = FALSE){
    $form['field_sponsor_email_address'] = array(
    '#title' => t('Email Address'),    
    '#type' => 'textfield',
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'placeholder' => t('email address'),'id'=>'field_sponsor_email_address',"maxlength"=>"60"),
    '#default_value' => '',
    );
    
    $form['field_sponsor_email_address_1'] = array(
    '#title' => t('Email Address'),    
    '#type' => 'textfield',
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'placeholder' => t('email address'),'id'=>'field_sponsor_email_address_1',"maxlength"=>"60"),
    '#default_value' => '',
    );
    
    $form['field_sponsor_membership_number'] = array(
    '#title' => t('Membership Number'),    
    '#type' => 'textfield',
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'placeholder' => t('membership number'),'id'=>'field_sponsor_membership_number',"maxlength"=>"16"),
    '#default_value' => '',
    );
    
    $form['field_sponsor_membership_token'] = array(
    '#title' => t('Login Token'),    
    '#type' => 'textfield',
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'placeholder' => t('login token'),'id'=>'field_sponsor_membership_token',"maxlength"=>"8"),
    '#default_value' => '',
    );
    
    $form['#method'] = 'post';
    $form['#cache'] = FALSE; 
    $form['#no_cache'] = TRUE; 
    $form_state['cache'] = FALSE;
        
    $form['actions']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Login'),
    '#attributes' => array(
        'class' => array('btn', 'btn-default'),
        'id' => 'login-paid-member-btn',
        ),
    '#name' => 'login-paid-member-btn',  
    '#submit' => array('core_overrides_sponsor_membership_login_form_submit'),
    '#validate' => array('core_overrides_sponsor_membership_login_form_validate'),
    );
    
    $form['actions']['submit1'] = array(
    '#type' => 'submit',
    '#value' => t('Login'),
    '#attributes' => array(
        'class' => array('btn', 'btn-default'),
        'id' => 'login-paid-member-btn1',
        ),
    '#name' => 'login-paid-member-btn1',  
    '#submit' => array('core_overrides_sponsor_membership_login_form_1_submit'),
    '#validate' => array('core_overrides_sponsor_membership_login_form_1_validate'),
    );

    $form['#method'] = 'post';
    $form['#id'] = 'core_overrides_paid_sponsor_membership_form';
    $form['#attribute'] = array('#id' => 'core_overrides_paid_sponsor_membership_form');
    //$form['#validate'][] = 'core_overrides_membership_login_form_validate';  
    //$form['#submit'][] = 'core_overrides_membership_login_form_submit';
    $form['#action'] = url('sponsor/login');
    return $form;
}

function core_overrides_sponsor_membership_login_form_validate(&$form, &$form_state){
            
        
        //echo "In Paid Member Validation"; echo "<pre>"; print_r($form_state); echo "</pre>"; die(); 
        $field_email_address = $form_state['input']['field_sponsor_email_address'];
        $field_membership_number = $form_state['input']['field_sponsor_membership_number'];

        $view = views_get_view('validate_user_login');
		$view->set_display('sponsor_block');
		$view->set_arguments(array($field_email_address,));
		$view->pre_execute();
		$view->execute();
		
		if(count($view->result) > 0){
			//echo "<pre>"; print_r($view->result); echo "</pre>"; die();
			foreach($view->result as $result){
				$membership_email = isset($result->field_field_sponsor_email_address[0]) ? $result->field_field_sponsor_email_address[0]['raw']['value'] : '';
				$membership_number = isset($result->field_field_sponsor_membership_number[0]) ? $result->field_field_sponsor_membership_number[0]['raw']['value'] : '';
				$member_nid = isset($result->nid) ? $result->nid : '';
			}
		}
        /*$query = new EntityFieldQuery();
          
        $query->entityCondition('entity_type', 'node');
        $query->entityCondition('bundle', 'sponsor_registration');
        $query->propertyCondition('status', 1);
        $query->fieldCondition('field_sponsor_email_address', 'value', $field_email_address , '=');
        $query->fieldCondition('field_sponsor_membership_number', 'value', $field_membership_number , '=');
        $query->fieldCondition('field_sponsor_payment_status', 'value', 'Paid' , '=');
        
        $result = $query->execute();*/
        
        if($field_email_address==''){
            form_set_error('field_sponsor_email_address',t('Please enter email address'));
        }
        if($field_email_address!='' && !valid_email_address($field_email_address)){
            form_set_error('field_sponsor_email_address',t('Please enter valid email address'));
        }
        
        if($field_membership_number==''){
            form_set_error('field_sponsor_membership_number',t('Please enter membership number'));
        }
    	//echo $membership_number."<br>".$field_membership_number; die();
        if($membership_email == $field_email_address && $membership_number == $field_membership_number){    
        }
		else{
		form_set_error('invalid_information',t('Invalid Email Address or Membership Number. Try again.'));
		}
    }
function core_overrides_sponsor_membership_login_form_submit($form, &$form_state){
    global $base_url;
    //echo "<h2>Coming Soon!!</h2>"; 
	//echo "<pre>"; print_r($form); echo "</pre>"; 
	//die();
    
    $field_email_address = $form['field_sponsor_email_address']['#value'];
    $field_membership_number = $form['field_sponsor_membership_number']['#value'];

	$view = views_get_view('validate_user_login');
	$view->set_display('sponsor_block');
	$view->set_arguments(array($field_email_address,));
	$view->pre_execute();
	$view->execute();
	
	if(count($view->result) > 0){
		//echo "<pre>"; print_r($view->result); echo "</pre>"; die();
		foreach($view->result as $result){
			$membership_email = isset($result->field_field_sponsor_email_address[0]) ? $result->field_field_sponsor_email_address[0]['raw']['value'] : '';
			$membership_number = isset($result->field_field_sponsor_membership_number[0]) ? $result->field_field_sponsor_membership_number[0]['raw']['value'] : '';
			$member_nid = isset($result->nid) ? $result->nid : '';
		}

    
    /*$query = new EntityFieldQuery();
    $query->entityCondition('entity_type', 'node');
    $query->entityCondition('bundle', 'sponsor_registration');
    $query->propertyCondition('status', 1);
    $query->fieldCondition('field_sponsor_email_address', 'value', $field_email_address , '=');
    $query->fieldCondition('field_sponsor_membership_number', 'value', $field_membership_number , '=');
    $query->fieldCondition('field_sponsor_payment_status', 'value', 'Paid' , '=');
    $result = $query->execute();
     if(isset($result['node'])){
	   $member = $result['node'];
	   foreach($member as $reg_member){
		$member_nid = $reg_member->nid;
	   }*/
		   
           $_SESSION['valid_sponsor_membership_email'] = $membership_email;
           $_SESSION['valid_sponsor_membership_number'] = $membership_number;
           $_SESSION['valid_sponsor_membership_nid'] = $member_nid;
           //$membership_details = get_membership_data($member_nid);
           drupal_goto('sponsor/profile'); 
        }
    
}

function core_overrides_sponsor_membership_login_form_1_validate(&$form, &$form_state){
            
        
        //echo "In Non Paid Member Validation";  echo "<pre>"; print_r($form_state); echo "</pre>"; die(); 
        $field_email_address = $form_state['input']['field_sponsor_email_address_1'];
        $field_membership_token = $form_state['input']['field_sponsor_membership_token'];

        
        $query = new EntityFieldQuery();
          
        $query->entityCondition('entity_type', 'node');
        $query->entityCondition('bundle', 'sponsor_registration');
        $query->propertyCondition('status', 1);
        $query->fieldCondition('field_sponsor_email_address', 'value', $field_email_address , '=');
        $query->fieldCondition('field_sponsor_membership_token', 'value', $field_membership_token , '=');
        $query->fieldCondition('field_sponsor_payment_status', 'value', 'Processing' , '=');
        $result = $query->execute();
        
        if($field_email_address==''){
            form_set_error('field_sponsor_email_address',t('Please enter email address'));
        }
        if($field_email_address!='' && !valid_email_address($field_email_address)){
            form_set_error('field_sponsor_email_address',t('Please enter valid email address'));
        }
        
        if($field_membership_token==''){
            form_set_error('field_sponsor_membership_token',t('Please enter login token'));
        }
    
        if(!isset($result['node'])){
            form_set_error('invalid_information',t('Invalid Email Address or Login Token. Try again.'));
        }
    }
function core_overrides_sponsor_membership_login_form_1_submit($form, &$form_state){
    global $base_url;
    //echo "<pre>"; print_r($form); echo "</pre>"; die();
    $field_email_address = $form['field_sponsor_email_address_1']['#value'];
    $field_membership_token = $form['field_sponsor_membership_token']['#value'];
    
    $query = new EntityFieldQuery();
    
    $query->entityCondition('entity_type', 'node');
    $query->entityCondition('bundle', 'sponsor_registration');
    $query->propertyCondition('status', 1);
    $query->fieldCondition('field_sponsor_email_address', 'value', $field_email_address , '=');
    $query->fieldCondition('field_sponsor_membership_token', 'value', $field_membership_token , '=');
    $query->fieldCondition('field_sponsor_payment_status', 'value', 'Processing' , '=');
    $result = $query->execute();
    
    if(isset($result['node'])){
           $member = $result['node'];
           foreach($member as $reg_member){
            $member_nid = $reg_member->nid;
           }
           $_SESSION['valid_sponsor_membership_email'] = $field_email_address;
           $_SESSION['valid_sponsor_membership_token'] = $field_membership_token;
           $_SESSION['valid_sponsor_membership_nid'] = $member_nid;
           $membership_details = get_membership_data($member_nid);
	
		   drupal_goto('sponsor-registration/complete');
           //$membership_details = get_membership_data($member_nid);
           //echo "<pre>"; print_r($membership_details); echo "</pre>"; die();
           
        }
}

function core_overrides_paypal_payment_sponsor_form($form, $form_state, $no_js_use = FALSE){
    global $base_url;
    $paypal_mode = variable_get('paypal_mode'); // sandbox or live
    $membership_number = isset($_GET['membership']) ? $_GET['membership'] : '';
    $query = new EntityFieldQuery();
    $query->entityCondition('entity_type', 'node');
    $query->entityCondition('bundle', 'sponsor_registration');
    $query->propertyCondition('status', 1);
    $query->fieldCondition('field_sponsor_membership_number', 'value', $membership_number , '=');
    $result = $query->execute();
    //echo "<pre>"; print_r($result); print "</pre>"; die();
    if($membership_number!='' && isset($result['node'])){
        $member = $result['node'];
        //echo "<pre>"; print_r($member); print "</pre>";
        foreach($member as $reg_member){
            $member_nid = $reg_member->nid;
        }
        $membership_details = node_load($member_nid);
        $membership_plan_details = get_membership_plan_by_id($membership_details->field_sponsor_membership_plan['und'][0]['target_id']);
        //echo "<pre>"; print_r($membership_details); print "</pre>"; die();
        $form['#attributes'] = array('id'=>'paypal_payment_cc');
        $form['#prefix'] = '<script type="text/javascript">jQuery(document).ready(function(){ jQuery(\'#paypal_payment_cc\').submit(); });</script><div class="paypal_processing_div">Please waiting request is being processed, don\'t click back or refresh</div><div class="loading"></div><div style="display:none;">';
        $form['cmd'] = array(
        '#type' => 'hidden',
         '#value' => '_xclick',
        );  
        $form['business'] = array(
        '#type' => 'hidden',
         //'#value' => ($paypal_mode == 'sandbox') ? 'info1@pskswebservices.com' : 'pskswebservices@gmail.com',
         '#value' => ($paypal_mode == 'sandbox') ? variable_get('paypal_email_address_sandbox') : variable_get('paypal_email_address'),
        );  
        $form['item_name'] = array(
        '#type' => 'hidden',
         '#value' => (count($membership_plan_details) > 0) ? 'NABC2017 Sponsor Membership : '.$membership_plan_details['title'] : '',
        );  
        $form['item_number'] = array(
        '#type' => 'hidden',
         '#value' => $membership_number.'-'.$member_nid,
        ); 
        $form['amount'] = array(
        '#type' => 'hidden',
         '#value' => (isset($membership_details->field_sponsor_amount_paid['und']) ? $membership_details->field_sponsor_amount_paid['und'][0]['value'] : 0.00),
        ); 
         $form['first_name'] = array(
        '#type' => 'hidden',
         '#value' => (isset($membership_details->field_sponsor_first_name['und']) ? $membership_details->field_sponsor_first_name['und'][0]['value'] : ''),
        );
        $form['last_name'] = array(
        '#type' => 'hidden',
         '#value' => (isset($membership_details->field_sponsor_last_name['und']) ? $membership_details->field_sponsor_last_name['und'][0]['value'] : ''),
        );
        $form['address1'] = array(
        '#type' => 'hidden',
         '#value' => (isset($membership_details->field_sponsor_address_1['und']) ? $membership_details->field_sponsor_address_1['und'][0]['value'] : ''),
        );
        $form['address2'] = array(
        '#type' => 'hidden',
         '#value' => (isset($membership_details->field_sponsor_address_2['und']) ? $membership_details->field_sponsor_address_2['und'][0]['value'] : ''),
        );
         $form['city'] = array(
        '#type' => 'hidden',
         '#value' => (isset($membership_details->field_sponsor_city['und']) ? $membership_details->field_sponsor_city['und'][0]['value'] : ''),
        );
        $form['state'] = array(
        '#type' => 'hidden',
         '#value' => ($membership_details->field_sponsor_country['und'][0]['iso2'] == 'US' && isset($membership_details->field_sponsor_state['und']) ? $membership_details->field_sponsor_state['und'][0]['value'] : $membership_details->field_sponsor_state_others['und'][0]['value']),
        );
        $form['zip'] = array(
        '#type' => 'hidden',
         '#value' => (isset($membership_details->field_sponsor_zip_code['und']) ? $membership_details->field_sponsor_zip_code['und'][0]['value'] : ''),
        );
        $form['night_phone_a'] = array(
        '#type' => 'hidden',
         '#value' => (isset($membership_details->field_sponsor_phone_number['und']) ? $membership_details->field_sponsor_phone_number['und'][0]['value'] : ''),
        );
        $form['night_phone_b'] = array(
        '#type' => 'hidden',
         '#value' => '',
        );
        $form['night_phone_c'] = array(
        '#type' => 'hidden',
         '#value' => '',
        );
        $form['email'] = array(
        '#type' => 'hidden',
         '#value' => (isset($membership_details->field_sponsor_email_address['und']) ? $membership_details->field_sponsor_email_address['und'][0]['value'] : ''),
        );
        $form['currency_code'] = array(
        '#type' => 'hidden',
         '#value' => 'USD',
        );
        $form['country'] = array(
        '#type' => 'hidden',
         '#value' => (isset($membership_details->field_sponsor_country['und']) ? $membership_details->field_sponsor_country['und'][0]['iso2'] : ''),
        );
        
        $form['return'] = array(
        '#type' => 'hidden',
         '#value' => $base_url.'/payment/success',
        );
        $form['notify_url'] = array(
        '#type' => 'hidden',
         '#value' => $base_url.'/paypal/ipn/sponsor',
        );
        $form['cancel_return'] = array(
        '#type' => 'hidden',
         '#value' => $base_url.'/payment/cancel',
        );       
        $form['#suffix'] = '</div>';
        $form['#method'] = 'post';
        $form['#cache'] = FALSE; 
        $form['#no_cache'] = TRUE; 
        $form_state['cache'] = FALSE;
        $form['#action'] = ($paypal_mode == 'sandbox') ? 'https://www.sandbox.paypal.com/cgi-bin/webscr' : 'https://www.paypal.com/cgi-bin/webscr';
        return $form;
    }
}

function core_overrides_paypal_payment_form($form, $form_state, $no_js_use = FALSE){
    global $base_url;
    $paypal_mode = variable_get('paypal_mode'); // sandbox or live
	$membership_number = isset($_GET['membership']) ? $_GET['membership'] : '';
	$query = new EntityFieldQuery();
    $query->entityCondition('entity_type', 'node');
    $query->entityCondition('bundle', 'register');
    $query->propertyCondition('status', 1);
    $query->fieldCondition('field_membership_number', 'value', $membership_number , '=');
    $result = $query->execute();
    
	if($membership_number!='' && isset($result['node'])){
    	$member = $result['node'];
    	//echo "<pre>"; print_r($member); print "</pre>";
        foreach($member as $reg_member){
            $member_nid = $reg_member->nid;
        }
        $membership_details = node_load($member_nid);
        $membership_plan_details = get_membership_plan_by_id($membership_details->field_membership['und'][0]['nid']);
        //echo "<pre>"; print_r($membership_details); print "</pre>"; die();
        $form['#attributes'] = array('id'=>'paypal_payment_cc');
        $form['#prefix'] = '<script type="text/javascript">jQuery(document).ready(function(){ jQuery(\'#paypal_payment_cc\').submit(); });</script><div class="paypal_processing_div">Please waiting request is being processed, don\'t click back or refresh</div><div class="loading"></div><div style="display:none;">';
        $form['cmd'] = array(
        '#type' => 'hidden',
         '#value' => '_xclick',
        );  
        $form['business'] = array(
        '#type' => 'hidden',
         //'#value' => ($paypal_mode == 'sandbox') ? 'info1@pskswebservices.com' : 'pskswebservices@gmail.com',
         '#value' => ($paypal_mode == 'sandbox') ? variable_get('paypal_email_address_sandbox') : variable_get('paypal_email_address'),
        );  
        $form['item_name'] = array(
        '#type' => 'hidden',
         '#value' => (count($membership_plan_details) > 0) ? 'NABC2017 Membership Number : '.$membership_plan_details['title'] : '',
        );  
        $form['item_number'] = array(
        '#type' => 'hidden',
         '#value' => $membership_number.'-'.$member_nid,
        ); 
        $form['amount'] = array(
        '#type' => 'hidden',
         '#value' => (isset($membership_details->field_amount_paid['und']) ? $membership_details->field_amount_paid['und'][0]['value'] : 0.00),
        ); 
         $form['first_name'] = array(
        '#type' => 'hidden',
         '#value' => (isset($membership_details->field_first_name['und']) ? $membership_details->field_first_name['und'][0]['value'] : ''),
        );
        $form['last_name'] = array(
        '#type' => 'hidden',
         '#value' => (isset($membership_details->field_last_name['und']) ? $membership_details->field_last_name['und'][0]['value'] : ''),
        );
        $form['address1'] = array(
        '#type' => 'hidden',
         '#value' => (isset($membership_details->field_address['und']) ? $membership_details->field_address['und'][0]['value'] : ''),
        );
        $form['address2'] = array(
        '#type' => 'hidden',
         '#value' => (isset($membership_details->field_address_1['und']) ? $membership_details->field_address_1['und'][0]['value'] : ''),
        );
         $form['city'] = array(
        '#type' => 'hidden',
         '#value' => (isset($membership_details->field_city['und']) ? $membership_details->field_city['und'][0]['value'] : ''),
        );
        $form['state'] = array(
        '#type' => 'hidden',
         '#value' => ($membership_details->field_country['und'][0]['iso2'] == 'US' && isset($membership_details->field_state['und']) ? $membership_details->field_state['und'][0]['value'] : $membership_details->field_state_others['und'][0]['value']),
        );
        $form['zip'] = array(
        '#type' => 'hidden',
         '#value' => (isset($membership_details->field_zip_code['und']) ? $membership_details->field_zip_code['und'][0]['value'] : ''),
        );
        $form['night_phone_a'] = array(
        '#type' => 'hidden',
         '#value' => (isset($membership_details->field_mobile_phone['und']) ? $membership_details->field_mobile_phone['und'][0]['value'] : ''),
        );
        $form['night_phone_b'] = array(
        '#type' => 'hidden',
         '#value' => '',//(isset($membership_details->field_evening_phone['und']) ? $membership_details->field_evening_phone['und'][0]['value'] : ''),
        );
        $form['night_phone_c'] = array(
        '#type' => 'hidden',
         '#value' => '',
        );
        $form['email'] = array(
        '#type' => 'hidden',
         '#value' => (isset($membership_details->field_email_address['und']) ? $membership_details->field_email_address['und'][0]['value'] : ''),
        );
        $form['currency_code'] = array(
        '#type' => 'hidden',
         '#value' => 'USD',
        );
        $form['country'] = array(
        '#type' => 'hidden',
         '#value' => (isset($membership_details->field_country['und']) ? $membership_details->field_country['und'][0]['iso2'] : ''),
        );
        
        $form['return'] = array(
        '#type' => 'hidden',
         '#value' => $base_url.'/payment/success',
        );
        $form['notify_url'] = array(
        '#type' => 'hidden',
         '#value' => $base_url.'/paypal/ipn',
        );
        $form['cancel_return'] = array(
        '#type' => 'hidden',
         '#value' => $base_url.'/payment/cancel',
        );       
        $form['#suffix'] = '</div>';
        $form['#method'] = 'post';
        $form['#cache'] = FALSE; 
        $form['#no_cache'] = TRUE; 
        $form_state['cache'] = FALSE;
        $form['#action'] = ($paypal_mode == 'sandbox') ? 'https://www.sandbox.paypal.com/cgi-bin/webscr' : 'https://www.paypal.com/cgi-bin/webscr';
        return $form;
    }
}
/*********************Upgrade Membership****************************/
function core_overrides_membership_upgrade_form($form, $form_state, $no_js_use = FALSE){
	global $language;
	$currentLanguage = $language->language;
	
	$member_nid = isset($_SESSION['valid_membership_nid']) ? $_SESSION['valid_membership_nid'] : '';
    $membership_email = isset($_SESSION['valid_membership_email']) ? $_SESSION['valid_membership_email'] : '';
    $membership_token = isset($_SESSION['valid_membership_number']) ? $_SESSION['valid_membership_number'] : '';
	
	$membership_types = get_membership_types();
	$membership_types_option = array();
	if(count($membership_types) > 0){
	$membership_types_option[''] = t('Select');    
	foreach($membership_types as $membership_type){
		$membership_types_option[$membership_type['nid'].'|'.$membership_type['subscription_amount']] = t($membership_type['title']);
		}
	}
	
	$countries_option = get_countries_list();
	$state_list_us_option = get_state_list_us();
	$alumni_universities = get_alumni_university();
	$alumni_universities_option = array();
	if(count($alumni_universities) > 0){
	$alumni_universities_option[''] = t('Select');      
	foreach($alumni_universities as $alumni_university){
		$alumni_universities_option[$alumni_university['nid']] = t($alumni_university['title']);
		}
	}
	$alumni_year = get_alumni_year();
	
	$business_forums = get_business_forums();
	$business_forums_option = array();
	if(count($business_forums) > 0){    
	foreach($business_forums as $business_forum){
		$business_forums_option[$business_forum['nid']] = t($business_forum['title']);
		}
	}
	
	$tourisms = get_tourism_list();
	$tourism_option = array();
	if(count($tourisms) > 0){
	$tourism_option[''] = t('Select');     
	foreach($tourisms as $tourism){
		$tourism_option[$tourism['nid']] = t($tourism['title']);
		}
	}	
	/*$cruise_list = get_cruise_list();
	$cruise_list_option = array();
	if(count($cruise_list) > 0){
	   $cruise_list_option[''] = t('Select'); 
	foreach($cruise_list as $cruise){
		$cruise_list_option[$cruise['nid'].'|'.$cruise['cruise_price']] = t($cruise['title']);
		}
	}*/
    $meal_plan_list = get_meal_plan_list();
    $meal_plan_option = array();
    if(count($meal_plan_list) > 0){
    $meal_plan_option[''] = t('Select');     
    foreach($meal_plan_list as $meal_plan){
        $meal_plan_option[$meal_plan['nid'].'|'.$meal_plan['meal_plan_price']] = t($meal_plan['title']);
        }
    }
	
	$hotels = get_hotel_list();
	$hotels_option = array();
	if(count($hotels) > 0){
	$hotels_option[''] = t('Select');      
	foreach($hotels as $hotel){
		$hotels_option[$hotel['nid']] = t($hotel['title']);
		}
	}
	//echo "<pre>"; print_r($countries_option); echo "</pre>"; die();
	
	$saved_member_data = get_membership_data($member_nid);
    //echo "<pre>"; print_r($saved_member_data); echo "</pre>"; die();
    
	
	if($saved_member_data){
	
	$additional_member_stats = get_additional_member_statistics($saved_member_data);
	
	$_SESSION['valid_membership_number'] = $saved_member_data->field_membership_number['und'][0]['value'];
	$membership_type = get_membership_type_by_nid($saved_member_data->field_membership['und'][0]['nid']);
    $meal_plan = isset($saved_member_data->field_meal_plan['und']) ? get_meal_plan_by_id($saved_member_data->field_meal_plan['und'][0]['nid']) : '';
    //$cruise_plan = get_cruise_by_id($saved_member_data->field_cruise['und'][0]['nid']);
	
	$form = array();
	
	$form['field_alumni_univ'] = array(
	'#title' => t('Alumni'),
    '#type' => 'select',
    '#options' => $alumni_universities_option,
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id'=>'field_alumni_univ',),
    '#default_value' => isset($saved_member_data->field_alumni_univ['und']) ? $saved_member_data->field_alumni_univ['und'][0]['nid'] : '',
  	);
	
	$form['field_alumni_year'] = array(
	'#title' => t('Graduation Year'),
    '#type' => 'select',
    '#options' => $alumni_year,
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id'=>'field_alumni_year',),
	'#default_value' => isset($saved_member_data->field_alumni_year['und']) ? date('Y',strtotime($saved_member_data->field_alumni_year['und'][0]['value'])) : '',
  	);

	$form['field_business_forums'] = array(
	'#title' => t('Business Forums'),
	'#type' => 'select',
	'#options' => $business_forums_option,
	'#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id'=>'field_business_forums',),
	'#default_value' => isset($saved_member_data->field_business_forums['und']) ? get_business_form_values($saved_member_data->field_business_forums['und']) : '',
	'#multiple' => TRUE,
        );
	$form['field_tourism'] = array(
	'#title' => t('Tourism'),
	'#type' => 'select',
	'#options' => $tourism_option,
	'#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id'=>'field_business_forums',),
	'#default_value' => isset($saved_member_data->field_tourism['und']) ? get_tourism_values($saved_member_data->field_tourism['und']) : '',
	'#multiple' => TRUE,
	);	
	
	$form['field_attend_reunion'] = array(
	'#title' => t('Attend Re-Union'),
	'#type' => 'select',
	'#options' => array(''=>t('Select'),'yes'=>t('Yes'),'no'=>t('No')),
	'#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'), 'onchange'=>'javascript:update_total_price();','id'=>'field_attend_reunion',),
	'#default_value' => isset($saved_member_data->field_attend_reunion['und']) ? $saved_member_data->field_attend_reunion['und'][0]['value'] : '',
	);		
    
    $form['field_meal_plan'] = array(
    '#title' => t('Meal Plan'),
    '#type' => 'select',
    '#options' => $meal_plan_option,
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id'=>'field_meal_plan', 'onchange' => 'javascript:'),
    '#default_value' => ($meal_plan) ? $meal_plan['nid'].'|'.$meal_plan['meal_plan_price'] : '',
	'#disabled' => TRUE,
    );  
   if($saved_member_data->field_sunday_night_show['und'][0]['value'] == 'No'){ 
	   $form['field_sunday_night_show'] = array(
		'#title' => t('Sunday Night Show'),
		'#type' => 'select',
		'#options' => array(''=>t('Select'),'Yes'=>t('Yes'),'No'=>t('No')),
		'#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'), 'onchange'=>'javascript:update_total_price();','id'=>'field_sunday_night_show',),
		'#default_value' => $saved_member_data->field_sunday_night_show['und'][0]['value'],
		);
	}
	if(isset($saved_member_data->field_hotel['und']) && $saved_member_data->field_hotel['und'][0]['nid'] == '251'){
		$form['field_hotel'] = array(
		'#title' => t('Hotel'),
		'#type' => 'select',
		'#options' => $hotels_option,
		'#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id'=>'field_hotel', 'onchange' => 'javascript: update_total_price();'),
		'#default_value' => isset($saved_member_data->field_hotel['und']) ? $saved_member_data->field_hotel['und'][0]['nid'] : '',
		);
	}
    
	/**Add On Members Fields**/
	
	if (empty($form_state['add_members'])) {
        $form_state['add_members'] = 7;
    }
    
	$form['field_additional_members'] = array(
	  '#type' => 'container', 
	  '#title' => t('Additional Members'),  
	  '#collapsible' => FALSE, 
	  '#tree' => TRUE,
	  '#prefix' => '<div class="col-sm-12 center-xs wow fadeInLeft animated"><div id="additional-members-wrapper" class="additional-members-wrapper"> <h5 class="form-heading" id="step2-form-heading">Additional Member Information</h5></div>',
   	  '#suffix' => '<div class="col-sm-12 center-xs wow fadeInLeft animated add_more_sponsor_badge_container"><div class="form-group"><button class="btn btn-sm btn-primary add_more_member_info_btn" id="add_more_member_info_btn">Add More</button></div></div></div>',
	);
	$k = 1;
	$no_of_pre_fillled_additional_members = 0;
        for ($i = 0; $i < $form_state['add_members']; $i++) {
		$meal_plan_add_on = false;
		//$cruise_plan_add_on = false;
		$variable_meal_plan_obj = 'field_meal_plan_additional_'.$k; 
		//$variable_cruise_plan_obj = 'field_cruise_additional_'.$k;  
        if(isset($saved_member_data->{$variable_meal_plan_obj}['und'])){ 
		  
		$meal_plan_add_on = get_meal_plan_by_id($saved_member_data->{$variable_meal_plan_obj}['und'][0]['nid']);
		}
		/*if(isset($saved_member_data->{$variable_cruise_plan_obj}['und'])){
			$cruise_plan_add_on = get_cruise_by_id($saved_member_data->{$variable_cruise_plan_obj}['und'][0]['nid']);    
		}*/
		$variable_first_name_obj = 'field_first_name_additional_'.$k; 
		//$variable_middle_name_obj = 'field_middle_name_additional_'.$k;
		$variable_last_name_obj = 'field_last_name_additional_'.$k;
		$variable_relation_obj = 'field_relation_additional_'.$k;
		$variable_alumni_univ_obj = 'field_alumni_univ_additional_'.$k;
		//$variable_alumni_year_obj = 'field_alumni_year_additional_'.$k;
		$variable_sunday_night_show_obj = 'field_sunday_ns_additional_'.$k;
		
		 
		
        $form['field_additional_members']['member'][$i] = array(
          '#type' => 'fieldset', 
          '#tree' => TRUE,
		  '#attributes' => array('class' => array('form_wrapper_additional_members'),),
        );
		
        
		if (isset($saved_member_data->{$variable_first_name_obj}['und']) && $saved_member_data->{$variable_first_name_obj}['und'][0]['value'] != ''){ $no_of_pre_fillled_additional_members++; } 
		
		
        $form['field_additional_members']['member'][$i]['field_first_name_add_on'] = array(
        '#title' => t('First Name'.' '.($i+1)), 
        '#type' => 'textfield',
        
        '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'placeholder' => t('first name'),'id' => 'field_first_name_add_on_'.$i,'onblur'=>'javascript:update_total_price();',"maxlength"=>"30",'autocomplete' => 'off'),
        '#default_value' => '',
        '#prefix' => '<div class="col-sm-2 center-xs wow fadeInLeft animated"><div class="form-group">',
        '#suffix' => '</div></div>',
        '#group' => 'field_additional_members',
        '#default_value' => isset($saved_member_data->{$variable_first_name_obj}['und']) ? $saved_member_data->{$variable_first_name_obj}['und'][0]['value'] : '',
		'#disabled' => (isset($saved_member_data->{$variable_first_name_obj}['und']) && $saved_member_data->{$variable_first_name_obj}['und'][0]['value'] != '') ? TRUE : FALSE,
        );
        
        /*$form['field_additional_members']['member'][$i]['field_middle_name_add_on'] = array(
        '#title' => t('Middle Name'.' '.($i+1)),    
        '#type' => 'textfield',
        
        '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'placeholder' => t('middle name'),'id' => 'field_middle_name_add_on_'.$i,"maxlength"=>"30"),
        '#default_value' => '',
        '#prefix' => '<div class="col-sm-4 center-xs wow fadeInLeft animated"><div class="form-group">',
        '#suffix' => '</div></div>',
        '#group' => 'field_additional_members',
        '#default_value' => isset($saved_member_data->{$variable_middle_name_obj}['und']) ? $saved_member_data->{$variable_middle_name_obj}['und'][0]['value'] : '',
        );*/
        
        $form['field_additional_members']['member'][$i]['field_last_name_add_on'] = array(
        '#title' => t('Last Name'.' '.($i+1)),  
        '#type' => 'textfield',
        
        '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'placeholder' => t('last name'),'id' => 'field_last_name_add_on_'.$i,"maxlength"=>"30",'autocomplete' => 'off'),
        '#default_value' => '',
        '#prefix' => '<div class="col-sm-2 center-xs wow fadeInLeft animated"><div class="form-group">',
        '#suffix' => '</div></div>',
        '#group' => 'field_additional_members',
        '#default_value' => isset($saved_member_data->{$variable_last_name_obj}['und']) ? $saved_member_data->{$variable_last_name_obj}['und'][0]['value'] : '',
		'#disabled' => (isset($saved_member_data->{$variable_first_name_obj}['und']) && $saved_member_data->{$variable_first_name_obj}['und'][0]['value'] != '') ? TRUE : FALSE,
        );
        
        $form['field_additional_members']['member'][$i]['field_relation_add_on'] = array(
        '#title' => t('Relation'.' '.($i+1)),   
        '#type' => 'select',
        
        '#options' => array(''=> t('Select'), 'Child' => t('Child (5-18 Years)'),'Spouse' => t('Spouse'),'Parent' => t('Parent')),
        '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id' => 'field_relation_add_on_'.$i,'autocomplete' => 'off'),
        '#prefix' => '<div class="col-sm-2 center-xs wow fadeInLeft animated"><div class="form-group">',
        '#suffix' => '</div></div>',
        '#group' => 'field_additional_members',
        '#default_value' => isset($saved_member_data->{$variable_relation_obj}['und']) ? $saved_member_data->{$variable_relation_obj}['und'][0]['value'] : '',
		'#disabled' => (isset($saved_member_data->{$variable_first_name_obj}['und']) && $saved_member_data->{$variable_first_name_obj}['und'][0]['value'] != '') ? TRUE : FALSE,
        );
        
        $form['field_additional_members']['member'][$i]['field_alumni_univ_add_on']= array(
        '#title' => t('Alumni '.' '.($i+1)),
        '#type' => 'select',
        
        '#options' => $alumni_universities_option,
        '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id' => 'field_alumni_univ_add_on_'.$i,'autocomplete' => 'off'),
        '#prefix' => '<div class="col-sm-2 center-xs wow fadeInLeft animated"><div class="form-group">',
        '#suffix' => '</div></div>',
        '#group' => 'field_additional_members',
        '#default_value' => isset($saved_member_data->{$variable_alumni_univ_obj}['und'][0]) ? $saved_member_data->{$variable_alumni_univ_obj}['und'][0]['nid'] : '',
		);
        
        /*$form['field_additional_members']['member'][$i]['field_alumni_year_add_on']= array(
        '#title' => t('Alumni Year'.' '.($i+1)),
        '#type' => 'select',
        
        '#options' => $alumni_year,
        '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id' => 'field_alumni_year_add_on_'.$i,),
        '#default_value' => '',
        '#prefix' => '<div class="col-sm-4 center-xs wow fadeInLeft animated"><div class="form-group">',
        '#suffix' => '</div></div>',
        '#group' => 'field_additional_members',
        '#default_value' => isset($saved_member_data->{$variable_alumni_year_obj}['und']) ? date('Y',strtotime($saved_member_data->{$variable_alumni_year_obj}['und'][0]['value'])) : '',
        );
        
        $form['field_additional_members']['member'][$i]['field_cruise_add_on'] = array(
        '#title' => t('Cruise'.' '.($i+1)),
        '#type' => 'select',
        
        '#options' => $cruise_list_option,
        '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id' => 'field_cruise_add_on_'.$i,),
        '#prefix' => '<div class="col-sm-6 center-xs wow fadeInLeft animated"><div class="form-group">',
        '#suffix' => '</div></div>',
        '#group' => 'field_additional_members',
        '#default_value' => ($cruise_plan_add_on) ? $cruise_plan_add_on['nid'].'|'.$cruise_plan_add_on['cruise_price'] : '',
        );  
        
        $form['field_additional_members']['member'][$i]['field_meal_plan_add_on'] = array(
        '#title' => t('Meal Plan'.' '.($i+1)),
        '#type' => 'select',  
        '#prefix' => '<div class="col-sm-6 center-xs wow fadeInLeft animated"><div class="form-group">',
        '#suffix' => '</div></div>',
        '#options' => $meal_plan_option,
        '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id' => 'field_meal_plan_add_on_'.$i,),
        '#default_value' => ($meal_plan_add_on) ? $meal_plan_add_on['nid'].'|'.$meal_plan_add_on['meal_plan_price'] : '',
        );  */
        
        $form['field_additional_members']['member'][$i]['field_sunday_night_show_add_on'] = array(
        '#title' => t('Sunday Night Show'.' '.($i+1)),
        '#type' => 'select',
        '#prefix' => '<div class="col-sm-4 center-xs wow fadeInLeft animated"><div class="form-group col-sm-6 col-md-offset-3">',
        '#suffix' => '</div></div>',
        '#options' => array(''=>t('Select'),'yes'=>t('Yes'),'no'=>t('No')),
        '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'), 'onchange'=>'javascript:update_total_price();','id' => 'field_sunday_night_show_add_on_'.$i,'autocomplete' => 'off'),
        '#default_value' => isset($saved_member_data->{$variable_sunday_night_show_obj}['und'][0]) ? $saved_member_data->{$variable_sunday_night_show_obj}['und'][0]['value'] : '',
		'#disabled' => ((isset($saved_member_data->{$variable_sunday_night_show_obj}['und']) && $saved_member_data->{$variable_sunday_night_show_obj}['und'][0]['value'] == 'no') || !isset($saved_member_data->{$variable_sunday_night_show_obj}['und'])) ? FALSE : TRUE,
        );
        	$k++;
        }
	$_SESSION['no_of_pre_fillled_additional_members'] = $no_of_pre_fillled_additional_members;
	$form['actions']['button'] = array(
    '#type' => 'button',
    '#value' => t('Modify Details'),
    '#attributes' => array(
		'class' => array('btn', 'btn-default'),
		'id' => 'backbtn4',
		'onclick' => 'javascript: reg_goto(\'step1\');',
		),
  	'#name' => 'backbtn4',
	'#submit' => array('core_overrides_membership_upgrade_previous'),	
    );
	
	
	$form['actions']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Register & Pay'),
    '#attributes' => array(
		'class' => array('btn', 'btn-default'),
		'id' => 'register-pay-member-btn',
		
		),
  	'#name' => 'submit-registration-pay',
	'#submit' => array('core_overrides_membership_upgrade_form_pay_submit'),	
    );
	
	$form['field_subscription_price'] = array(
    '#type' => 'hidden',
    '#default_value' => '',
    '#attributes' => array(
		'id' => 'field_subscription_price',
		),
  	'#name' => 'field_subscription_price',
    );
	
	$form['#method'] = 'post';
	
	$form['#action'] = url('member/upgrade');
    
    /*$form_id = 'membership_registration';
    if (isset($form['#token']) && $form['#token'] !== FALSE) {
       $form['#token'] = FALSE;
     }
    else{
      $form['#token'] = $form_id;
     }
    
    $form ['form_token'] = array(
      '#id' => drupal_html_id('edit-' . $form_id . '-form-token'),
      '#type' => 'token',
      '#default_value' => drupal_get_token($form['#token']),
      '#parents' => array('form_token'),
    );  */
    
	$form['#validate'][] = 'core_overrides_membership_upgrade_form_validate';	
	//$form['#submit'][] = 'core_overrides_membership_upgrade_form_submit';
    
    $form['#cache'] = FALSE; 
    $form['#no_cache'] = TRUE; 
    $form_state['cache'] = FALSE; 
    
	return $form;
	}
}
/*******************************************************************/
/*********************Standard Registration*************************/
function core_overrides_membership_registration_form($form, $form_state, $no_js_use = FALSE){
	global $language;
	$currentLanguage = $language->language;
	
	$membership_types = get_membership_types();
	$membership_types_option = array();
	if(count($membership_types) > 0){
	$membership_types_option[''] = t('Select');    
	foreach($membership_types as $membership_type){
		$membership_types_option[$membership_type['nid'].'|'.$membership_type['subscription_amount']] = t($membership_type['title']);
		}
	}
	
	$countries_option = get_countries_list();
	$state_list_us_option = get_state_list_us();
	$alumni_universities = get_alumni_university();
	$alumni_universities_option = array();
	if(count($alumni_universities) > 0){
	$alumni_universities_option[''] = t('Select');      
	foreach($alumni_universities as $alumni_university){
		$alumni_universities_option[$alumni_university['nid']] = t($alumni_university['title']);
		}
	}
	$alumni_year = get_alumni_year();
    
	$business_forums = get_business_forums();
	$business_forums_option = array();
	if(count($business_forums) > 0){
	//$business_forums_option[''] = t('Select');     
	foreach($business_forums as $business_forum){
		$business_forums_option[$business_forum['nid']] = t($business_forum['title']);
		}
	}
	$tourisms = get_tourism_list();
	$tourism_option = array();
	if(count($tourisms) > 0){
	//$tourism_option[''] = t('Select');     
	foreach($tourisms as $tourism){
		$tourism_option[$tourism['nid']] = t($tourism['title']);
		}
	}
	
	$cruise_list = get_cruise_list();
	$cruise_list_option = array();
	if(count($cruise_list) > 0){
	   $cruise_list_option[''] = t('Select'); 
	foreach($cruise_list as $cruise){
		$cruise_list_option[$cruise['nid'].'|'.$cruise['cruise_price']] = t($cruise['title']);
		}
	}
    $meal_plan_list = get_meal_plan_list();
    $meal_plan_option = array();
    if(count($meal_plan_list) > 0){
    $meal_plan_option[''] = t('Select');     
    foreach($meal_plan_list as $meal_plan){
        $meal_plan_option[$meal_plan['nid'].'|'.$meal_plan['meal_plan_price']] = t($meal_plan['title']);
        }
    }
	//echo "<pre>"; print_r($countries_option); echo "</pre>"; die();
	
	$form = array();
	
	$form['field_membership_type'] = array(
	'#title' => t('Membership Type'),
    '#type' => 'select',
    '#options' => $membership_types_option,
    '#attributes' => array('class'=> array('c-select','form-control input-sm mrgn-bttm-md'), "id"=>"field_membership_type",),
    '#default_value' => '',
    );	
    
    $form['field_member_title'] = array(
    '#title' => t('Title'),
    '#type' => 'select',
    '#options' => array(''=>t('Select'),'Dr.'=>t('Dr.'),'Mr.'=>t('Mr.'),'Mrs.'=>t('Mrs.'),'Ms.'=>t('Ms.'),'Miss'=>t('Miss'),'Master'=>t('Master')),
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id'=>'field_member_title',),
    '#default_value' => '',
    );
	
	$form['field_first_name'] = array(
	'#title' => t('First Name'),	
    '#type' => 'textfield',
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'placeholder' => t('first name'),'id'=>'field_first_name',"maxlength"=>"30"),
  	'#default_value' => '',
	);
	
	$form['field_middle_name'] = array(
	'#title' => t('Middle Name'),	
    '#type' => 'textfield',
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'placeholder' => t('middle name'),'id'=>'field_middle_name',"maxlength"=>"30"),
  	'#default_value' => '',
	);
	
	$form['field_last_name'] = array(
	'#title' => t('Last Name'),	
    '#type' => 'textfield',
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'), 'placeholder' => t('last name'),'id'=>'field_last_name',"maxlength"=>"30"),
  	'#default_value' => '',
	);
	
	$form['field_address'] = array(
	'#title' => t('Address 1'),
    '#type' => 'textfield',
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'placeholder' => t('address - house number, street name'),'id'=>'field_address',"maxlength"=>"100"),
	); 
	
	$form['field_address_1'] = array(
	'#title' => t('Address 2'),
    '#type' => 'textfield',
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'placeholder' => t('unit,apt,ste'),'id'=>'field_address_1',"maxlength"=>"100"),
	); 

	
	/*$form['field_country_of_origin'] = array(
	'#title' => t('Country of Origin'),
    '#type' => 'select',
    '#options' => $countries_option,
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id'=>'field_country_of_origin',),
    '#default_value' => 'IN',
  	);*/
	
	$form['field_country'] = array(
	'#title' => t('Country'),
    '#type' => 'select',
	'#default_value' => 'US',
    '#options' => $countries_option,
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id'=>'field_country','onchange'=>'javascript:changeStateForm();'),
  	);
	
	$form['field_city'] = array(
	'#title' => t('City'),	
    '#type' => 'textfield',
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'), 'placeholder' => t('city'),'id'=>'field_city', "maxlength"=>"30"),
  	'#default_value' => '',
	);
	
	$form['field_state'] = array(
	'#title' => t('State (US)'),
    '#type' => 'select',
    '#options' => $state_list_us_option,
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id'=>'field_state',),
  	);
	
	$form['field_state_others'] = array(
	'#title' => t('State (Non US)'),	
    '#type' => 'textfield',
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'placeholder' => t('state if non US'),'id'=>'field_state_others', "maxlength"=>"30"),
  	'#default_value' => '',
	);
	
	$form['field_zip_code'] = array(
	'#title' => t('Zip Code'),	
    '#type' => 'telfield',
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md','tel'),'placeholder' => t('zip code'),'id'=>'field_zip_code', "maxlength"=>"8"),
  	'#default_value' => '',
	);	

	/*$form['field_evening_phone'] = array(
	'#title' => t('Evening Phone'),	
    '#type' => 'telfield',
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md','tel'),'placeholder' => t('evening phone'),'id'=>'field_evening_phone', "maxlength"=>"16"),
  	'#default_value' => '',
	);*/
	
	$form['field_mobile_phone'] = array(
	'#title' => t('Contact Phone'),	
    '#type' => 'telfield',
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md','tel'),'placeholder' => t('contact phone'),'id'=>'field_mobile_phone', "maxlength"=>"16"),
  	'#default_value' => '',
	);
	
	$form['field_email'] = array(
	'#title' => t('Email'),
    '#type' => 'emailfield',
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md','email'),'placeholder' => t('email address'),'id'=>'field_email', "maxlength"=>"60"),
  	'#default_value' => '',
	);
	
	$form['field_alumni_univ'] = array(
	'#title' => t('Alumni'),
    '#type' => 'select',
    '#options' => $alumni_universities_option,
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id'=>'field_alumni_univ',),
    '#default_value' => '',
  	);
	
	$form['field_alumni_year'] = array(
	'#title' => t('Graduation Year'),
    '#type' => 'select',
    '#options' => $alumni_year,
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id'=>'field_alumni_year',),
	'#default_value' => '',
  	);

	$form['field_business_forums'] = array(
	'#title' => t('Business Forums'),
    '#type' => 'select',
    '#options' => $business_forums_option,
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id'=>'field_business_forums',),
    '#default_value' => '',
	'#multiple' => TRUE,
  	);
	
	$form['field_tourism'] = array(
	'#title' => t('Tourism'),
    '#type' => 'select',
    '#options' => $tourism_option,
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id'=>'field_tourism',),
    '#default_value' => '',
	'#multiple' => TRUE,
  	);
	
	
	
	$form['field_attend_reunion'] = array(
    '#title' => t('Attend Re-Union'),
    '#type' => 'select',
    '#options' => array(''=>t('Select'),'yes'=>t('Yes'),'no'=>t('No')),
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'), 'onchange'=>'javascript:update_total_price();','id'=>'field_attend_reunion',),
    '#default_value' => '',
    );
	
	/*$form['field_cruise'] = array(
	'#title' => t('Cruise'),
    '#type' => 'select',
    '#options' => $cruise_list_option,
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id'=>'field_cruise', 'onchange' => 'javascript:'),
    '#default_value' => '',
  	);	*/
    
    $form['field_meal_plan'] = array(
    '#title' => t('Meal Plan'),
    '#type' => 'select',
    '#options' => $meal_plan_option,
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id'=>'field_meal_plan', 'onchange' => 'javascript:'),
    '#default_value' => '',
	'#disabled' => TRUE,
    );  
    
   $form['field_sunday_night_show'] = array(
    '#title' => t('Sunday Night Show'),
    '#type' => 'select',
    '#options' => array(''=>t('Select'),'Yes'=>t('Yes'),'No'=>t('No')),
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'), 'onchange'=>'javascript:update_total_price();','id'=>'field_sunday_night_show',),
    '#default_value' => '',
    );
	

    
	/**Add On Members Fields**/
	
	if (empty($form_state['add_members'])) {
        $form_state['add_members'] = 7;
    }
    
	$form['field_additional_members'] = array(
	  '#type' => 'container', 
	  '#title' => t('Additional Members'),  
	  '#collapsible' => FALSE, 
	  '#tree' => TRUE,
	  '#prefix' => '<div class="col-sm-12 center-xs wow fadeInLeft animated"><div id="additional-members-wrapper" class="additional-members-wrapper"> <h5 class="form-heading" id="step2-form-heading">Additional Member Information</h5></div>',
   	  '#suffix' => '<div class="col-sm-12 center-xs wow fadeInLeft animated add_more_sponsor_badge_container"><div class="form-group"><button class="btn btn-sm btn-primary add_more_member_info_btn" id="add_more_member_info_btn">Add More</button></div></div></div>',
	);

	for ($i = 0; $i < $form_state['add_members']; $i++) {
    
    $form['field_additional_members']['member'][$i] = array(
      '#type' => 'fieldset', 
      '#tree' => TRUE,
	  '#attributes' => array('class' => array('form_wrapper_additional_members'),),
    );
    
	$form['field_additional_members']['member'][$i]['field_first_name_add_on'] = array(
	'#title' => t('First Name'.' '.($i+1)),	
    '#type' => 'textfield',
    
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'placeholder' => t('first name'),'id' => 'field_first_name_add_on_'.$i,'onblur'=>'javascript:update_total_price();',"maxlength"=>"30"),
	'#prefix' => '<div class="col-sm-2 center-xs wow fadeInLeft animated"><div class="form-group">',
	'#suffix' => '</div></div>',
	'#group' => 'field_additional_members',
	);
	
	/*$form['field_additional_members']['member'][$i]['field_middle_name_add_on'] = array(
	'#title' => t('Middle Name'.' '.($i+1)),	
    '#type' => 'textfield',
    
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'placeholder' => t('middle name'),'id' => 'field_middle_name_add_on_'.$i, "maxlength"=>"30"),
  	'#default_value' => '',
	'#prefix' => '<div class="col-sm-3 center-xs wow fadeInLeft animated"><div class="form-group">',
	'#suffix' => '</div></div>',
	'#group' => 'field_additional_members',
	);*/
	
	$form['field_additional_members']['member'][$i]['field_last_name_add_on'] = array(
	'#title' => t('Last Name'.' '.($i+1)),	
    '#type' => 'textfield',
    
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'placeholder' => t('last name'),'id' => 'field_last_name_add_on_'.$i, "maxlength"=>"30"),
	'#prefix' => '<div class="col-sm-2 center-xs wow fadeInLeft animated"><div class="form-group">',
	'#suffix' => '</div></div>',
	'#group' => 'field_additional_members',
	);
	
	$form['field_additional_members']['member'][$i]['field_relation_add_on'] = array(
	'#title' => t('Relation'.' '.($i+1)),	
    '#type' => 'select',
    
    '#options' => array(''=> t('Select'), 'Child' => t('Child (5-18 Years)'),'Spouse' => t('Spouse'),'Parent' => t('Parent'),),
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id' => 'field_relation_add_on_'.$i,'onchange'=>'javascript:update_total_price();'),
	'#prefix' => '<div class="col-sm-2 center-xs wow fadeInLeft animated"><div class="form-group">',
	'#suffix' => '</div></div>',
	'#group' => 'field_additional_members',
	);
	
	$form['field_additional_members']['member'][$i]['field_alumni_univ_add_on']= array(
	'#title' => t('Alumni '.' '.($i+1)),
    '#type' => 'select',
    
    '#options' => $alumni_universities_option,
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id' => 'field_alumni_univ_add_on_'.$i,),
	'#prefix' => '<div class="col-sm-2 center-xs wow fadeInLeft animated"><div class="form-group">',
	'#suffix' => '</div></div>',
	'#group' => 'field_additional_members',
  	);
	
	/*$form['field_additional_members']['member'][$i]['field_alumni_year_add_on']= array(
	'#title' => t('Alumni Year'.' '.($i+1)),
    '#type' => 'select',
    
    '#options' => $alumni_year,
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id' => 'field_alumni_year_add_on_'.$i,),
	'#default_value' => '',
	'#prefix' => '<div class="col-sm-4 center-xs wow fadeInLeft animated"><div class="form-group">',
	'#suffix' => '</div></div>',
	'#group' => 'field_additional_members',
  	);
	
	$form['field_additional_members']['member'][$i]['field_cruise_add_on'] = array(
	'#title' => t('Cruise'.' '.($i+1)),
    '#type' => 'select',
    
    '#options' => $cruise_list_option,
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id' => 'field_cruise_add_on_'.$i,),
	'#prefix' => '<div class="col-sm-6 center-xs wow fadeInLeft animated"><div class="form-group">',
	'#suffix' => '</div></div>',
	'#group' => 'field_additional_members',
  	);	
    
    $form['field_additional_members']['member'][$i]['field_meal_plan_add_on'] = array(
    '#title' => t('Meal Plan'.' '.($i+1)),
    '#type' => 'select',  
	'#prefix' => '<div class="col-sm-6 center-xs wow fadeInLeft animated"><div class="form-group">',
	'#suffix' => '</div></div>',
    '#options' => $meal_plan_option,
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id' => 'field_meal_plan_add_on_'.$i,),
    );  */
    
	$form['field_additional_members']['member'][$i]['field_sunday_night_show_add_on'] = array(
    '#title' => t('Sunday Night Show'.' '.($i+1)),
    '#type' => 'select',
	'#prefix' => '<div class="col-sm-4 center-xs wow fadeInLeft animated"><div class="form-group col-sm-6 col-md-offset-3">',
	'#suffix' => '</div></div>',
    '#options' => array(''=>t('Select'),'yes'=>t('Yes'),'no'=>t('No')),
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'), 'onchange'=>'javascript:update_total_price();','id' => 'field_sunday_night_show_add_on_'.$i,),
	'#default' => '',
    );
	
    }

	$form['actions']['button'] = array(
    '#type' => 'button',
    '#value' => t('Modify Details'),
    '#attributes' => array(
		'class' => array('btn', 'btn-default'),
		'id' => 'backbtn4',
		'onclick' => 'javascript: reg_goto(\'step1\');',
		),
  	'#name' => 'backbtn4',
	'#submit' => array('core_overrides_membership_previous'),	
    );
	
	
	$form['actions']['submit1'] = array(
    '#type' => 'submit',
    '#value' => t('Save and Register Later'),
    '#attributes' => array(
		'class' => array('btn', 'btn-default'),
		'id' => 'add-member-btn',
		
		),
  	'#name' => 'submit-registration',
	'#submit' => array('core_overrides_membership_registration_form_submit'),
    );
	
	$form['actions']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Register & Pay'),
    '#attributes' => array(
		'class' => array('btn', 'btn-default'),
		'id' => 'register-pay-member-btn',
		
		),
  	'#name' => 'submit-registration-pay',
	'#submit' => array('core_overrides_membership_registration_form_pay_submit'),	
    );
	
	$form['field_subscription_price'] = array(
    '#type' => 'hidden',
    '#default_value' => '',
    '#attributes' => array(
		'id' => 'field_subscription_price',
		),
  	'#name' => 'field_subscription_price',
    );
	
	$form['#method'] = 'post';
	
	$form['#action'] = url('registration');
    
    /*$form_id = 'membership_registration';
    if (isset($form['#token']) && $form['#token'] !== FALSE) {
       $form['#token'] = FALSE;
     }
    else{
      $form['#token'] = $form_id;
     }
    
    $form ['form_token'] = array(
      '#id' => drupal_html_id('edit-' . $form_id . '-form-token'),
      '#type' => 'token',
      '#default_value' => drupal_get_token($form['#token']),
      '#parents' => array('form_token'),
    );  */
    
	$form['#validate'][] = 'core_overrides_membership_registration_form_validate';	
	$form['#submit'][] = 'core_overrides_membership_registration_form_submit';
    
    $form['#cache'] = FALSE; 
    $form['#no_cache'] = TRUE; 
    $form_state['cache'] = FALSE; 
    
	return $form;
}

function core_overrides_membership_registration_saved_form($form, $form_state, $no_js_use = FALSE){
    global $language;
    
    $member_nid = isset($_SESSION['valid_membership_nid']) ? $_SESSION['valid_membership_nid'] : '';
    $membership_email = isset($_SESSION['valid_membership_email']) ? $_SESSION['valid_membership_email'] : '';
    $membership_token = isset($_SESSION['valid_membership_token']) ? $_SESSION['valid_membership_token'] : '';
    
    $saved_member_data = get_membership_data($member_nid);
    $_SESSION['valid_membership_number'] = $saved_member_data->field_membership_number['und'][0]['value'];
    
    //echo "<pre>"; print_r($saved_member_data); echo "<pre>"; die();
    if($saved_member_data){
        $currentLanguage = $language->language;
        
        $membership_types = get_membership_types();
        $membership_types_option = array();
        if(count($membership_types) > 0){
        $membership_types_option[''] = t('Select');    
        foreach($membership_types as $membership_type){
            $membership_types_option[$membership_type['nid'].'|'.$membership_type['subscription_amount']] = t($membership_type['title']);
            }
        }
        
        $countries_option = get_countries_list();
        $state_list_us_option = get_state_list_us();
        $alumni_universities = get_alumni_university();
        $alumni_universities_option = array();
        if(count($alumni_universities) > 0){
        $alumni_universities_option[''] = t('Select');      
        foreach($alumni_universities as $alumni_university){
            $alumni_universities_option[$alumni_university['nid']] = t($alumni_university['title']);
            }
        }
        $alumni_year = get_alumni_year();
        $business_forums = get_business_forums();
        $business_forums_option = array();
        if(count($business_forums) > 0){
        //$business_forums_option[''] = t('Select');     
        foreach($business_forums as $business_forum){
            $business_forums_option[$business_forum['nid']] = t($business_forum['title']);
            }
        }
		
		$tourisms = get_tourism_list();
		$tourism_option = array();
		if(count($tourisms) > 0){
		//$tourism_option[''] = t('Select');     
		foreach($tourisms as $tourism){
			$tourism_option[$tourism['nid']] = t($tourism['title']);
			}
		}
		
        $cruise_list = get_cruise_list();
        $cruise_list_option = array();
        if(count($cruise_list) > 0){
           $cruise_list_option[''] = t('Select'); 
        foreach($cruise_list as $cruise){
            $cruise_list_option[$cruise['nid'].'|'.$cruise['cruise_price']] = t($cruise['title']);
            }
        }
        $meal_plan_list = get_meal_plan_list();
        $meal_plan_option = array();
        if(count($meal_plan_list) > 0){
        $meal_plan_option[''] = t('Select');     
        foreach($meal_plan_list as $meal_plan){
            $meal_plan_option[$meal_plan['nid'].'|'.$meal_plan['meal_plan_price']] = t($meal_plan['title']);
            }
        }
        //echo "<pre>"; print_r($countries_option); echo "</pre>"; die();
        $membership_type = get_membership_type_by_nid($saved_member_data->field_membership['und'][0]['nid']);
        $meal_plan = isset($saved_member_data->field_meal_plan['und'][0]['nid']) ? get_meal_plan_by_id($saved_member_data->field_meal_plan['und'][0]['nid']) : '';
        //$cruise_plan = get_cruise_by_id($saved_member_data->field_cruise['und'][0]['nid']);
        $form = array();
        
        $form['field_membership_type'] = array(
        '#title' => t('Membership Type'),
        '#type' => 'select',
        '#options' => $membership_types_option,
        '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),"onclick"=>"javascript:update_total_price();", "id"=>"field_membership_type"),
        '#default_value' => isset($membership_type) ? $membership_type['nid'].'|'.$membership_type['subscription_amount'] : '',
        );  
        
        $form['field_member_title'] = array(
        '#title' => t('Title'),
        '#type' => 'select',
        '#options' => array(''=>t('Select'),'Dr.'=>t('Dr.'),'Mr.'=>t('Mr.'),'Mrs.'=>t('Mrs.'),'Ms.'=>t('Ms.'),'Miss'=>t('Miss'),'Master'=>t('Master')),
        '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id'=>'field_member_title',),
        '#default_value' => isset($saved_member_data->field_member_title['und']) ? $saved_member_data->field_member_title['und'][0]['value'] : '',
        );
        
        $form['field_first_name'] = array(
        '#title' => t('First Name'),    
        '#type' => 'textfield',
        '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'placeholder' => t('first name'),'id'=>'field_first_name', "maxlength"=>"30"),
        '#default_value' => $saved_member_data->field_first_name['und'][0]['value'],
        );
        
        $form['field_middle_name'] = array(
        '#title' => t('Middle Name'),   
        '#type' => 'textfield',
        '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'placeholder' => t('middle name'),'id'=>'field_middle_name', "maxlength"=>"30"),
        '#default_value' => isset($saved_member_data->field_middle_name['und']) ? $saved_member_data->field_middle_name['und'][0]['value'] : '',
        );
        
        $form['field_last_name'] = array(
        '#title' => t('Last Name'), 
        '#type' => 'textfield',
        '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'), 'placeholder' => t('last name'),'id'=>'field_last_name', "maxlength"=>"30"),
        '#default_value' => $saved_member_data->field_last_name['und'][0]['value'],
        );
        
        $form['field_address'] = array(
        '#title' => t('Address 1'),
        '#type' => 'textfield',
        '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'placeholder' => t('address - house number, street name'),'id'=>'field_address',"maxlength"=>"100"),
        '#default_value' => $saved_member_data->field_address['und'][0]['value'],
        ); 
        
        $form['field_address_1'] = array(
        '#title' => t('Address 2'),
        '#type' => 'textfield',
        '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'placeholder' => t('unit,apt,ste'),'id'=>'field_address_1',"maxlength"=>"100"),
        '#default_value' => isset($saved_member_data->field_address_1['und']) ? $saved_member_data->field_address_1['und'][0]['value'] : '',
        ); 
    
        
        /*$form['field_country_of_origin'] = array(
        '#title' => t('Country of Origin'),
        '#type' => 'select',
        '#options' => $countries_option,
        '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id'=>'field_country_of_origin',),
        '#default_value' => $saved_member_data->field_country_of_origin['und'][0]['iso2'],
        );*/
        
        $form['field_country'] = array(
        '#title' => t('Country'),
        '#type' => 'select',
        '#default_value' => 'US',
        '#options' => $countries_option,
        '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id'=>'field_country','onchange'=>'javascript:changeStateForm();'),
        '#default_value' => $saved_member_data->field_country['und'][0]['iso2'],
        );
        
        $form['field_city'] = array(
        '#title' => t('City'),  
        '#type' => 'textfield',
        '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'), 'placeholder' => t('city'),'id'=>'field_city', "maxlength"=>"30"),
        '#default_value' => $saved_member_data->field_city['und'][0]['value'],
        );
        
        $form['field_state'] = array(
        '#title' => t('State (US)'),
        '#type' => 'select',
        '#options' => $state_list_us_option,
        '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id'=>'field_state',),
        '#default_value' => isset($saved_member_data->field_state['und']) ? $saved_member_data->field_state['und'][0]['value'] : '',
        );
        
        $form['field_state_others'] = array(
        '#title' => t('State (Non US)'),    
        '#type' => 'textfield',
        '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'placeholder' => t('state if non US'),'id'=>'field_state_others', "maxlength"=>"30"),
        '#default_value' => isset($saved_member_data->field_state_others['und']) ? $saved_member_data->field_state_others['und'][0]['value'] : '',
        );
        
        $form['field_zip_code'] = array(
        '#title' => t('Zip Code'),  
        '#type' => 'telfield',
        '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md','tel'),'placeholder' => t('zip code'),'id'=>'field_zip_code', "maxlength"=>"8"),
        '#default_value' => $saved_member_data->field_zip_code['und'][0]['value'],
        );  
    
        /*$form['field_evening_phone'] = array(
        '#title' => t('Evening Phone'), 
        '#type' => 'telfield',
        '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md','tel'),'placeholder' => t('evening phone'),'id'=>'field_evening_phone', "maxlength"=>"16"),
        '#default_value' => $saved_member_data->field_evening_phone['und'][0]['value'],
        );*/
        
        $form['field_mobile_phone'] = array(
        '#title' => t('Contact Phone'),  
        '#type' => 'telfield',
        '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md','tel'),'placeholder' => t('contact phone'),'id'=>'field_mobile_phone', "maxlength"=>"16"),
        '#default_value' => $saved_member_data->field_mobile_phone['und'][0]['value'],
        );
        
        $form['field_email'] = array(
        '#title' => t('Email'),
        '#type' => 'emailfield',
        '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md','email'),'placeholder' => t('email address'),'id'=>'field_email', "maxlength"=>"60"),
        '#default_value' => $saved_member_data->field_email_address['und'][0]['value'],
        );
        
        $form['field_alumni_univ'] = array(
        '#title' => t('Alumni'),
        '#type' => 'select',
        '#options' => $alumni_universities_option,
        '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id'=>'field_alumni_univ',),
        '#default_value' => isset($saved_member_data->field_alumni_univ['und']) ? $saved_member_data->field_alumni_univ['und'][0]['nid'] : '',
        );
        
        $form['field_alumni_year'] = array(
        '#title' => t('Graduation Year'),
        '#type' => 'select',
        '#options' => $alumni_year,
        '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id'=>'field_alumni_year',),
        '#default_value' => (isset($saved_member_data->field_alumni_year['und'])) ? date('Y', strtotime($saved_member_data->field_alumni_year['und'][0]['value'])) : '',
        );
    
        $form['field_business_forums'] = array(
        '#title' => t('Business Forums'),
        '#type' => 'select',
        '#options' => $business_forums_option,
        '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id'=>'field_business_forums',),
        '#default_value' => isset($saved_member_data->field_business_forums['und']) ? get_business_form_values($saved_member_data->field_business_forums['und']) : '',
		'#multiple' => TRUE,
        );
		
		$form['field_tourism'] = array(
		'#title' => t('Tourism'),
		'#type' => 'select',
		'#options' => $tourism_option,
		'#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id'=>'field_tourism',),
		'#default_value' => isset($saved_member_data->field_tourism['und']) ? get_tourism_values($saved_member_data->field_tourism['und']) : '',
		'#multiple' => TRUE,
		);
		
		$form['field_attend_reunion'] = array(
		'#title' => t('Attend Re-Union'),
		'#type' => 'select',
		'#options' => array(''=>t('Select'),'yes'=>t('Yes'),'no'=>t('No')),
		'#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'), 'onchange'=>'javascript:update_total_price();','id'=>'field_attend_reunion',),
		'#default_value' => isset($saved_member_data->field_attend_reunion['und']) ? $saved_member_data->field_attend_reunion['und'][0]['value'] : '',
		);
        
        /*$form['field_cruise'] = array(
        '#title' => t('Cruise'),
        '#type' => 'select',
        '#options' => $cruise_list_option,
        '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id'=>'field_cruise', 'onchange' => 'javascript:'),
        '#default_value' => ($cruise_plan) ? $cruise_plan['nid'].'|'.$cruise_plan['cruise_price'] : '',
        ); */ 
        
        $form['field_meal_plan'] = array(
        '#title' => t('Meal Plan'),
        '#type' => 'select',
        '#options' => $meal_plan_option,
        '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id'=>'field_meal_plan', 'onchange' => 'javascript:'),
        '#default_value' => ($meal_plan) ? $meal_plan['nid'].'|'.$meal_plan['meal_plan_price'] : '',
		'#disabled' => TRUE,
        );  
        
       $form['field_sunday_night_show'] = array(
        '#title' => t('Sunday Night Show'),
        '#type' => 'select',
        '#options' => array(''=>t('Select'),'Yes'=>t('Yes'),'No'=>t('No')),
        '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'), 'onchange'=>'javascript:update_total_price();','id'=>'field_sunday_night_show',),
        '#default_value' => $saved_member_data->field_sunday_night_show['und'][0]['value'],
        );
        
    
        
        /**Add On Members Fields**/
        
        if (empty($form_state['add_members'])) {
            $form_state['add_members'] = 7;
        }
        
        $form['field_additional_members'] = array(
          '#type' => 'container', 
          '#title' => t('Additional Members'),  
          '#collapsible' => FALSE, 
          '#tree' => TRUE,
          '#prefix' => '<div class="col-sm-12 center-xs wow fadeInLeft animated"><div id="additional-members-wrapper" class="additional-members-wrapper"> <h5 class="form-heading" id="step2-form-heading">Additional Member Information</h5></div>',
          '#suffix' => '<div class="col-sm-12 center-xs wow fadeInLeft animated add_more_sponsor_badge_container"><div class="form-group"><button class="btn btn-sm btn-primary add_more_member_info_btn" id="add_more_member_info_btn">Add More</button></div></div></div>',
        );
        $k = 1;
		$no_of_pre_fillled_additional_members = 0;
        for ($i = 0; $i < $form_state['add_members']; $i++) {
		/*$meal_plan_add_on = false;
		$cruise_plan_add_on = false;
		$variable_meal_plan_obj = 'field_meal_plan_additional_'.$k; 
		$variable_cruise_plan_obj = 'field_cruise_additional_'.$k;  
        if(isset($saved_member_data->{$variable_meal_plan_obj}['und'])){ 
		  
		$meal_plan_add_on = get_meal_plan_by_id($saved_member_data->{$variable_meal_plan_obj}['und'][0]['nid']);
		}
		if(isset($saved_member_data->{$variable_cruise_plan_obj}['und'])){
			$cruise_plan_add_on = get_cruise_by_id($saved_member_data->{$variable_cruise_plan_obj}['und'][0]['nid']);    
		}*/
		$variable_first_name_obj = 'field_first_name_additional_'.$k; 
		//$variable_middle_name_obj = 'field_middle_name_additional_'.$k;
		$variable_last_name_obj = 'field_last_name_additional_'.$k;
		$variable_relation_obj = 'field_relation_additional_'.$k;
		$variable_alumni_univ_obj = 'field_alumni_univ_additional_'.$k;
		$variable_alumni_year_obj = 'field_alumni_year_additional_'.$k;
		$variable_sunday_night_show_obj = 'field_sunday_ns_additional_'.$k;
		
		
		if (isset($saved_member_data->{$variable_first_name_obj}['und']) && $saved_member_data->{$variable_first_name_obj}['und'][0]['value'] != ''){ $no_of_pre_fillled_additional_members++; } 
		
		
        $form['field_additional_members']['member'][$i] = array(
          '#type' => 'fieldset', 
          '#tree' => TRUE,
		  '#attributes' => array('class' => array('form_wrapper_additional_members'),),
        );
        
        $form['field_additional_members']['member'][$i]['field_first_name_add_on'] = array(
        '#title' => t('First Name'.' '.($i+1)), 
        '#type' => 'textfield',
        
        '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'placeholder' => t('first name'),'id' => 'field_first_name_add_on_'.$i,'onblur'=>'javascript:update_total_price();',"maxlength"=>"30"),
        '#default_value' => '',
        '#prefix' => '<div class="col-sm-2 center-xs wow fadeInLeft animated"><div class="form-group">',
        '#suffix' => '</div></div>',
        '#group' => 'field_additional_members',
        '#default_value' => isset($saved_member_data->{$variable_first_name_obj}['und']) ? $saved_member_data->{$variable_first_name_obj}['und'][0]['value'] : '',
        );
        
        /*$form['field_additional_members']['member'][$i]['field_middle_name_add_on'] = array(
        '#title' => t('Middle Name'.' '.($i+1)),    
        '#type' => 'textfield',
        
        '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'placeholder' => t('middle name'),'id' => 'field_middle_name_add_on_'.$i,"maxlength"=>"30"),
        '#default_value' => '',
        '#prefix' => '<div class="col-sm-4 center-xs wow fadeInLeft animated"><div class="form-group">',
        '#suffix' => '</div></div>',
        '#group' => 'field_additional_members',
        '#default_value' => isset($saved_member_data->{$variable_middle_name_obj}['und']) ? $saved_member_data->{$variable_middle_name_obj}['und'][0]['value'] : '',
        );*/
        
        $form['field_additional_members']['member'][$i]['field_last_name_add_on'] = array(
        '#title' => t('Last Name'.' '.($i+1)),  
        '#type' => 'textfield',
        
        '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'placeholder' => t('last name'),'id' => 'field_last_name_add_on_'.$i,"maxlength"=>"30"),
        '#default_value' => '',
        '#prefix' => '<div class="col-sm-2 center-xs wow fadeInLeft animated"><div class="form-group">',
        '#suffix' => '</div></div>',
        '#group' => 'field_additional_members',
        '#default_value' => isset($saved_member_data->{$variable_last_name_obj}['und']) ? $saved_member_data->{$variable_last_name_obj}['und'][0]['value'] : '',
        );
        
        $form['field_additional_members']['member'][$i]['field_relation_add_on'] = array(
        '#title' => t('Relation'.' '.($i+1)),   
        '#type' => 'select',
        
        '#options' => array(''=> t('Select'), 'Child' => t('Child (5-18 Years)'),'Spouse' => t('Spouse'),'Parent' => t('Parent')),
        '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id' => 'field_relation_add_on_'.$i,'onchange'=>'javascript:update_total_price();'),
        '#prefix' => '<div class="col-sm-2 center-xs wow fadeInLeft animated"><div class="form-group">',
        '#suffix' => '</div></div>',
        '#group' => 'field_additional_members',
        '#default_value' => isset($saved_member_data->{$variable_relation_obj}['und']) ? $saved_member_data->{$variable_relation_obj}['und'][0]['value'] : '',
        );
        
        $form['field_additional_members']['member'][$i]['field_alumni_univ_add_on']= array(
        '#title' => t('Alumni '.' '.($i+1)),
        '#type' => 'select',
        
        '#options' => $alumni_universities_option,
        '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id' => 'field_alumni_univ_add_on_'.$i,),
        '#prefix' => '<div class="col-sm-2 center-xs wow fadeInLeft animated"><div class="form-group">',
        '#suffix' => '</div></div>',
        '#group' => 'field_additional_members',
        '#default_value' => isset($saved_member_data->{$variable_alumni_univ_obj}['und'][0]) ? $saved_member_data->{$variable_alumni_univ_obj}['und'][0]['nid'] : '',
		);
        
        /*$form['field_additional_members']['member'][$i]['field_alumni_year_add_on']= array(
        '#title' => t('Alumni Year'.' '.($i+1)),
        '#type' => 'select',
        
        '#options' => $alumni_year,
        '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id' => 'field_alumni_year_add_on_'.$i,),
        '#default_value' => '',
        '#prefix' => '<div class="col-sm-4 center-xs wow fadeInLeft animated"><div class="form-group">',
        '#suffix' => '</div></div>',
        '#group' => 'field_additional_members',
        '#default_value' => isset($saved_member_data->{$variable_alumni_year_obj}['und']) ? date('Y',strtotime($saved_member_data->{$variable_alumni_year_obj}['und'][0]['value'])) : '',
        );
        
        $form['field_additional_members']['member'][$i]['field_cruise_add_on'] = array(
        '#title' => t('Cruise'.' '.($i+1)),
        '#type' => 'select',
        
        '#options' => $cruise_list_option,
        '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id' => 'field_cruise_add_on_'.$i,),
        '#prefix' => '<div class="col-sm-6 center-xs wow fadeInLeft animated"><div class="form-group">',
        '#suffix' => '</div></div>',
        '#group' => 'field_additional_members',
        '#default_value' => ($cruise_plan_add_on) ? $cruise_plan_add_on['nid'].'|'.$cruise_plan_add_on['cruise_price'] : '',
        );  
        
        $form['field_additional_members']['member'][$i]['field_meal_plan_add_on'] = array(
        '#title' => t('Meal Plan'.' '.($i+1)),
        '#type' => 'select',  
        '#prefix' => '<div class="col-sm-6 center-xs wow fadeInLeft animated"><div class="form-group">',
        '#suffix' => '</div></div>',
        '#options' => $meal_plan_option,
        '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id' => 'field_meal_plan_add_on_'.$i,),
        '#default_value' => ($meal_plan_add_on) ? $meal_plan_add_on['nid'].'|'.$meal_plan_add_on['meal_plan_price'] : '',
        );  */
        
        $form['field_additional_members']['member'][$i]['field_sunday_night_show_add_on'] = array(
        '#title' => t('Sunday Night Show'.' '.($i+1)),
        '#type' => 'select',
        '#prefix' => '<div class="col-sm-4 center-xs wow fadeInLeft animated"><div class="form-group col-sm-6 col-md-offset-3">',
        '#suffix' => '</div></div>',
        '#options' => array(''=>t('Select'),'yes'=>t('Yes'),'no'=>t('No')),
        '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'), 'onchange'=>'javascript:update_total_price();','id' => 'field_sunday_night_show_add_on_'.$i,),
        '#default_value' => isset($saved_member_data->{$variable_sunday_night_show_obj}['und'][0]) ? $saved_member_data->{$variable_sunday_night_show_obj}['und'][0]['value'] : '',
        );
        	$k++;
        }
		
		$_SESSION['no_of_pre_fillled_additional_members'] = $no_of_pre_fillled_additional_members;
		
        $form['actions']['button'] = array(
        '#type' => 'button',
        '#value' => t('Modify Details'),
        '#attributes' => array(
            'class' => array('btn', 'btn-default'),
            'id' => 'backbtn4',
            ),
        '#name' => 'backbtn4',
        '#submit' => array('core_overrides_membership_previous'),   
        );
        
        
        $form['actions']['submit1'] = array(
        '#type' => 'submit',
        '#value' => t('Save and Register Later'),
        '#attributes' => array(
            'class' => array('btn', 'btn-default'),
            'id' => 'add-member-btn',
            
            ),
        '#name' => 'submit-registration',
        '#submit' => array('core_overrides_membership_registration_saved_form_submit'),
        );
        
        $form['actions']['submit'] = array(
        '#type' => 'submit',
        '#value' => t('Register & Pay'),
        '#attributes' => array(
            'class' => array('btn', 'btn-default'),
            'id' => 'register-pay-member-btn',
            
            ),
        '#name' => 'submit-registration-pay',
        '#submit' => array('core_overrides_membership_registration_saved_form_pay_submit'),   
        );
        
        $form['field_subscription_price'] = array(
        '#type' => 'hidden',
        '#default_value' => '',
        '#attributes' => array(
            'id' => 'field_subscription_price',
            ),
        '#name' => 'field_subscription_price',
        );
        
        $form['#method'] = 'post';
        
        $form['#action'] = url('registration/complete');
        
        /*$form_id = 'membership_registration';
        if (isset($form['#token']) && $form['#token'] !== FALSE) {
           $form['#token'] = FALSE;
         }
        else{
          $form['#token'] = $form_id;
         }
        
        $form ['form_token'] = array(
          '#id' => drupal_html_id('edit-' . $form_id . '-form-token'),
          '#type' => 'token',
          '#default_value' => drupal_get_token($form['#token']),
          '#parents' => array('form_token'),
        );  */
        
        $form['#validate'][] = 'core_overrides_membership_registration_saved_form_validate';  
        $form['#submit'][] = 'core_overrides_membership_registration_saved_form_submit';
        
        $form['#cache'] = FALSE; 
        $form['#no_cache'] = TRUE; 
        $form_state['cache'] = FALSE; 
        
        return $form;
    }
}

function core_overrides_membership_registration_form_validate(&$form, &$form_state){
            
        
    //echo "<pre>"; print_r($form_state); echo "</pre>"; die(); 
    $field_membership = $form_state['input']['field_membership_type'];
    $field_member_title = $form_state['input']['field_member_title'];
    $field_first_name = $form_state['input']['field_first_name'];
    $field_middle_name = $form_state['input']['field_middle_name'];
    $field_last_name = $form_state['input']['field_last_name'];
    //$field_country_of_origin = $form_state['input']['field_country_of_origin'];
    $field_address = $form_state['input']['field_address'];
    $field_address_1 = $form_state['input']['field_address_1'];
    $field_country = $form_state['input']['field_country'];
    $field_city = $form_state['input']['field_city'];
    $field_state = $form_state['input']['field_state'];
    $field_state_others = $form_state['input']['field_state_others'];
    $field_zip_code = $form_state['input']['field_zip_code'];
    //$field_evening_phone = $form_state['input']['field_evening_phone'];
    $field_mobile_phone = $form_state['input']['field_mobile_phone'];
    $field_email = $form_state['input']['field_email'];
    $field_alumni_univ = $form_state['input']['field_alumni_univ'];
    $field_alumni_year = $form_state['input']['field_alumni_year'];
    $field_meal_plan = isset($form_state['input']['field_meal_plan']) ? $form_state['input']['field_meal_plan'] : '';
    $field_business_forums = $form_state['input']['field_business_forums'];
	$field_tourism = $form_state['input']['field_tourism'];
	$field_attend_reunion = $form_state['input']['field_attend_reunion'];
    //$field_cruise = $form_state['input']['field_cruise'];
    $field_additional_members = $form_state['input']['field_additional_members']['member'];
    
    $query = new EntityFieldQuery();
      
    $query->entityCondition('entity_type', 'node');
    $query->entityCondition('bundle', 'register');
    $query->propertyCondition('status', 1);
    $query->fieldCondition('field_email_address', 'value', $field_email , '=');
    $result = $query->execute();
       
    if($field_membership==''){
        form_set_error('field_membership_type',t('Please select membership type'));
    } 

    if($field_member_title == ''){
        form_set_error('field_member_title',t('Please select title'));
    }
    
    if($field_first_name==''){
        form_set_error('field_first_name',t('Please enter first name'));
    }
    
     if($field_last_name==''){
        form_set_error('field_last_name',t('Please enter last name'));
    }

    /*if($field_country_of_origin==''){
        form_set_error('field_country_of_origin',t('Please select country of origin'));
    }*/

    if($field_address==''){
        form_set_error('field_address',t('Please enter address'));
    }
    
    if($field_country==''){
        form_set_error('field_country',t('Please select country'));
    }
    
     if($field_city==''){
        form_set_error('field_city',t('Please enter city'));
    }
     
     if($field_country =='US' && $field_state == ''){
        form_set_error('field_state',t('Please select state (US)'));
    }
     
     if($field_country !='US' && $field_state_others == ''){
        form_set_error('field_state_others',t('Please enter state (Non-US)'));
    }
     
   if($field_zip_code == ''){
        form_set_error('field_zip_code',t('Please enter zip code'));
    }   
     
    /*if($field_evening_phone == ''){
        form_set_error('field_evening_phone',t('Please enter evening phone'));
    } */
    
    if($field_mobile_phone == ''){
        form_set_error('field_mobile_phone',t('Please enter contact phone'));
    }
    
    if($field_email==''){
        form_set_error('field_email',t('Please enter email address'));
    }
    if($field_email!='' && !valid_email_address($field_email)){
        form_set_error('field_email',t('Please enter valid email address'));
    }

    if($field_email!='' && isset($result['node'])){
        form_set_error('field_email',t('email has already been registered. Thank you.'));
    }

    /*if($field_alumni_univ==''){
        form_set_error('field_alumni_univ',t('Please select alumni university'));
    }
    
    if($field_alumni_year==''){
        form_set_error('field_alumni_year',t('Please select alumni year'));
    }
    
    if($field_alumni_year==''){
        form_set_error('field_alumni_year',t('Please select alumni year'));
    }
	
	if($field_attend_reunion == ''){
		form_set_error('field_attend_reunion',t('Please select attend re-union'));
	}*/
    
    if(count($field_additional_members) > 0){
        $i = 1;
        foreach($field_additional_members as $member){
            if($member['field_first_name_add_on'] != ''){
                if($member['field_last_name_add_on']==''){ 
                    form_set_error('field_additional_members[member]['+$i+'][field_last_name_add_on]',t('Please enter additional member '.$i.' last name'));
                }
                 if($member['field_relation_add_on']==''){ 
                    form_set_error('field_additional_members[member]['+$i+'][field_relation_add_on]',t('Please select additional member '.$i.' relation'));
                }
                 /*if($member['field_alumni_univ_add_on']==''){ 
                    form_set_error('field_additional_members[member]['+$i+'][field_alumni_univ_add_on]',t('Please select additional member '.$i.' Alumni University'));
                }
                 if($member['field_alumni_year_add_on']==''){ 
                    form_set_error('field_additional_members[member]['+$i+'][field_alumni_year_add_on]',t('Please select additional member '.$i.' Alumni Year'));
                }*/
				
				/*if($member['field_sunday_night_show_add_on']==''){ 
                    form_set_error('field_additional_members[member]['+$i+'][field_sunday_night_show_add_on]',t('Please select Sunday Night Show '.$i));
                }*/
				
				
            }
            $i++;
        }
    }
    
}

function core_overrides_membership_registration_saved_form_validate(&$form, &$form_state){
            
        
    //echo "<pre>"; print_r($form_state); echo "</pre>"; die(); 
    $field_membership = $form_state['input']['field_membership_type'];
    $field_member_title = $form_state['input']['field_member_title'];
    $field_first_name = $form_state['input']['field_first_name'];
    $field_middle_name = $form_state['input']['field_middle_name'];
    $field_last_name = $form_state['input']['field_last_name'];
    //$field_country_of_origin = $form_state['input']['field_country_of_origin'];
    $field_address = $form_state['input']['field_address'];
    $field_address_1 = $form_state['input']['field_address_1'];
    $field_country = $form_state['input']['field_country'];
    $field_city = $form_state['input']['field_city'];
    $field_state = $form_state['input']['field_state'];
    $field_state_others = $form_state['input']['field_state_others'];
    $field_zip_code = $form_state['input']['field_zip_code'];
    //$field_evening_phone = $form_state['input']['field_evening_phone'];
    $field_mobile_phone = $form_state['input']['field_mobile_phone'];
    $field_email = $form_state['input']['field_email'];
    $field_alumni_univ = $form_state['input']['field_alumni_univ'];
    $field_alumni_year = $form_state['input']['field_alumni_year'];
    $field_meal_plan = isset($form_state['input']['field_meal_plan']) ? $form_state['input']['field_meal_plan'] : '';
    $field_business_forums = $form_state['input']['field_business_forums'];
	$field_tourism = $form_state['input']['field_tourism'];
	$field_attend_reunion = $form_state['input']['field_attend_reunion']; 
    //$field_cruise = $form_state['input']['field_cruise'];
    $field_additional_members = $form_state['input']['field_additional_members']['member'];
    
    $query = new EntityFieldQuery();
      
    $query->entityCondition('entity_type', 'node');
    $query->entityCondition('bundle', 'register');
    $query->propertyCondition('status', 1);
    $query->fieldCondition('field_email_address', 'value', $field_email , '=');
    $result = $query->execute();
    
    if($field_membership==''){
        form_set_error('field_membership_type',t('Please select membership type'));
    } 

    if($field_member_title == ''){
        form_set_error('field_member_title',t('Please select title'));
    }
    
    if($field_first_name==''){
        form_set_error('field_first_name',t('Please enter first name'));
    }
    
     if($field_last_name==''){
        form_set_error('field_last_name',t('Please enter last name'));
    }

    /*if($field_country_of_origin==''){
        form_set_error('field_country_of_origin',t('Please select country of origin'));
    }*/

    if($field_address==''){
        form_set_error('field_address',t('Please enter address'));
    }
    
    if($field_country==''){
        form_set_error('field_country',t('Please select country'));
    }
    
     if($field_city==''){
        form_set_error('field_city',t('Please enter city'));
    }
     
     if($field_country =='US' && $field_state == ''){
        form_set_error('field_state',t('Please select state (US)'));
    }
     
     if($field_country !='US' && $field_state_others == ''){
        form_set_error('field_state_others',t('Please enter state (Non-US)'));
    }
     
   if($field_zip_code == ''){
        form_set_error('field_zip_code',t('Please enter zip code'));
    }   
     
    /*if($field_evening_phone == ''){
        form_set_error('field_evening_phone',t('Please enter evening phone'));
    } */
    
    if($field_mobile_phone == ''){
        form_set_error('field_mobile_phone',t('Please enter contact phone'));
    }
    
    if($field_email==''){
        form_set_error('field_email',t('Please enter email address'));
    }
    if($field_email!='' && !valid_email_address($field_email)){
            form_set_error('field_email',t('Please enter valid email address'));
    }
    if($field_email != $_SESSION['valid_membership_email']){
        if($field_email!='' && isset($result['node'])){
            form_set_error('field_email',t('email has already been registered. Thank you.'));
        }
    }
    
    /*if($field_alumni_univ==''){
        form_set_error('field_alumni_univ',t('Please select alumni university'));
    }
    
    if($field_alumni_year==''){
        form_set_error('field_alumni_year',t('Please select alumni year'));
    }
    
    if($field_alumni_year==''){
        form_set_error('field_alumni_year',t('Please select alumni year'));
    }
	
	if($field_attend_reunion == ''){
		form_set_error('field_attend_reunion',t('Please select attend re-union'));
	}*/
    
    if(count($field_additional_members) > 0){
        $i = 1;
        foreach($field_additional_members as $member){
            if($member['field_first_name_add_on'] != ''){
                if($member['field_last_name_add_on']==''){ 
                    form_set_error('field_additional_members[member]['+$i+'][field_last_name_add_on]',t('Please enter additional member '.$i.' last name'));
                }
                 /*if($member['field_relation_add_on']==''){ 
                    form_set_error('field_additional_members[member]['+$i+'][field_relation_add_on]',t('Please select additional member '.$i.' relation'));
                }*/
                 /*if($member['field_alumni_univ_add_on']==''){ 
                    form_set_error('field_additional_members[member]['+$i+'][field_alumni_univ_add_on]',t('Please select additional member '.$i.' Alumni University'));
                }
                 if($member['field_alumni_year_add_on']==''){ 
                    form_set_error('field_additional_members[member]['+$i+'][field_alumni_year_add_on]',t('Please select additional member '.$i.' Alumni Year'));
                }*/
                
                /*if($member['field_sunday_night_show_add_on']==''){ 
                    form_set_error('field_additional_members[member]['+$i+'][field_sunday_night_show_add_on]',t('Please select Sunday Night Show '.$i));
                }*/
                
                
            }
            $i++;
        }
    }
    
}

function core_overrides_membership_previous($form, &$form_state){

}

function core_overrides_membership_registration_saved_form_pay_submit($form, &$form_state){

    global $base_url;
    
    $member_nid = isset($_SESSION['valid_membership_nid']) ? $_SESSION['valid_membership_nid'] : '';
    $membership_email = isset($_SESSION['valid_membership_email']) ? $_SESSION['valid_membership_email'] : '';
    $membership_token = isset($_SESSION['valid_membership_token']) ? $_SESSION['valid_membership_token'] : '';
    
    $field_member_title = $form['field_member_title']['#value'];    
    $field_first_name = $form['field_first_name']['#value'];
    $field_middle_name = $form['field_middle_name']['#value'];
    $field_last_name = $form['field_last_name']['#value'];
    $field_country = $form['field_country']['#value'];
    $field_address = $form['field_address']['#value'];
    $field_address_1 = $form['field_address_1']['#value'];
    //$field_country_of_origin = $form['field_country_of_origin']['#value'];
    $field_city = $form['field_city']['#value'];
    $field_state = $form['field_state']['#value'];
    $field_state_others = $form['field_state_others']['#value'];
    $field_zip_code = $form['field_zip_code']['#value'];
    //$field_evening_phone = $form['field_evening_phone']['#value'];
    $field_mobile_phone = $form['field_mobile_phone']['#value'];
    $field_email = $form['field_email']['#value'];
    $field_alumni_univ = $form['field_alumni_univ']['#value'];
    $field_alumni_year = $form['field_alumni_year']['#value'];
    $field_business_forums = $form['field_business_forums']['#value'];
	$field_tourism = $form['field_tourism']['#value'];
	$field_attend_reunion = $form['field_attend_reunion']['#value'];
    $field_sunday_night_show= $form['field_sunday_night_show']['#value'];
     
    /*$cruise = explode('|',$form['field_cruise']['#value']);
    $field_cruise = $cruise[0];
    $field_cruise_price = (isset($cruise[1]) && $cruise[1] != '') ? $cruise[1] : 0.00;*/
    
    $meal_plan = explode('|',$form['field_meal_plan']['#value']);
    $field_meal_plan = $meal_plan[0];
    $field_meal_plan_price = (isset($meal_plan[1]) && $meal_plan[1] != '') ? $meal_plan[1] : 0.00;
    
    $membership_type = explode('|',$form['field_membership_type']['#value']);
    $field_membership_type = $membership_type[0];
    $field_membership_type_price = $membership_type[1];
    
    $field_payment_status = 'Processing';
    $field_date_of_registration = date('Y-m-d',time());
    $field_amount_paid = number_format($form['field_subscription_price']['#value'],2,'.',''); // Subscription Price.

    
    $systemUser = user_load_by_name('system_user'); 
    //echo $field_amount_paid.'<br>';
    //echo "<pre>"; print_r($form); echo "<pre>"; die();
    $node_register = node_load($member_nid);
    $node_register->uid = (isset($systemUser->uid) && !empty($systemUser->uid) ? $systemUser->uid : 1);
        
    
    $node_register->nid = $member_nid;  
    $node_register->vid = $member_nid;  
    $node_register->field_member_title['und'][0]['value'] = $field_member_title;
    $node_register->field_first_name['und'][0]['value']   = $field_first_name;
    $node_register->field_first_name['und'][0]['safe_value']   = $field_first_name;
        
    $node_register->field_middle_name['und'][0]['value']   = $field_middle_name;
    $node_register->field_middle_name['und'][0]['safe_value']   = $field_middle_name;
    
    $node_register->field_last_name['und'][0]['value']   = $field_last_name;
    $node_register->field_last_name['und'][0]['safe_value']   = $field_last_name;
    
    $node_register->field_country['und'][0]['iso2']   = $field_country;
    
    $node_register->field_address['und'][0]['value']   = $field_address;
    $node_register->field_address['und'][0]['safe_value']   = $field_address;
    
    $node_register->field_address_1['und'][0]['value']   = $field_address_1;
    $node_register->field_address_1['und'][0]['safe_value']   = $field_address_1;   
    
    //$node_register->field_country_of_origin['und'][0]['iso2']   = $field_country_of_origin;
    
    $node_register->field_city['und'][0]['value']   = $field_city;
    $node_register->field_city['und'][0]['safe_value']   = $field_city;
    
    $node_register->field_state['und'][0]['value']   = (isset($field_country) && $field_country == 'US') ? $field_state : '';
    
    $node_register->field_state_others['und'][0]['value']   = (isset($field_country) && $field_country != 'US') ? $field_state_others : '';
    $node_register->field_state_others['und'][0]['safe_value']   = (isset($field_country) && $field_country != 'US') ? $field_state_others : '';
    
    $node_register->field_zip_code['und'][0]['value']   = $field_zip_code;
    $node_register->field_zip_code['und'][0]['safe_value']   = $field_zip_code;
    
    /*$node_register->field_evening_phone['und'][0]['value']   = $field_evening_phone;
    $node_register->field_evening_phone['und'][0]['safe_value']   = $field_evening_phone;*/
    
    $node_register->field_mobile_phone['und'][0]['value']   = $field_mobile_phone;
    $node_register->field_mobile_phone['und'][0]['safe_value']   = $field_mobile_phone;
    
    $node_register->field_email_address['und'][0]['value']   = $field_email;
    $node_register->field_email_address['und'][0]['safe_value']   = $field_email;
    
	if($field_alumni_univ != ''){
    	$node_register->field_alumni_univ['und'][0]['nid']   = $field_alumni_univ;
    }
	else{
		unset($node_register->field_alumni_univ['und']);
	}
	if($field_alumni_year != ''){
    	$node_register->field_alumni_year['und'][0]['value']   = $field_alumni_year.'-01-01 00:00:00';
	}
	else{
		unset($node_register->field_alumni_year['und']);
	}
    
    if(isset($field_business_forums) && count($field_business_forums) > 0){
		$bf = 0;
		unset($node_register->field_business_forums['und']);
		foreach($field_business_forums as $field_business_forum){
			if($field_business_forum != ''){
        		$node_register->field_business_forums['und'][$bf]['nid']   = $field_business_forum;
			}
			$bf++;
		}
    }

    if(isset($field_tourism) && count($field_tourism) > 0){
		$ft = 0;
		unset($node_register->field_tourism['und']);
		foreach($field_tourism as $fieldtourism){
			if($fieldtourism != ''){
        		$node_register->field_tourism['und'][$ft]['nid']   = $fieldtourism;
			}
			$ft++;
		}
    }
    if($field_meal_plan != ''){
        $node_register->field_meal_plan['und'][0]['nid']   = $field_meal_plan;
    }
    
    /*if($field_cruise != ''){
        $node_register->field_cruise['und'][0]['nid']   = $field_cruise;
    }*/
    
    if($field_sunday_night_show != ''){
        $node_register->field_sunday_night_show['und'][0]['value']  = $field_sunday_night_show;
    }
	if($field_attend_reunion != ''){
		$node_register->field_attend_reunion['und'][0]['value'] = $field_attend_reunion; 
	}
	else{
		unset($node_register->field_attend_reunion['und']);
	}
    
    $node_register->field_membership['und'][0]['nid']   = $field_membership_type;
        
    $node_register->field_amount_paid['und'][0]['value']   = $field_amount_paid;
    $node_register->field_amount_paid['und'][0]['safe_value']   = $field_amount_paid;
    
    $node_register->field_date_of_registration['und'][0]['value']   = $field_date_of_registration;
    $node_register->field_date_of_registration['und'][0]['safe_value']   = $field_date_of_registration;
    
    $node_register->field_payment_status['und'][0]['value'] = 'Processing';

/***Additional Members Information***/
	if(count($form['field_additional_members']['member']) > 0 && $field_membership_type == '1'){
	$k = 1;
	foreach($form['field_additional_members']['member'] as $member){
	if(isset($member['field_first_name_add_on']['#value']) && $member['field_first_name_add_on']['#value'] !=''){
		/*$cruise_add_on = explode('|',$member['field_cruise_add_on']['#value']);
		$field_cruise_add_on = $cruise[0];
		$field_cruise_price_add_on = (isset($cruise_add_on[1]) && $cruise_add_on[1] != '') ? $cruise_add_on[1] : 0.00;
		
		$meal_plan_add_on = explode('|',$member['field_meal_plan_add_on']['#value']);
		$field_meal_plan_add_on = $meal_plan_add_on[0];
		$field_meal_plan_price_add_on = (isset($meal_plan_add_on[1]) && $meal_plan_add_on[1] != '') ? $meal_plan_add_on[1] : 0.00;*/
		$variable_first_name_obj = 'field_first_name_additional_'.$k; 
		//$variable_middle_name_obj = 'field_middle_name_additional_'.$k;
		$variable_last_name_obj = 'field_last_name_additional_'.$k;
		$variable_relation_obj = 'field_relation_additional_'.$k;
		$variable_alumni_univ_obj = 'field_alumni_univ_additional_'.$k;
		//$variable_alumni_year_obj = 'field_alumni_year_additional_'.$k;
		$variable_sunday_night_show_obj = 'field_sunday_ns_additional_'.$k;
        //$variable_meal_plan_obj = 'field_meal_plan_additional_'.$k; 
		//$variable_cruise_plan_obj = 'field_cruise_additional_'.$k;	
		if($member['field_first_name_add_on']['#value'] != ''){
		  $node_register->{$variable_first_name_obj}['und'][0]['value'] = $member['field_first_name_add_on']['#value'];
		  $node_register->{$variable_first_name_obj}['und'][0]['safe_value'] = $member['field_first_name_add_on']['#value'];
		}
		/*if($member['field_middle_name_add_on']['#value'] != ''){	
			$node_register->{$variable_middle_name_obj}['und'][0]['value'] = $member['field_middle_name_add_on']['#value'];
			$node_register->{$variable_middle_name_obj}['und'][0]['safe_value'] = $member['field_middle_name_add_on']['#value'];	
		}*/
		if($member['field_last_name_add_on']['#value'] != ''){
		$node_register->{$variable_last_name_obj}['und'][0]['value'] = $member['field_last_name_add_on']['#value'];
		$node_register->{$variable_last_name_obj}['und'][0]['safe_value'] = $member['field_last_name_add_on']['#value'];
		}
		if($member['field_relation_add_on']['#value'] != ''){
			  $node_register->{$variable_relation_obj}['und'][0]['value'] = $member['field_relation_add_on']['#value'];
		}
		if($member['field_alumni_univ_add_on']['#value'] != ''){
		  $node_register->{$variable_alumni_univ_obj}['und'][0]['nid'] = $member['field_alumni_univ_add_on']['#value'];
		}
		/*if($member['field_alumni_year_add_on']['#value'] != ''){
		  $node_register->{$variable_alumni_year_obj}['und'][0]['value'] = $member['field_alumni_year_add_on']['#value'].'-01-01 00:00:00';
		}
		if($field_cruise_add_on != ''){	
			 $node_register->{$variable_cruise_plan_obj}['und'][0]['nid'] = $field_cruise_add_on;
			}
		if($field_meal_plan_add_on != ''){
			 $node_register->{$variable_meal_plan_obj}['und'][0]['nid'] = $field_meal_plan_add_on;
		}*/
		if($member['field_sunday_night_show_add_on']['#value'] != ''){
		 $node_register->{$variable_sunday_night_show_obj}['und'][0]['value'] = $member['field_sunday_night_show_add_on']['#value'];
		}
		$k++;	
		}
		
	  }
	}
	/************************************/    
    
    $node_register->status = 1;
    $node_register->promote = 0;
    $node_register->comment = 0;
    //echo "<pre>"; print_r($node_register); echo "</pre>"; die();
    $result = node_save($node_register);
    $nid = $node_register->nid;
    
 
    drupal_set_message('Please wait - Processing Payment','status');
    drupal_goto('payment/process',array('query'=>array('membership'=>$_SESSION['valid_membership_number'])));
}

function core_overrides_membership_registration_saved_form_submit($form, &$form_state){

    global $base_url;
            
    $member_nid = isset($_SESSION['valid_membership_nid']) ? $_SESSION['valid_membership_nid'] : '';
    $membership_email = isset($_SESSION['valid_membership_email']) ? $_SESSION['valid_membership_email'] : '';
    $membership_token = isset($_SESSION['valid_membership_token']) ? $_SESSION['valid_membership_token'] : '';
    $field_member_title = $form['field_member_title']['#value'];        
    $field_first_name = $form['field_first_name']['#value'];
    $field_middle_name = $form['field_middle_name']['#value'];
    $field_last_name = $form['field_last_name']['#value'];
    $field_country = $form['field_country']['#value'];
    $field_address = $form['field_address']['#value'];
    $field_address_1 = $form['field_address_1']['#value'];
    //$field_country_of_origin = $form['field_country_of_origin']['#value'];
    $field_city = $form['field_city']['#value'];
    $field_state = $form['field_state']['#value'];
    $field_state_others = $form['field_state_others']['#value'];
    $field_zip_code = $form['field_zip_code']['#value'];
    //$field_evening_phone = $form['field_evening_phone']['#value'];
    $field_mobile_phone = $form['field_mobile_phone']['#value'];
    $field_email = $form['field_email']['#value'];
    $field_alumni_univ = $form['field_alumni_univ']['#value'];
    $field_alumni_year = $form['field_alumni_year']['#value'];
    $field_business_forums = $form['field_business_forums']['#value'];
	$field_tourism = $form['field_tourism']['#value'];
	$field_attend_reunion = $form['field_attend_reunion']['#value'];
    $field_sunday_night_show= $form['field_sunday_night_show']['#value'];
     
    /*$cruise = explode('|',$form['field_cruise']['#value']);
    $field_cruise = $cruise[0];
    $field_cruise_price = (isset($cruise[1]) && $cruise[1] != '') ? $cruise[1] : 0.00;*/
    
    $meal_plan = explode('|',$form['field_meal_plan']['#value']);
    $field_meal_plan = $meal_plan[0];
    $field_meal_plan_price = (isset($meal_plan[1]) && $meal_plan[1] != '') ? $meal_plan[1] : 0.00;
    
    $membership_type = explode('|',$form['field_membership_type']['#value']);
    $field_membership_type = $membership_type[0];
    $field_membership_type_price = $membership_type[1];
    
    $field_payment_status = 'Processing';
    $field_date_of_registration = date('Y-m-d',time());
    $field_amount_paid = number_format($form['field_subscription_price']['#value'],2,'.',''); // Subscription Price.

    
    $systemUser = user_load_by_name('system_user'); 
    //echo $field_amount_paid.'<br>';
    //echo "<pre>"; print_r($form); echo "<pre>"; die();
    $node_register = node_load($member_nid); 
    $node_register->uid = (isset($systemUser->uid) && !empty($systemUser->uid) ? $systemUser->uid : 1);
        
    $node_register->nid = $member_nid;  
    $node_register->vid = $member_nid;  
    $node_register->field_member_title['und'][0]['value'] = $field_member_title;    
    $node_register->field_first_name['und'][0]['value']   = $field_first_name;
    $node_register->field_first_name['und'][0]['safe_value']   = $field_first_name;
        
    $node_register->field_middle_name['und'][0]['value']   = $field_middle_name;
    $node_register->field_middle_name['und'][0]['safe_value']   = $field_middle_name;
    
    $node_register->field_last_name['und'][0]['value']   = $field_last_name;
    $node_register->field_last_name['und'][0]['safe_value']   = $field_last_name;
    
    $node_register->field_country['und'][0]['iso2']   = $field_country;
    
    $node_register->field_address['und'][0]['value']   = $field_address;
    $node_register->field_address['und'][0]['safe_value']   = $field_address;
    
    $node_register->field_address_1['und'][0]['value']   = $field_address_1;
    $node_register->field_address_1['und'][0]['safe_value']   = $field_address_1;   
    
    //$node_register->field_country_of_origin['und'][0]['iso2']   = $field_country_of_origin;
    
    $node_register->field_city['und'][0]['value']   = $field_city;
    $node_register->field_city['und'][0]['safe_value']   = $field_city;
    
    $node_register->field_state['und'][0]['value']   = (isset($field_country) && $field_country == 'US') ? $field_state : '';
    
    $node_register->field_state_others['und'][0]['value']   = (isset($field_country) && $field_country != 'US') ? $field_state_others : '';
    $node_register->field_state_others['und'][0]['safe_value']   = (isset($field_country) && $field_country != 'US') ? $field_state_others : '';
    
    $node_register->field_zip_code['und'][0]['value']   = $field_zip_code;
    $node_register->field_zip_code['und'][0]['safe_value']   = $field_zip_code;
    
    /*$node_register->field_evening_phone['und'][0]['value']   = $field_evening_phone;
    $node_register->field_evening_phone['und'][0]['safe_value']   = $field_evening_phone;*/
    
    $node_register->field_mobile_phone['und'][0]['value']   = $field_mobile_phone;
    $node_register->field_mobile_phone['und'][0]['safe_value']   = $field_mobile_phone;
    
    $node_register->field_email_address['und'][0]['value']   = $field_email;
    $node_register->field_email_address['und'][0]['safe_value']   = $field_email;
    
	if($field_alumni_univ != ''){
	    $node_register->field_alumni_univ['und'][0]['nid']   = $field_alumni_univ;
	}
	else{
		unset($node_register->field_alumni_univ['und']);
	}
	if($field_alumni_year != ''){
    	$node_register->field_alumni_year['und'][0]['value']   = $field_alumni_year.'-01-01 00:00:00';
    }
	else{
		unset($node_register->field_alumni_year['und']);
	}
    if(isset($field_business_forums) && count($field_business_forums) > 0){
		$bf = 0;
		unset($node_register->field_business_forums['und']);
		foreach($field_business_forums as $field_business_forum){
			if($field_business_forum != ''){
        		$node_register->field_business_forums['und'][$bf]['nid']   = $field_business_forum;
			}
			$bf++;
		}
    }

    if(isset($field_tourism) && count($field_tourism) > 0){
		$ft = 0;
		unset($node_register->field_tourism['und']);
		foreach($field_tourism as $fieldtourism){
			if($fieldtourism != ''){
        		$node_register->field_tourism['und'][$ft]['nid']   = $fieldtourism;
			}
			$ft++;
		}
    }	
	
    if($field_meal_plan != ''){
        $node_register->field_meal_plan['und'][0]['nid']   = $field_meal_plan;
    }
    
    /*if($field_cruise != ''){
        $node_register->field_cruise['und'][0]['nid']   = $field_cruise;
    }*/
    
    if($field_sunday_night_show != ''){
        $node_register->field_sunday_night_show['und'][0]['value']  = $field_sunday_night_show;
    }
	
	if($field_attend_reunion != ''){
	$node_register->field_attend_reunion['und'][0]['value'] = $field_attend_reunion; 
	}
	else{
		unset($node_register->field_attend_reunion['und']);
	}
    
    $node_register->field_membership['und'][0]['nid']   = $field_membership_type;
        
    $node_register->field_amount_paid['und'][0]['value']   = $field_amount_paid;
    $node_register->field_amount_paid['und'][0]['safe_value']   = $field_amount_paid;
    
    $node_register->field_date_of_registration['und'][0]['value']   = $field_date_of_registration;
    $node_register->field_date_of_registration['und'][0]['safe_value']   = $field_date_of_registration;
    
    $node_register->field_payment_status['und'][0]['value'] = 'Processing';
    
	/***Additional Members Information***/
	if(count($form['field_additional_members']['member']) > 0 && $field_membership_type == '1'){
	$k = 1;
	foreach($form['field_additional_members']['member'] as $member){
	
	if(isset($member['field_first_name_add_on']['#value']) && $member['field_first_name_add_on']['#value'] !=''){
		/*$cruise_add_on = explode('|',$member['field_cruise_add_on']['#value']);
		$field_cruise_add_on = $cruise[0];
		$field_cruise_price_add_on = (isset($cruise_add_on[1]) && $cruise_add_on[1] != '') ? $cruise_add_on[1] : 0.00;
		
		$meal_plan_add_on = explode('|',$member['field_meal_plan_add_on']['#value']);
		$field_meal_plan_add_on = $meal_plan_add_on[0];
		$field_meal_plan_price_add_on = (isset($meal_plan_add_on[1]) && $meal_plan_add_on[1] != '') ? $meal_plan_add_on[1] : 0.00;*/
		//echo $field_cruise_add_on." ".$field_meal_plan_add_on;
		
		$variable_first_name_obj = 'field_first_name_additional_'.$k; 
		//$variable_middle_name_obj = 'field_middle_name_additional_'.$k;
		$variable_last_name_obj = 'field_last_name_additional_'.$k;
		$variable_relation_obj = 'field_relation_additional_'.$k;
		$variable_alumni_univ_obj = 'field_alumni_univ_additional_'.$k;
		//$variable_alumni_year_obj = 'field_alumni_year_additional_'.$k;
		$variable_sunday_night_show_obj = 'field_sunday_ns_additional_'.$k;
        //$variable_meal_plan_obj = 'field_meal_plan_additional_'.$k; 
		//$variable_cruise_plan_obj = 'field_cruise_additional_'.$k;	
		if($member['field_first_name_add_on']['#value'] != ''){
		  $node_register->{$variable_first_name_obj}['und'][0]['value'] = $member['field_first_name_add_on']['#value'];
		  $node_register->{$variable_first_name_obj}['und'][0]['safe_value'] = $member['field_first_name_add_on']['#value'];
		}
		/*if($member['field_middle_name_add_on']['#value'] != ''){	
			$node_register->{$variable_middle_name_obj}['und'][0]['value'] = $member['field_middle_name_add_on']['#value'];
			$node_register->{$variable_middle_name_obj}['und'][0]['safe_value'] = $member['field_middle_name_add_on']['#value'];	
		}*/
		if($member['field_last_name_add_on']['#value'] != ''){
		$node_register->{$variable_last_name_obj}['und'][0]['value'] = $member['field_last_name_add_on']['#value'];
		$node_register->{$variable_last_name_obj}['und'][0]['safe_value'] = $member['field_last_name_add_on']['#value'];
		}
		if($member['field_relation_add_on']['#value'] != ''){
			  $node_register->{$variable_relation_obj}['und'][0]['value'] = $member['field_relation_add_on']['#value'];
		}
		if($member['field_alumni_univ_add_on']['#value'] != ''){
		  $node_register->{$variable_alumni_univ_obj}['und'][0]['nid'] = $member['field_alumni_univ_add_on']['#value'];
		}
		/*if($member['field_alumni_year_add_on']['#value'] != ''){
		  $node_register->{$variable_alumni_year_obj}['und'][0]['value'] = $member['field_alumni_year_add_on']['#value'].'-01-01 00:00:00';
		}
		if($field_cruise_add_on != ''){	
			 $node_register->{$variable_cruise_plan_obj}['und'][0]['nid'] = $field_cruise_add_on;
			}
		if($field_meal_plan_add_on != ''){
			 $node_register->{$variable_meal_plan_obj}['und'][0]['nid'] = $field_meal_plan_add_on;
		}*/
		if($member['field_sunday_night_show_add_on']['#value'] != ''){
		 $node_register->{$variable_sunday_night_show_obj}['und'][0]['value'] = $member['field_sunday_night_show_add_on']['#value'];
		}
		$k++;
		}
		
	  }
	}
	/************************************/    
    $node_register->status = 1;
    $node_register->promote = 0;
    $node_register->comment = 0;
    //echo "<pre>"; print_r($node_register); echo "</pre>"; die();
    $result = node_save($node_register);
    $nid = $node_register->nid;
    
    drupal_set_message('Information has been saved successfully. Please login using email address and login token to complete the payment process.','status');
}

function core_overrides_membership_registration_form_pay_submit($form, &$form_state){

	global $base_url;
	$membership_number = generate_membership_number_1(); // Membership Number.
	//echo $membership_number; die();
    $membership_token = generate_membership_token(); // Membership Token.
	$field_member_title = $form['field_member_title']['#value'];	
	$field_first_name = $form['field_first_name']['#value'];
	$field_middle_name = $form['field_middle_name']['#value'];
	$field_last_name = $form['field_last_name']['#value'];
	$field_country = $form['field_country']['#value'];
	$field_address = $form['field_address']['#value'];
	$field_address_1 = $form['field_address_1']['#value'];
	//$field_country_of_origin = $form['field_country_of_origin']['#value'];
    $field_city = $form['field_city']['#value'];
    $field_state = $form['field_state']['#value'];
    $field_state_others = $form['field_state_others']['#value'];
	$field_zip_code = $form['field_zip_code']['#value'];
    //$field_evening_phone = $form['field_evening_phone']['#value'];
    $field_mobile_phone = $form['field_mobile_phone']['#value'];
    $field_email = $form['field_email']['#value'];
    $field_alumni_univ = $form['field_alumni_univ']['#value'];
    $field_alumni_year = $form['field_alumni_year']['#value'];
    $field_business_forums = $form['field_business_forums']['#value'];
	$field_tourism = $form['field_tourism']['#value'];
	$field_attend_reunion = $form['field_attend_reunion']['#value'];
    $field_sunday_night_show= $form['field_sunday_night_show']['#value'];
     
	/*$cruise = explode('|',$form['field_cruise']['#value']);
	$field_cruise = $cruise[0];
	$field_cruise_price = (isset($cruise[1]) && $cruise[1] != '') ? $cruise[1] : 0.00;*/
    
	$meal_plan = explode('|',$form['field_meal_plan']['#value']);
	$field_meal_plan = $meal_plan[0];
	$field_meal_plan_price = (isset($meal_plan[1]) && $meal_plan[1] != '') ? $meal_plan[1] : 0.00;
	
    $membership_type = explode('|',$form['field_membership_type']['#value']);
	$field_membership_type = $membership_type[0];
	$field_membership_type_price = $membership_type[1];
	
	
    $field_membership_number = $membership_number;
    $field_membership_token = $membership_token;
    $field_payment_status = 'Processing';
    $field_date_of_registration = date('Y-m-d',time());
    $field_amount_paid = number_format($form['field_subscription_price']['#value'],2,'.',''); // Subscription Price.

	
	$systemUser = user_load_by_name('system_user');	
	//echo $field_amount_paid.'<br>';
	//echo "<pre>"; print_r($form); echo "<pre>"; die();
	$node_register = new StdClass();
	$node_register->title = $membership_number;    
	$node_register->type = 'register';
	node_object_prepare($node_register);
	$node_register->language = LANGUAGE_NONE;
	$node_register->uid = (isset($systemUser->uid) && !empty($systemUser->uid) ? $systemUser->uid : 1);
		
	
	$node_register->field_member_title['und'][0]['value'] = $field_member_title;	
	$node_register->field_first_name['und'][0]['value']   = $field_first_name;
	$node_register->field_first_name['und'][0]['safe_value']   = $field_first_name;
		
	$node_register->field_middle_name['und'][0]['value']   = $field_middle_name;
	$node_register->field_middle_name['und'][0]['safe_value']   = $field_middle_name;
	
	$node_register->field_last_name['und'][0]['value']   = $field_last_name;
	$node_register->field_last_name['und'][0]['safe_value']   = $field_last_name;
	
	$node_register->field_country['und'][0]['iso2']   = $field_country;
	
	$node_register->field_address['und'][0]['value']   = $field_address;
	$node_register->field_address['und'][0]['safe_value']   = $field_address;
	
	$node_register->field_address_1['und'][0]['value']   = $field_address_1;
	$node_register->field_address_1['und'][0]['safe_value']   = $field_address_1;   
	
	//$node_register->field_country_of_origin['und'][0]['iso2']   = $field_country_of_origin;
	
	$node_register->field_city['und'][0]['value']   = $field_city;
	$node_register->field_city['und'][0]['safe_value']   = $field_city;
	
	$node_register->field_state['und'][0]['value']   = (isset($field_country) && $field_country == 'US') ? $field_state : '';
	
	$node_register->field_state_others['und'][0]['value']   = (isset($field_country) && $field_country != 'US') ? $field_state_others : '';
	$node_register->field_state_others['und'][0]['safe_value']   = (isset($field_country) && $field_country != 'US') ? $field_state_others : '';
	
	$node_register->field_zip_code['und'][0]['value']   = $field_zip_code;
	$node_register->field_zip_code['und'][0]['safe_value']   = $field_zip_code;
	
	/*$node_register->field_evening_phone['und'][0]['value']   = $field_evening_phone;
	$node_register->field_evening_phone['und'][0]['safe_value']   = $field_evening_phone;*/
	
	$node_register->field_mobile_phone['und'][0]['value']   = $field_mobile_phone;
	$node_register->field_mobile_phone['und'][0]['safe_value']   = $field_mobile_phone;
	
	$node_register->field_email_address['und'][0]['value']   = $field_email;
	$node_register->field_email_address['und'][0]['safe_value']   = $field_email;
	
	if($field_alumni_univ != ''){
		$node_register->field_alumni_univ['und'][0]['nid']   = $field_alumni_univ;
	}
	else{
		unset($node_register->field_alumni_univ['und']);
	}
	if($field_alumni_year != ''){
		$node_register->field_alumni_year['und'][0]['value']   = $field_alumni_year.'-01-01 00:00:00';
	}
	else{
		unset($node_register->field_alumni_year['und']);
	}
	
    if(isset($field_business_forums) && count($field_business_forums) > 0){
		$bf = 0;
		foreach($field_business_forums as $field_business_forum){
			if($field_business_forum != ''){
        		$node_register->field_business_forums['und'][$bf]['nid']   = $field_business_forum;
			}
			$bf++;
		}
    }

    if(isset($field_tourism) && count($field_tourism) > 0){
		$ft = 0;
		foreach($field_tourism as $fieldtourism){
        	if($fieldtourism != ''){
				$node_register->field_tourism['und'][$ft]['nid']   = $fieldtourism;
			}
			$ft++;
		}
    }
	if($field_meal_plan != ''){
		$node_register->field_meal_plan['und'][0]['nid']   = $field_meal_plan;
	}
	
	/*if($field_cruise != ''){
		$node_register->field_cruise['und'][0]['nid']   = $field_cruise;
	}*/
	
    if($field_sunday_night_show != ''){
        $node_register->field_sunday_night_show['und'][0]['value']  = $field_sunday_night_show;
    }
	
	if($field_attend_reunion != ''){
		$node_register->field_attend_reunion['und'][0]['value'] = $field_attend_reunion; 
	}
	else{
		unset($node_register->field_attend_reunion['und']);
	}
    
	$node_register->field_membership['und'][0]['nid']   = $field_membership_type;
	
	$node_register->field_membership_number['und'][0]['value']   = $membership_number;
	$node_register->field_membership_number['und'][0]['safe_value']   = $membership_number;
	
	$node_register->field_membership_token['und'][0]['value']   = $membership_token;
	$node_register->field_membership_token['und'][0]['safe_value']   = $membership_token;
	
	$node_register->field_amount_paid['und'][0]['value']   = $field_amount_paid;
	$node_register->field_amount_paid['und'][0]['safe_value']   = $field_amount_paid;
	
	$node_register->field_date_of_registration['und'][0]['value']   = $field_date_of_registration;
	$node_register->field_date_of_registration['und'][0]['safe_value']   = $field_date_of_registration;
	
	$node_register->field_payment_status['und'][0]['value'] = 'Processing';

	/***Additional Members Information***/
	if(count($form['field_additional_members']['member']) > 0 && $field_membership_type == '1'){
	$k = 1;
	foreach($form['field_additional_members']['member'] as $member){
	if(isset($member['field_first_name_add_on']['#value']) && $member['field_first_name_add_on']['#value'] !=''){
		/*$cruise_add_on = explode('|',$member['field_cruise_add_on']['#value']);
		$field_cruise_add_on = $cruise[0];
		$field_cruise_price_add_on = (isset($cruise_add_on[1]) && $cruise_add_on[1] != '') ? $cruise_add_on[1] : 0.00;
		
		$meal_plan_add_on = explode('|',$member['field_meal_plan_add_on']['#value']);
		$field_meal_plan_add_on = $meal_plan_add_on[0];
		$field_meal_plan_price_add_on = (isset($meal_plan_add_on[1]) && $meal_plan_add_on[1] != '') ? $meal_plan_add_on[1] : 0.00;*/
		$variable_first_name_obj = 'field_first_name_additional_'.$k; 
		//$variable_middle_name_obj = 'field_middle_name_additional_'.$k;
		$variable_last_name_obj = 'field_last_name_additional_'.$k;
		$variable_relation_obj = 'field_relation_additional_'.$k;
		$variable_alumni_univ_obj = 'field_alumni_univ_additional_'.$k;
		//$variable_alumni_year_obj = 'field_alumni_year_additional_'.$k;
		$variable_sunday_night_show_obj = 'field_sunday_ns_additional_'.$k;
        //$variable_meal_plan_obj = 'field_meal_plan_additional_'.$k; 
		//$variable_cruise_plan_obj = 'field_cruise_additional_'.$k;	
		if($member['field_first_name_add_on']['#value'] != ''){
		  $node_register->{$variable_first_name_obj}['und'][0]['value'] = $member['field_first_name_add_on']['#value'];
		  $node_register->{$variable_first_name_obj}['und'][0]['safe_value'] = $member['field_first_name_add_on']['#value'];
		}
		/*if($member['field_middle_name_add_on']['#value'] != ''){	
			$node_register->{$variable_middle_name_obj}['und'][0]['value'] = $member['field_middle_name_add_on']['#value'];
			$node_register->{$variable_middle_name_obj}['und'][0]['safe_value'] = $member['field_middle_name_add_on']['#value'];	
		}*/
		if($member['field_last_name_add_on']['#value'] != ''){
		$node_register->{$variable_last_name_obj}['und'][0]['value'] = $member['field_last_name_add_on']['#value'];
		$node_register->{$variable_last_name_obj}['und'][0]['safe_value'] = $member['field_last_name_add_on']['#value'];
		}
		if($member['field_relation_add_on']['#value'] != ''){
			  $node_register->{$variable_relation_obj}['und'][0]['value'] = $member['field_relation_add_on']['#value'];
		}
		if($member['field_alumni_univ_add_on']['#value'] != ''){
		  $node_register->{$variable_alumni_univ_obj}['und'][0]['nid'] = $member['field_alumni_univ_add_on']['#value'];
		}
		/*if($member['field_alumni_year_add_on']['#value'] != ''){
		  $node_register->{$variable_alumni_year_obj}['und'][0]['value'] = $member['field_alumni_year_add_on']['#value'].'-01-01 00:00:00';
		}
		if($field_cruise_add_on != ''){	
			 $node_register->{$variable_cruise_plan_obj}['und'][0]['nid'] = $field_cruise_add_on;
			}
		if($field_meal_plan_add_on != ''){
			 $node_register->{$variable_meal_plan_obj}['und'][0]['nid'] = $field_meal_plan_add_on;
		}*/
		if($member['field_sunday_night_show_add_on']['#value'] != ''){
		 $node_register->{$variable_sunday_night_show_obj}['und'][0]['value'] = $member['field_sunday_night_show_add_on']['#value'];
		}
		$k++;
	}
	
	}
	}
	/************************************/ 	
	
	$node_register->status = 1;
	$node_register->promote = 0;
	$node_register->comment = 0;
	//echo "<pre>"; print_r($node_register); echo "</pre>"; die();
	$result = node_save($node_register);
    $nid = $node_register->nid;
    //echo "<pre>"; print_r($nid); echo "</pre>"; die();
    
	$from = $systemUser->mail;
	$to = $field_email; //variable_get('site_mail', 'notification@nabc2017.com');
	$subject = 'Thank You for registering at NABC 2017 : Welcome';
	$email_body = '';
	if(file_exists(drupal_get_path('module','core_overrides').'/email_templates/email_template_welcome.php')) require(drupal_get_path('module','core_overrides').'/email_templates/email_template_welcome.php');
	$body    = $email_body;
	//echo $from.'<br/>';
	//echo $to.'<br/>';
	//echo $subject.'<br/>';
	//echo $message.'<br/>';
	//echo $body.'<br/>';
	//die();
	if(core_overrides_mail($from,$to,$subject,$body)){
      //drupal_set_message('Message sent successfully. Our representative will get back to you shortly.','status');		
	}
	else{
		drupal_set_message('Error Unable to send Message. Try again.','error');	
	}
	
	
	drupal_set_message('Please wait - Processing Payment','status');
	drupal_goto('payment/process',array('query'=>array('membership'=>$membership_number)));
}

function core_overrides_membership_registration_form_submit($form, &$form_state){

	global $base_url;
	
    $membership_number = generate_membership_number_1(); // Membership Number.
    $membership_token = generate_membership_token(); // Membership Token.
	$field_member_title = $form['field_member_title']['#value'];	
	$field_first_name = $form['field_first_name']['#value'];
	$field_middle_name = $form['field_middle_name']['#value'];
	$field_last_name = $form['field_last_name']['#value'];
	$field_country = $form['field_country']['#value'];
	$field_address = $form['field_address']['#value'];
	$field_address_1 = $form['field_address_1']['#value'];
	//$field_country_of_origin = $form['field_country_of_origin']['#value'];
    $field_city = $form['field_city']['#value'];
    $field_state = $form['field_state']['#value'];
    $field_state_others = $form['field_state_others']['#value'];
	$field_zip_code = $form['field_zip_code']['#value'];
    //$field_evening_phone = $form['field_evening_phone']['#value'];
    $field_mobile_phone = $form['field_mobile_phone']['#value'];
    $field_email = $form['field_email']['#value'];
    $field_alumni_univ = $form['field_alumni_univ']['#value'];
    $field_alumni_year = $form['field_alumni_year']['#value'];
    $field_business_forums = $form['field_business_forums']['#value'];
	$field_tourism = $form['field_tourism']['#value'];
	$field_attend_reunion = $form['field_attend_reunion']['#value'];
    $field_sunday_night_show= $form['field_sunday_night_show']['#value'];
     
	/*$cruise = explode('|',$form['field_cruise']['#value']);
	$field_cruise = $cruise[0];
	$field_cruise_price = (isset($cruise[1]) && $cruise[1] != '') ? $cruise[1] : 0.00;*/
    
	$meal_plan = explode('|',$form['field_meal_plan']['#value']);
	$field_meal_plan = $meal_plan[0];
	$field_meal_plan_price = (isset($meal_plan[1]) && $meal_plan[1] != '') ? $meal_plan[1] : 0.00;
	
    $membership_type = explode('|',$form['field_membership_type']['#value']);
	$field_membership_type = $membership_type[0];
	$field_membership_type_price = $membership_type[1];
	
	
    $field_membership_number = $membership_number;
    $field_membership_token = $membership_token;
    $field_payment_status = 'Processing';
    $field_date_of_registration = date('Y-m-d',time());
    $field_amount_paid = number_format($form['field_subscription_price']['#value'],2,'.',''); // Subscription Price.

	
	$systemUser = user_load_by_name('system_user');	
	//echo $field_amount_paid.'<br>';
	//echo "<pre>"; print_r($form); echo "<pre>"; die();
	$node_register = new StdClass();
	$node_register->title = $membership_number;    
	$node_register->type = 'register';
	node_object_prepare($node_register);
	$node_register->language = LANGUAGE_NONE;
	$node_register->uid = (isset($systemUser->uid) && !empty($systemUser->uid) ? $systemUser->uid : 1);
		
	
	$node_register->field_member_title['und'][0]['value'] = $field_member_title;	
	$node_register->field_first_name['und'][0]['value']   = $field_first_name;
	$node_register->field_first_name['und'][0]['safe_value']   = $field_first_name;
		
	$node_register->field_middle_name['und'][0]['value']   = $field_middle_name;
	$node_register->field_middle_name['und'][0]['safe_value']   = $field_middle_name;
	
	$node_register->field_last_name['und'][0]['value']   = $field_last_name;
	$node_register->field_last_name['und'][0]['safe_value']   = $field_last_name;
	
	$node_register->field_country['und'][0]['iso2']   = $field_country;
	
	$node_register->field_address['und'][0]['value']   = $field_address;
	$node_register->field_address['und'][0]['safe_value']   = $field_address;
	
	$node_register->field_address_1['und'][0]['value']   = $field_address_1;
	$node_register->field_address_1['und'][0]['safe_value']   = $field_address_1;   
	
	//$node_register->field_country_of_origin['und'][0]['iso2']   = $field_country_of_origin;
	
	$node_register->field_city['und'][0]['value']   = $field_city;
	$node_register->field_city['und'][0]['safe_value']   = $field_city;
	
	$node_register->field_state['und'][0]['value']   = (isset($field_country) && $field_country == 'US') ? $field_state : '';
	
	$node_register->field_state_others['und'][0]['value']   = (isset($field_country) && $field_country != 'US') ? $field_state_others : '';
	$node_register->field_state_others['und'][0]['safe_value']   = (isset($field_country) && $field_country != 'US') ? $field_state_others : '';
	
	$node_register->field_zip_code['und'][0]['value']   = $field_zip_code;
	$node_register->field_zip_code['und'][0]['safe_value']   = $field_zip_code;
	
	/*$node_register->field_evening_phone['und'][0]['value']   = $field_evening_phone;
	$node_register->field_evening_phone['und'][0]['safe_value']   = $field_evening_phone;*/
	
	$node_register->field_mobile_phone['und'][0]['value']   = $field_mobile_phone;
	$node_register->field_mobile_phone['und'][0]['safe_value']   = $field_mobile_phone;
	
	$node_register->field_email_address['und'][0]['value']   = $field_email;
	$node_register->field_email_address['und'][0]['safe_value']   = $field_email;
	
	if($field_alumni_univ != ''){
		$node_register->field_alumni_univ['und'][0]['nid']   = $field_alumni_univ;
	}
	else{
		unset($node_register->field_alumni_univ['und']);
	}
	
	if($field_alumni_year != ''){
		$node_register->field_alumni_year['und'][0]['value']   = $field_alumni_year.'-01-01 00:00:00';
	}
	else{
		unset($node_register->field_alumni_year['und']);
	}
	
    if(isset($field_business_forums) && count($field_business_forums) > 0){
		$bf = 0;
		foreach($field_business_forums as $field_business_forum){
			if($field_business_forum != ''){
        		$node_register->field_business_forums['und'][$bf]['nid']   = $field_business_forum;
			}
			$bf++;
		}
    }

    if(isset($field_tourism) && count($field_tourism) > 0){
		$ft = 0;
		foreach($field_tourism as $fieldtourism){
			if($fieldtourism != ''){
        		$node_register->field_tourism['und'][$ft]['nid']   = $fieldtourism;
			}
			$ft++;
		}
    }
	if($field_meal_plan != ''){
		$node_register->field_meal_plan['und'][0]['nid']   = $field_meal_plan;
	}
	
	/*if($field_cruise != ''){
		$node_register->field_cruise['und'][0]['nid']   = $field_cruise;
	}*/
	
    if($field_sunday_night_show != ''){
        $node_register->field_sunday_night_show['und'][0]['value']  = $field_sunday_night_show;
    }

	if($field_attend_reunion != ''){
		$node_register->field_attend_reunion['und'][0]['value'] = $field_attend_reunion; 
	}
    
	$node_register->field_membership['und'][0]['nid']   = $field_membership_type;
	
	$node_register->field_membership_number['und'][0]['value']   = $membership_number;
	$node_register->field_membership_number['und'][0]['safe_value']   = $membership_number;
	
	$node_register->field_membership_token['und'][0]['value']   = $membership_token;
	$node_register->field_membership_token['und'][0]['safe_value']   = $membership_token;
	
	$node_register->field_amount_paid['und'][0]['value']   = $field_amount_paid;
	$node_register->field_amount_paid['und'][0]['safe_value']   = $field_amount_paid;
	
	$node_register->field_date_of_registration['und'][0]['value']   = $field_date_of_registration;
	$node_register->field_date_of_registration['und'][0]['safe_value']   = $field_date_of_registration;
	
	$node_register->field_payment_status['und'][0]['value'] = 'Processing';
	
	/***Additional Members Information***/
	if(count($form['field_additional_members']['member']) > 0 && $field_membership_type == '1'){
	$k = 1;
	foreach($form['field_additional_members']['member'] as $member){
	if(isset($member['field_first_name_add_on']['#value']) && $member['field_first_name_add_on']['#value'] !=''){
		/*$cruise_add_on = explode('|',$member['field_cruise_add_on']['#value']);
		$field_cruise_add_on = $cruise[0];
		$field_cruise_price_add_on = (isset($cruise_add_on[1]) && $cruise_add_on[1] != '') ? $cruise_add_on[1] : 0.00;
		
		$meal_plan_add_on = explode('|',$member['field_meal_plan_add_on']['#value']);
		$field_meal_plan_add_on = $meal_plan_add_on[0];
		$field_meal_plan_price_add_on = (isset($meal_plan_add_on[1]) && $meal_plan_add_on[1] != '') ? $meal_plan_add_on[1] : 0.00;*/
		
		
		$variable_first_name_obj = 'field_first_name_additional_'.$k; 
		//$variable_middle_name_obj = 'field_middle_name_additional_'.$k;
		$variable_last_name_obj = 'field_last_name_additional_'.$k;
		$variable_relation_obj = 'field_relation_additional_'.$k;
		$variable_alumni_univ_obj = 'field_alumni_univ_additional_'.$k;
		//$variable_alumni_year_obj = 'field_alumni_year_additional_'.$k;
		$variable_sunday_night_show_obj = 'field_sunday_ns_additional_'.$k;
        //$variable_meal_plan_obj = 'field_meal_plan_additional_'.$k; 
		//$variable_cruise_plan_obj = 'field_cruise_additional_'.$k;	
		if($member['field_first_name_add_on']['#value'] != ''){
		  $node_register->{$variable_first_name_obj}['und'][0]['value'] = $member['field_first_name_add_on']['#value'];
		  $node_register->{$variable_first_name_obj}['und'][0]['safe_value'] = $member['field_first_name_add_on']['#value'];
		}
		/*if($member['field_middle_name_add_on']['#value'] != ''){	
			$node_register->{$variable_middle_name_obj}['und'][0]['value'] = $member['field_middle_name_add_on']['#value'];
			$node_register->{$variable_middle_name_obj}['und'][0]['safe_value'] = $member['field_middle_name_add_on']['#value'];	
		}*/
		if($member['field_last_name_add_on']['#value'] != ''){
		$node_register->{$variable_last_name_obj}['und'][0]['value'] = $member['field_last_name_add_on']['#value'];
		$node_register->{$variable_last_name_obj}['und'][0]['safe_value'] = $member['field_last_name_add_on']['#value'];
		}
		if($member['field_relation_add_on']['#value'] != ''){
			  $node_register->{$variable_relation_obj}['und'][0]['value'] = $member['field_relation_add_on']['#value'];
		}
		if($member['field_alumni_univ_add_on']['#value'] != ''){
		  $node_register->{$variable_alumni_univ_obj}['und'][0]['nid'] = $member['field_alumni_univ_add_on']['#value'];
		}
		/*if($member['field_alumni_year_add_on']['#value'] != ''){
		  $node_register->{$variable_alumni_year_obj}['und'][0]['value'] = $member['field_alumni_year_add_on']['#value'].'-01-01 00:00:00';
		}
		if($field_cruise_add_on != ''){	
			 $node_register->{$variable_cruise_plan_obj}['und'][0]['nid'] = $field_cruise_add_on;
			}
		if($field_meal_plan_add_on != ''){
			 $node_register->{$variable_meal_plan_obj}['und'][0]['nid'] = $field_meal_plan_add_on;
		}*/
		if($member['field_sunday_night_show_add_on']['#value'] != ''){
		 $node_register->{$variable_sunday_night_show_obj}['und'][0]['value'] = $member['field_sunday_night_show_add_on']['#value'];
		}
		$k++;
		}
		

	}
	}
	/************************************/ 	
	
	$node_register->status = 1;
	$node_register->promote = 0;
	$node_register->comment = 0;
	//echo "<pre>"; print_r($node_register); echo "</pre>"; die();
	$result = node_save($node_register);
    $nid = $node_register->nid;
	
    //echo "<pre>"; print_r($nid); echo "</pre>"; die();
    
	$from = $systemUser->mail;
	$to = $field_email; //variable_get('site_mail', 'notification@nabc2017.com');
	$subject = 'Thank You for registering at NABC 2017 : Welcome';
	if(file_exists(drupal_get_path('module','core_overrides').'/email_templates/email_template_welcome.php')) require(drupal_get_path('module','core_overrides').'/email_templates/email_template_welcome.php');
	$body    = $email_body;
	//echo $from.'<br/>';
	//echo $from.'<br/>';
	//echo $to.'<br/>';
	//echo $subject.'<br/>';
	//echo $message.'<br/>';
	//echo $body.'<br/>';
	//die();
	if(core_overrides_mail($from,$to,$subject,$body)){
      //drupal_set_message('Message sent successfully. Our representative will get back to you shortly.','status');		
	}
	else{
		drupal_set_message('Error Unable to send Message. Try again.','error');	
	}
	
	
	drupal_set_message('Thanks for interest at NABC2017. Please check email for all details to complete the process','status');
}

/****************************************************************/

/*********************Donor Registration*************************/

function core_overrides_membership_registration_donor_form($form, $form_state, $no_js_use = FALSE){
	global $language;
	$currentLanguage = $language->language;
	
	$membership_types = get_membership_types();
	$membership_types_option = array();
	if(count($membership_types) > 0){
	$membership_types_option[''] = t('Select');    
	foreach($membership_types as $membership_type){
		$membership_types_option[$membership_type['nid'].'|'.$membership_type['subscription_amount']] = t($membership_type['title']);
		}
	}
	
	$countries_option = get_countries_list();
	$state_list_us_option = get_state_list_us();
	$alumni_universities = get_alumni_university();
	$alumni_universities_option = array();
	if(count($alumni_universities) > 0){
	$alumni_universities_option[''] = t('Select');      
	foreach($alumni_universities as $alumni_university){
		$alumni_universities_option[$alumni_university['nid']] = t($alumni_university['title']);
		}
	}
	$alumni_year = get_alumni_year();
	$business_forums = get_business_forums();
	$business_forums_option = array();
	if(count($business_forums) > 0){     
	foreach($business_forums as $business_forum){
		$business_forums_option[$business_forum['nid']] = t($business_forum['title']);
		}
	}
	$tourisms = get_tourism_list();
	$tourism_option = array();
	if(count($tourisms) > 0){    
	foreach($tourisms as $tourism){
		$tourism_option[$tourism['nid']] = t($tourism['title']);
		}
	}	
	/*$cruise_list = get_cruise_list();
	$cruise_list_option = array();
	if(count($cruise_list) > 0){
	   $cruise_list_option[''] = t('Select'); 
	foreach($cruise_list as $cruise){
		$cruise_list_option[$cruise['nid'].'|'.$cruise['cruise_price']] = t($cruise['title']);
		}
	}*/
    $meal_plan_list = get_meal_plan_list();
    $meal_plan_option = array();
    if(count($meal_plan_list) > 0){
    $meal_plan_option[''] = t('Select');     
    foreach($meal_plan_list as $meal_plan){
        $meal_plan_option[$meal_plan['nid'].'|'.$meal_plan['meal_plan_price']] = t($meal_plan['title']);
        }
    }
	
	$hotels = get_hotel_list();
	$hotels_option = array();
	if(count($hotels) > 0){
	$hotels_option[''] = t('Select');      
	foreach($hotels as $hotel){
		$hotels_option[$hotel['nid']] = t($hotel['title']);
		}
	}
	//echo "<pre>"; print_r($countries_option); echo "</pre>"; die();
	
	$form = array();
	
	/*$form['field_membership_type'] = array(
	'#title' => t('Membership Type'),
    '#type' => 'select',
    '#options' => $membership_types_option,
    '#attributes' => array('class'=> array('c-select'),"onchange"=>"javascript:update_total_price();", "id"=>"field_membership_type"),
    '#default_value' => '',
    );	*/
	
    $form['field_member_title'] = array(
    '#title' => t('Title'),
    '#type' => 'select',
    '#options' => array(''=>t('Select'),'Dr.'=>t('Dr.'),'Mr.'=>t('Mr.'),'Mrs.'=>t('Mrs.'),'Ms.'=>t('Ms.'),'Miss'=>t('Miss'),'Master'=>t('Master')),
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id'=>'field_member_title',),
    );
	
	$form['field_first_name'] = array(
	'#title' => t('First Name'),	
    '#type' => 'textfield',
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'placeholder' => t('first name'),'id'=>'field_first_name', "maxlength"=>"30"),
	);
	
	$form['field_middle_name'] = array(
	'#title' => t('Middle Name'),	
    '#type' => 'textfield',
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'placeholder' => t('middle name'),'id'=>'field_middle_name', "maxlength"=>"30"),
	);
	
	$form['field_last_name'] = array(
	'#title' => t('Last Name'),	
    '#type' => 'textfield',
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'), 'placeholder' => t('last name'),'id'=>'field_last_name', "maxlength"=>"30"),
	);
	
	$form['field_address'] = array(
	'#title' => t('Address 1'),
    '#type' => 'textfield',
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'placeholder' => t('address - house number, street name'),'id'=>'field_address',"maxlength"=>"100"),
	); 
	
	$form['field_address_1'] = array(
	'#title' => t('Address 2'),
    '#type' => 'textfield',
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'placeholder' => t('unit,apt,ste'),'id'=>'field_address_1',"maxlength"=>"100"),
	); 

	
	/*$form['field_country_of_origin'] = array(
	'#title' => t('Country of Origin'),
    '#type' => 'select',
    '#options' => $countries_option,
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id'=>'field_country_of_origin',),
    '#default_value' => 'IN',
  	);*/
	
	$form['field_country'] = array(
	'#title' => t('Country'),
    '#type' => 'select',
	'#default_value' => 'US',
    '#options' => $countries_option,
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id'=>'field_country','onchange'=>'javascript:changeStateForm();'),
  	);
	
	$form['field_city'] = array(
	'#title' => t('City'),	
    '#type' => 'textfield',
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'), 'placeholder' => t('city'),'id'=>'field_city', "maxlength"=>"30"),
	);
	
	$form['field_state'] = array(
	'#title' => t('State (US)'),
    '#type' => 'select',
    '#options' => $state_list_us_option,
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id'=>'field_state',),
  	);
	
	$form['field_state_others'] = array(
	'#title' => t('State (Non US)'),	
    '#type' => 'textfield',
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'placeholder' => t('state if non US'),'id'=>'field_state_others', "maxlength"=>"30"),
	);
	
	$form['field_zip_code'] = array(
	'#title' => t('Zip Code'),	
    '#type' => 'telfield',
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md','tel'),'placeholder' => t('zip code'),'id'=>'field_zip_code', "maxlength"=>"8"),
	);	

	/*$form['field_evening_phone'] = array(
	'#title' => t('Evening Phone'),	
    '#type' => 'telfield',
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md','tel'),'placeholder' => t('evening phone'),'id'=>'field_evening_phone', "maxlength"=>"16"),
  	'#default_value' => '',
	);*/
	
	$form['field_mobile_phone'] = array(
	'#title' => t('Contact Phone'),	
    '#type' => 'telfield',
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md','tel'),'placeholder' => t('contact phone'),'id'=>'field_mobile_phone', "maxlength"=>"16"),
	);
	
	$form['field_email'] = array(
	'#title' => t('Email'),
    '#type' => 'emailfield',
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md','email'),'placeholder' => t('email address'),'id'=>'field_email', "maxlength"=>"60"),
	);
	
	$form['field_alumni_univ'] = array(
	'#title' => t('Alumni'),
    '#type' => 'select',
    '#options' => $alumni_universities_option,
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id'=>'field_alumni_univ',),
  	);
	
	$form['field_alumni_year'] = array(
	'#title' => t('Graduation Year'),
    '#type' => 'select',
    '#options' => $alumni_year,
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id'=>'field_alumni_year',),
	'#default_value' => '',
  	);

	$form['field_business_forums'] = array(
	'#title' => t('Business Forums'),
    '#type' => 'select',
    '#options' => $business_forums_option,
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id'=>'field_business_forums',),
    '#default_value' => '',
	'#multiple' => TRUE,
  	);


	$form['field_tourism'] = array(
	'#title' => t('Tourism'),
    '#type' => 'select',
    '#options' => $tourism_option,
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id'=>'field_tourism',),
    '#default_value' => '',
	'#multiple' => TRUE,
  	);
	
	$form['field_attend_reunion'] = array(
    '#title' => t('Attend Re-Union'),
    '#type' => 'select',
    '#options' => array(''=>t('Select'),'yes'=>t('Yes'),'no'=>t('No')),
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'), 'onchange'=>'javascript:update_total_price();','id'=>'field_attend_reunion',),
    '#default_value' => '',
    );	
	
	/*$form['field_cruise'] = array(
	'#title' => t('Cruise'),
    '#type' => 'select',
    '#options' => $cruise_list_option,
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id'=>'field_cruise', 'onchange' => 'javascript:'),
    '#default_value' => '',
  	);*/	
    
    $form['field_meal_plan'] = array(
    '#title' => t('Meal Plan'),
    '#type' => 'select',
    '#options' => $meal_plan_option,
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id'=>'field_meal_plan', 'onchange' => 'javascript:'),
    '#default_value' => '',
	'#disabled' => TRUE,
    );  
    
   $form['field_sunday_night_show'] = array(
    '#title' => t('Sunday Night Show'),
    '#type' => 'select',
    '#options' => array(''=>t('Select'),'Yes'=>t('Yes'),'No'=>t('No')),
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'), 'onchange'=>'javascript:update_total_price();','id'=>'field_sunday_night_show',),
    '#default_value' => '',
    );
	
	$form['field_hotel'] = array(
    '#title' => t('Hotel'),
    '#type' => 'select',
    '#options' => $hotels_option,
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id'=>'field_hotel', 'onchange' => 'javascript: update_total_price();'),
    '#default_value' => '',
    );
    
	/**Add On Members Fields**/
	
	if (empty($form_state['add_members'])) {
        $form_state['add_members'] = 7;
    }
    
	$form['field_additional_members'] = array(
	  '#type' => 'container', 
	  '#title' => t('Additional Members'),  
	  '#collapsible' => FALSE, 
	  '#tree' => TRUE,
	  '#prefix' => '<div class="col-sm-12 center-xs wow fadeInLeft animated"><div id="additional-members-wrapper" class="additional-members-wrapper"> <h5 class="form-heading" id="step2-form-heading">Additional Member Information</h5></div>',
   	  '#suffix' => '<div class="col-sm-12 center-xs wow fadeInLeft animated add_more_sponsor_badge_container"><div class="form-group"><button class="btn btn-sm btn-primary add_more_member_info_btn" id="add_more_member_info_btn">Add More</button></div></div></div>',
	);

	for ($i = 0; $i < $form_state['add_members']; $i++) {
    
    $form['field_additional_members']['member'][$i] = array(
      '#type' => 'fieldset', 
      '#tree' => TRUE,
	  '#attributes' => array('class' => array('form_wrapper_additional_members'),),
    );
    
	$form['field_additional_members']['member'][$i]['field_first_name_add_on'] = array(
	'#title' => t('First Name'.' '.($i+1)),	
    '#type' => 'textfield',
    
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'placeholder' => t('first name'),'id' => 'field_first_name_add_on_'.$i,'onblur'=>'javascript:update_total_price();', "maxlength"=>"30",'autocomplete' => 'off'),
  	'#default_value' => '',
	'#prefix' => '<div class="col-sm-2 center-xs wow fadeInLeft animated"><div class="form-group">',
	'#suffix' => '</div></div>',
	'#group' => 'field_additional_members',
	);
	
	/*$form['field_additional_members']['member'][$i]['field_middle_name_add_on'] = array(
	'#title' => t('Middle Name'.' '.($i+1)),	
    '#type' => 'textfield',
    
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'placeholder' => t('middle name'),'id' => 'field_middle_name_add_on_'.$i, "maxlength"=>"30"),
  	'#default_value' => '',
	'#prefix' => '<div class="col-sm-4 center-xs wow fadeInLeft animated"><div class="form-group">',
	'#suffix' => '</div></div>',
	'#group' => 'field_additional_members',
	);*/
	
	$form['field_additional_members']['member'][$i]['field_last_name_add_on'] = array(
	'#title' => t('Last Name'.' '.($i+1)),	
    '#type' => 'textfield',
    
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'placeholder' => t('last name'),'id' => 'field_last_name_add_on_'.$i, "maxlength"=>"30",'autocomplete' => 'off'),
  	'#default_value' => '',
	'#prefix' => '<div class="col-sm-2 center-xs wow fadeInLeft animated"><div class="form-group">',
	'#suffix' => '</div></div>',
	'#group' => 'field_additional_members',
	);
	
	$form['field_additional_members']['member'][$i]['field_relation_add_on'] = array(
	'#title' => t('Relation'.' '.($i+1)),	
    '#type' => 'select',
    
    '#options' => array(''=> t('Select'), 'Child' => t('Child (5-18 Years)'),'Spouse' => t('Spouse'),'Parent' => t('Parent'),),
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id' => 'field_relation_add_on_'.$i,'autocomplete' => 'off'),
	'#prefix' => '<div class="col-sm-2 center-xs wow fadeInLeft animated"><div class="form-group">',
	'#suffix' => '</div></div>',
	'#group' => 'field_additional_members',
	);
	
	$form['field_additional_members']['member'][$i]['field_alumni_univ_add_on']= array(
	'#title' => t('Alumni '.' '.($i+1)),
    '#type' => 'select',
    
    '#options' => $alumni_universities_option,
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id' => 'field_alumni_univ_add_on_'.$i,'autocomplete' => 'off'),
	'#prefix' => '<div class="col-sm-2 center-xs wow fadeInLeft animated"><div class="form-group">',
	'#suffix' => '</div></div>',
	'#group' => 'field_additional_members',
  	);
	
	/*$form['field_additional_members']['member'][$i]['field_alumni_year_add_on']= array(
	'#title' => t('Alumni Year'.' '.($i+1)),
    '#type' => 'select',
    
    '#options' => $alumni_year,
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id' => 'field_alumni_year_add_on_'.$i,),
	'#default_value' => '',
	'#prefix' => '<div class="col-sm-4 center-xs wow fadeInLeft animated"><div class="form-group">',
	'#suffix' => '</div></div>',
	'#group' => 'field_additional_members',
  	);
	
	$form['field_additional_members']['member'][$i]['field_cruise_add_on'] = array(
	'#title' => t('Cruise'.' '.($i+1)),
    '#type' => 'select',
    
    '#options' => $cruise_list_option,
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id' => 'field_cruise_add_on_'.$i,),
	'#prefix' => '<div class="col-sm-6 center-xs wow fadeInLeft animated"><div class="form-group">',
	'#suffix' => '</div></div>',
	'#group' => 'field_additional_members',
  	);	
    
    $form['field_additional_members']['member'][$i]['field_meal_plan_add_on'] = array(
    '#title' => t('Meal Plan'.' '.($i+1)),
    '#type' => 'select',  
	'#prefix' => '<div class="col-sm-6 center-xs wow fadeInLeft animated"><div class="form-group">',
	'#suffix' => '</div></div>',
    '#options' => $meal_plan_option,
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id' => 'field_meal_plan_add_on_'.$i,),
    );  */
    
	$form['field_additional_members']['member'][$i]['field_sunday_night_show_add_on'] = array(
    '#title' => t('Sunday Night Show'.' '.($i+1)),
    '#type' => 'select',
	'#prefix' => '<div class="col-sm-4 center-xs wow fadeInLeft animated"><div class="form-group col-sm-6 col-md-offset-3">',
	'#suffix' => '</div></div>',
    '#options' => array(''=>t('Select'),'yes'=>t('Yes'),'no'=>t('No')),
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'), 'onchange'=>'javascript:update_total_price();','id' => 'field_sunday_night_show_add_on_'.$i,'autocomplete' => 'off'),
    '#default_value' => '',
    );
	
    }

	$form['actions']['button'] = array(
    '#type' => 'button',
    '#value' => t('Modify Details'),
    '#attributes' => array(
		'class' => array('btn', 'btn-default'),
		'id' => 'backbtn4',
		'onclick' => 'javascript: reg_goto(\'step1\');',
		),
  	'#name' => 'backbtn4',
	'#submit' => array('core_overrides_membership_donor_previous'),	
    );
	
	
	$form['actions']['submit1'] = array(
    '#type' => 'submit',
    '#value' => t('Save and Register Later'),
    '#attributes' => array(
		'class' => array('btn', 'btn-default'),
		'id' => 'add-member-btn',
		
		),
  	'#name' => 'submit-registration',
	'#submit' => array('core_overrides_membership_registration_donor_form_submit'),
    );
	
	$form['actions']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Register & Pay'),
    '#attributes' => array(
		'class' => array('btn', 'btn-default'),
		'id' => 'register-pay-member-btn',
		
		),
  	'#name' => 'submit-registration-pay',
	'#submit' => array('core_overrides_membership_registration_donor_form_pay_submit'),	
    );
	
	$form['field_subscription_price'] = array(
    '#type' => 'hidden',
    '#default_value' => '',
    '#attributes' => array(
		'id' => 'field_subscription_price',
		),
  	'#name' => 'field_subscription_price',
    );
	
	$form['#method'] = 'post';
	
	$form['#action'] = url('registration/donor');
    
    /*$form_id = 'membership_registration';
    if (isset($form['#token']) && $form['#token'] !== FALSE) {
       $form['#token'] = FALSE;
     }
    else{
      $form['#token'] = $form_id;
     }
    
    $form ['form_token'] = array(
      '#id' => drupal_html_id('edit-' . $form_id . '-form-token'),
      '#type' => 'token',
      '#default_value' => drupal_get_token($form['#token']),
      '#parents' => array('form_token'),
    );  */
    
	$form['#validate'][] = 'core_overrides_membership_registration_donor_form_validate';	
	$form['#submit'][] = 'core_overrides_membership_registration_donor_form_submit';
    
    $form['#cache'] = FALSE; 
    $form['#no_cache'] = TRUE; 
    $form_state['cache'] = FALSE; 
    
	return $form;
}

function core_overrides_membership_registration_donor_form_validate(&$form, &$form_state){
            
        
    //echo "<pre>"; print_r($form_state); echo "</pre>"; die(); 
    $field_member_title = $form_state['input']['field_member_title'];
    $field_first_name = $form_state['input']['field_first_name'];
    $field_middle_name = $form_state['input']['field_middle_name'];
    $field_last_name = $form_state['input']['field_last_name'];
    //$field_country_of_origin = $form_state['input']['field_country_of_origin'];
    $field_address = $form_state['input']['field_address'];
    $field_address_1 = $form_state['input']['field_address_1'];
    $field_country = $form_state['input']['field_country'];
    $field_city = $form_state['input']['field_city'];
    $field_state = $form_state['input']['field_state'];
    $field_state_others = $form_state['input']['field_state_others'];
    $field_zip_code = $form_state['input']['field_zip_code'];
    //$field_evening_phone = $form_state['input']['field_evening_phone'];
    $field_mobile_phone = $form_state['input']['field_mobile_phone'];
    $field_email = $form_state['input']['field_email'];
    $field_alumni_univ = $form_state['input']['field_alumni_univ'];
    $field_alumni_year = $form_state['input']['field_alumni_year'];
    $field_meal_plan = isset($form_state['input']['field_meal_plan']) ? $form_state['input']['field_meal_plan'] : '';
    $field_business_forums = $form_state['input']['field_business_forums'];
	$field_attend_reunion = $form_state['input']['field_attend_reunion'];
    //$field_cruise = $form_state['input']['field_cruise'];
	$field_hotel = $form_state['input']['field_hotel'];
    $field_additional_members = $form_state['input']['field_additional_members']['member'];
    
    $query = new EntityFieldQuery();
      
    $query->entityCondition('entity_type', 'node');
    $query->entityCondition('bundle', 'register');
    $query->propertyCondition('status', 1);
    $query->fieldCondition('field_email_address', 'value', $field_email , '=');
    $result = $query->execute();

    if($field_member_title == ''){
        form_set_error('field_member_title',t('Please select title'));
    }
    
    if($field_first_name==''){
        form_set_error('field_first_name',t('Please enter first name'));
    }
    
     if($field_last_name==''){
        form_set_error('field_last_name',t('Please enter last name'));
    }

    /*if($field_country_of_origin==''){
        form_set_error('field_country_of_origin',t('Please select country of origin'));
    }*/

    if($field_address==''){
        form_set_error('field_address',t('Please enter address'));
    }
    
    if($field_country==''){
        form_set_error('field_country',t('Please select country'));
    }
    
     if($field_city==''){
        form_set_error('field_city',t('Please enter city'));
    }
     
     if($field_country =='US' && $field_state == ''){
        form_set_error('field_state',t('Please select state (US)'));
    }
     
     if($field_country !='US' && $field_state_others == ''){
        form_set_error('field_state_others',t('Please enter state (Non-US)'));
    }
     
   if($field_zip_code == ''){
        form_set_error('field_zip_code',t('Please enter zip code'));
    }   
     
    /*if($field_evening_phone == ''){
        form_set_error('field_evening_phone',t('Please enter evening phone'));
    } */
    
    if($field_mobile_phone == ''){
        form_set_error('field_mobile_phone',t('Please enter evening phone'));
    }
    
    if($field_email==''){
        form_set_error('field_email',t('Please enter email address'));
    }
    if($field_email!='' && !valid_email_address($field_email)){
        form_set_error('field_email',t('Please enter valid email address'));
    }

    if($field_email!='' && isset($result['node'])){
        form_set_error('field_email',t('email has already been registered. Thank you.'));
    }

    /*if($field_alumni_univ==''){
        form_set_error('field_alumni_univ',t('Please select alumni university'));
    }
    
    if($field_alumni_year==''){
        form_set_error('field_alumni_year',t('Please select alumni year'));
    }
    
    if($field_alumni_year==''){
        form_set_error('field_alumni_year',t('Please select alumni year'));
    }*/

	/*if($field_attend_reunion == ''){
		form_set_error('field_attend_reunion',t('Please select attend re-union'));
	}*/
	
	/*if($field_hotel==''){
        form_set_error('field_hotel',t('Please select hotel'));
    }*/
    
    if(count($field_additional_members) > 0){
        $i = 1;
        foreach($field_additional_members as $member){
            if($member['field_first_name_add_on'] != ''){
                if($member['field_last_name_add_on']==''){ 
                    form_set_error('field_additional_members[member]['+$i+'][field_last_name_add_on]',t('Please enter additional member '.$i.' last name'));
                }
                 /*if($member['field_relation_add_on']==''){ 
                    form_set_error('field_additional_members[member]['+$i+'][field_relation_add_on]',t('Please select additional member '.$i.' relation'));
                }*/
                 /*if($member['field_alumni_univ_add_on']==''){ 
                    form_set_error('field_additional_members[member]['+$i+'][field_alumni_univ_add_on]',t('Please select additional member '.$i.' Alumni University'));
                }
                 if($member['field_alumni_year_add_on']==''){ 
                    form_set_error('field_additional_members[member]['+$i+'][field_alumni_year_add_on]',t('Please select additional member '.$i.' Alumni Year'));
                }*/
				
				/*if($member['field_sunday_night_show_add_on']==''){ 
                    form_set_error('field_additional_members[member]['+$i+'][field_sunday_night_show_add_on]',t('Please select Sunday Night Show '.$i));
                }*/
				
				
            }
            $i++;
        }
    }
    
}

function core_overrides_membership_registration_donor_saved_form($form, $form_state, $no_js_use = FALSE){
	global $language;
	$currentLanguage = $language->language;
	
	$member_nid = isset($_SESSION['valid_membership_nid']) ? $_SESSION['valid_membership_nid'] : '';
    $membership_email = isset($_SESSION['valid_membership_email']) ? $_SESSION['valid_membership_email'] : '';
    $membership_token = isset($_SESSION['valid_membership_token']) ? $_SESSION['valid_membership_token'] : '';
	
	$membership_types = get_membership_types();
	$membership_types_option = array();
	if(count($membership_types) > 0){
	$membership_types_option[''] = t('Select');    
	foreach($membership_types as $membership_type){
		$membership_types_option[$membership_type['nid'].'|'.$membership_type['subscription_amount']] = t($membership_type['title']);
		}
	}
	
	$countries_option = get_countries_list();
	$state_list_us_option = get_state_list_us();
	$alumni_universities = get_alumni_university();
	$alumni_universities_option = array();
	if(count($alumni_universities) > 0){
	$alumni_universities_option[''] = t('Select');      
	foreach($alumni_universities as $alumni_university){
		$alumni_universities_option[$alumni_university['nid']] = t($alumni_university['title']);
		}
	}
	$alumni_year = get_alumni_year();
	
	$business_forums = get_business_forums();
	$business_forums_option = array();
	if(count($business_forums) > 0){    
	foreach($business_forums as $business_forum){
		$business_forums_option[$business_forum['nid']] = t($business_forum['title']);
		}
	}
	
	$tourisms = get_tourism_list();
	$tourism_option = array();
	if(count($tourisms) > 0){
	$tourism_option[''] = t('Select');     
	foreach($tourisms as $tourism){
		$tourism_option[$tourism['nid']] = t($tourism['title']);
		}
	}	
	/*$cruise_list = get_cruise_list();
	$cruise_list_option = array();
	if(count($cruise_list) > 0){
	   $cruise_list_option[''] = t('Select'); 
	foreach($cruise_list as $cruise){
		$cruise_list_option[$cruise['nid'].'|'.$cruise['cruise_price']] = t($cruise['title']);
		}
	}*/
    $meal_plan_list = get_meal_plan_list();
    $meal_plan_option = array();
    if(count($meal_plan_list) > 0){
    $meal_plan_option[''] = t('Select');     
    foreach($meal_plan_list as $meal_plan){
        $meal_plan_option[$meal_plan['nid'].'|'.$meal_plan['meal_plan_price']] = t($meal_plan['title']);
        }
    }
	
	$hotels = get_hotel_list();
	$hotels_option = array();
	if(count($hotels) > 0){
	$hotels_option[''] = t('Select');      
	foreach($hotels as $hotel){
		$hotels_option[$hotel['nid']] = t($hotel['title']);
		}
	}
	//echo "<pre>"; print_r($countries_option); echo "</pre>"; die();
	
	$saved_member_data = get_membership_data($member_nid);
    //echo "<pre>"; print_r($saved_member_data); echo "</pre>"; die();
    
	
	if($saved_member_data){
	$_SESSION['valid_membership_number'] = $saved_member_data->field_membership_number['und'][0]['value'];
	$membership_type = get_membership_type_by_nid($saved_member_data->field_membership['und'][0]['nid']);
    $meal_plan = isset($saved_member_data->field_meal_plan['und']) ? get_meal_plan_by_id($saved_member_data->field_meal_plan['und'][0]['nid']) : '';
    //$cruise_plan = get_cruise_by_id($saved_member_data->field_cruise['und'][0]['nid']);
	
	$form = array();
	
	/*$form['field_membership_type'] = array(
	'#title' => t('Membership Type'),
    '#type' => 'select',
    '#options' => $membership_types_option,
    '#attributes' => array('class'=> array('c-select'),"onchange"=>"javascript:update_total_price();", "id"=>"field_membership_type"),
    '#default_value' => '',
    );	*/
    $form['field_member_title'] = array(
    '#title' => t('Title'),
    '#type' => 'select',
    '#options' => array(''=>t('Select'),'Dr.'=>t('Dr.'),'Mr.'=>t('Mr.'),'Mrs.'=>t('Mrs.'),'Ms.'=>t('Ms.'),'Miss'=>t('Miss'),'Master'=>t('Master')),
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id'=>'field_member_title',),
    '#default_value' => isset($saved_member_data->field_member_title['und']) ? $saved_member_data->field_member_title['und'][0]['value'] : '',
    );	
    
	$form['field_first_name'] = array(
	'#title' => t('First Name'),	
    '#type' => 'textfield',
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'placeholder' => t('first name'),'id'=>'field_first_name', "maxlength"=>"30"),
  	'#default_value' => $saved_member_data->field_first_name['und'][0]['value'],
	);
	
	$form['field_middle_name'] = array(
	'#title' => t('Middle Name'),	
    '#type' => 'textfield',
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'placeholder' => t('middle name'),'id'=>'field_middle_name', "maxlength"=>"30"),
  	'#default_value' => isset($saved_member_data->field_middle_name['und']) ? $saved_member_data->field_middle_name['und'][0]['value'] : '',
	);
	
	$form['field_last_name'] = array(
	'#title' => t('Last Name'),	
    '#type' => 'textfield',
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'), 'placeholder' => t('last name'),'id'=>'field_last_name', "maxlength"=>"30"),
  	'#default_value' => $saved_member_data->field_last_name['und'][0]['value'],
	);
	
	$form['field_address'] = array(
	'#title' => t('Address 1'),
    '#type' => 'textfield',
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'placeholder' => t('address - house number, street name'),'id'=>'field_address',"maxlength"=>"100"),
	'#default_value' => $saved_member_data->field_address['und'][0]['value'],
	); 
	
	$form['field_address_1'] = array(
	'#title' => t('Address 2'),
    '#type' => 'textfield',
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'placeholder' => t('unit,apt,ste'),'id'=>'field_address_1',"maxlength"=>"100"),
	'#default_value' => isset($saved_member_data->field_address_1['und']) ? $saved_member_data->field_address_1['und'][0]['value'] : '',
	); 

	
	/*$form['field_country_of_origin'] = array(
	'#title' => t('Country of Origin'),
    '#type' => 'select',
    '#options' => $countries_option,
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id'=>'field_country_of_origin',),
	'#default_value' => $saved_member_data->field_country_of_origin['und'][0]['iso2'],
  	);*/
	
	$form['field_country'] = array(
	'#title' => t('Country'),
    '#type' => 'select',
	'#default_value' => $saved_member_data->field_country['und'][0]['iso2'],
    '#options' => $countries_option,
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id'=>'field_country','onchange'=>'javascript:changeStateForm();'),
  	);
	
	$form['field_city'] = array(
	'#title' => t('City'),	
    '#type' => 'textfield',
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'), 'placeholder' => t('city'),'id'=>'field_city', "maxlength"=>"30"),
  	'#default_value' => $saved_member_data->field_city['und'][0]['value'],
	);
	
	$form['field_state'] = array(
	'#title' => t('State (US)'),
    '#type' => 'select',
    '#options' => $state_list_us_option,
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id'=>'field_state',),
	'#default_value' => isset($saved_member_data->field_state['und']) ? $saved_member_data->field_state['und'][0]['value'] : '',
  	);
	
	$form['field_state_others'] = array(
	'#title' => t('State (Non US)'),	
    '#type' => 'textfield',
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'placeholder' => t('state if non US'),'id'=>'field_state_others', "maxlength"=>"30"),
  	'#default_value' => isset($saved_member_data->field_state_others['und']) ? $saved_member_data->field_state_others['und'][0]['value'] : '',
	);
	
	$form['field_zip_code'] = array(
	'#title' => t('Zip Code'),	
    '#type' => 'telfield',
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md','tel'),'placeholder' => t('zip code'),'id'=>'field_zip_code', "maxlength"=>"8"),
  	'#default_value' => $saved_member_data->field_zip_code['und'][0]['value'],
	);	

	/*$form['field_evening_phone'] = array(
	'#title' => t('Evening Phone'),	
    '#type' => 'telfield',
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md','tel'),'placeholder' => t('evening phone'),'id'=>'field_evening_phone', "maxlength"=>"16"),
  	'#default_value' => $saved_member_data->field_evening_phone['und'][0]['value'],
	);*/
	
	$form['field_mobile_phone'] = array(
	'#title' => t('Contact Phone'),	
    '#type' => 'telfield',
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md','tel'),'placeholder' => t('contact phone'),'id'=>'field_mobile_phone', "maxlength"=>"16"),
  	'#default_value' => $saved_member_data->field_mobile_phone['und'][0]['value'],
	);
	
	$form['field_email'] = array(
	'#title' => t('Email'),
    '#type' => 'emailfield',
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md','email'),'placeholder' => t('email address'),'id'=>'field_email', "maxlength"=>"60"),
  	'#default_value' => $saved_member_data->field_email_address['und'][0]['value'],
	);
	
	$form['field_alumni_univ'] = array(
	'#title' => t('Alumni'),
    '#type' => 'select',
    '#options' => $alumni_universities_option,
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id'=>'field_alumni_univ',),
    '#default_value' => isset($saved_member_data->field_alumni_univ['und']) ? $saved_member_data->field_alumni_univ['und'][0]['nid'] : '',
  	);
	
	$form['field_alumni_year'] = array(
	'#title' => t('Graduation Year'),
    '#type' => 'select',
    '#options' => $alumni_year,
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id'=>'field_alumni_year',),
	'#default_value' => isset($saved_member_data->field_alumni_year['und']) ? date('Y',strtotime($saved_member_data->field_alumni_year['und'][0]['value'])) : '',
  	);

	$form['field_business_forums'] = array(
	'#title' => t('Business Forums'),
	'#type' => 'select',
	'#options' => $business_forums_option,
	'#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id'=>'field_business_forums',),
	'#default_value' => isset($saved_member_data->field_business_forums['und']) ? get_business_form_values($saved_member_data->field_business_forums['und']) : '',
	'#multiple' => TRUE,
        );
	$form['field_tourism'] = array(
	'#title' => t('Tourism'),
	'#type' => 'select',
	'#options' => $tourism_option,
	'#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id'=>'field_business_forums',),
	'#default_value' => isset($saved_member_data->field_tourism['und']) ? get_tourism_values($saved_member_data->field_tourism['und']) : '',
	'#multiple' => TRUE,
	);	
	
	$form['field_attend_reunion'] = array(
	'#title' => t('Attend Re-Union'),
	'#type' => 'select',
	'#options' => array(''=>t('Select'),'yes'=>t('Yes'),'no'=>t('No')),
	'#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'), 'onchange'=>'javascript:update_total_price();','id'=>'field_attend_reunion',),
	'#default_value' => isset($saved_member_data->field_attend_reunion['und']) ? $saved_member_data->field_attend_reunion['und'][0]['value'] : '',
	);	
	
	/*$form['field_cruise'] = array(
	'#title' => t('Cruise'),
    '#type' => 'select',
    '#options' => $cruise_list_option,
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id'=>'field_cruise', 'onchange' => 'javascript:'),
    '#default_value' => ($cruise_plan) ? $cruise_plan['nid'].'|'.$cruise_plan['cruise_price'] : '',
  	);*/	
    
    $form['field_meal_plan'] = array(
    '#title' => t('Meal Plan'),
    '#type' => 'select',
    '#options' => $meal_plan_option,
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id'=>'field_meal_plan', 'onchange' => 'javascript:'),
    '#default_value' => ($meal_plan) ? $meal_plan['nid'].'|'.$meal_plan['meal_plan_price'] : '',
	'#disabled' => TRUE,
    );  
    
   $form['field_sunday_night_show'] = array(
    '#title' => t('Sunday Night Show'),
    '#type' => 'select',
    '#options' => array(''=>t('Select'),'Yes'=>t('Yes'),'No'=>t('No')),
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'), 'onchange'=>'javascript:update_total_price();','id'=>'field_sunday_night_show',),
    '#default_value' => $saved_member_data->field_sunday_night_show['und'][0]['value'],
    );
	
	$form['field_hotel'] = array(
    '#title' => t('Hotel'),
    '#type' => 'select',
    '#options' => $hotels_option,
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id'=>'field_hotel', 'onchange' => 'javascript: update_total_price();'),
    '#default_value' => isset($saved_member_data->field_hotel['und']) ? $saved_member_data->field_hotel['und'][0]['nid'] : '',
    );
    
	/**Add On Members Fields**/
	
	if (empty($form_state['add_members'])) {
        $form_state['add_members'] = 7;
    }
    
	$form['field_additional_members'] = array(
	  '#type' => 'container', 
	  '#title' => t('Additional Members'),  
	  '#collapsible' => FALSE, 
	  '#tree' => TRUE,
	  '#prefix' => '<div class="col-sm-12 center-xs wow fadeInLeft animated"><div id="additional-members-wrapper" class="additional-members-wrapper"> <h5 class="form-heading" id="step2-form-heading">Additional Member Information</h5></div>',
   	  '#suffix' => '<div class="col-sm-12 center-xs wow fadeInLeft animated add_more_sponsor_badge_container"><div class="form-group"><button class="btn btn-sm btn-primary add_more_member_info_btn" id="add_more_member_info_btn">Add More</button></div></div></div>',
	);
	$k = 1;
	$no_of_pre_fillled_additional_members = 0;
        for ($i = 0; $i < $form_state['add_members']; $i++) {
		$meal_plan_add_on = false;
		//$cruise_plan_add_on = false;
		$variable_meal_plan_obj = 'field_meal_plan_additional_'.$k; 
		//$variable_cruise_plan_obj = 'field_cruise_additional_'.$k;  
        if(isset($saved_member_data->{$variable_meal_plan_obj}['und'])){ 
		  
		$meal_plan_add_on = get_meal_plan_by_id($saved_member_data->{$variable_meal_plan_obj}['und'][0]['nid']);
		}
		/*if(isset($saved_member_data->{$variable_cruise_plan_obj}['und'])){
			$cruise_plan_add_on = get_cruise_by_id($saved_member_data->{$variable_cruise_plan_obj}['und'][0]['nid']);    
		}*/
		$variable_first_name_obj = 'field_first_name_additional_'.$k; 
		//$variable_middle_name_obj = 'field_middle_name_additional_'.$k;
		$variable_last_name_obj = 'field_last_name_additional_'.$k;
		$variable_relation_obj = 'field_relation_additional_'.$k;
		$variable_alumni_univ_obj = 'field_alumni_univ_additional_'.$k;
		//$variable_alumni_year_obj = 'field_alumni_year_additional_'.$k;
		$variable_sunday_night_show_obj = 'field_sunday_ns_additional_'.$k;
		
		 
		
        $form['field_additional_members']['member'][$i] = array(
          '#type' => 'fieldset', 
          '#tree' => TRUE,
		  '#attributes' => array('class' => array('form_wrapper_additional_members'),),
        );
		
        
		if (isset($saved_member_data->{$variable_first_name_obj}['und']) && $saved_member_data->{$variable_first_name_obj}['und'][0]['value'] != ''){ $no_of_pre_fillled_additional_members++; } 
		
		
        $form['field_additional_members']['member'][$i]['field_first_name_add_on'] = array(
        '#title' => t('First Name'.' '.($i+1)), 
        '#type' => 'textfield',
        
        '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'placeholder' => t('first name'),'id' => 'field_first_name_add_on_'.$i,'onblur'=>'javascript:update_total_price();',"maxlength"=>"30",'autocomplete' => 'off'),
        '#default_value' => '',
        '#prefix' => '<div class="col-sm-2 center-xs wow fadeInLeft animated"><div class="form-group">',
        '#suffix' => '</div></div>',
        '#group' => 'field_additional_members',
        '#default_value' => isset($saved_member_data->{$variable_first_name_obj}['und']) ? $saved_member_data->{$variable_first_name_obj}['und'][0]['value'] : '',
        );
        
        /*$form['field_additional_members']['member'][$i]['field_middle_name_add_on'] = array(
        '#title' => t('Middle Name'.' '.($i+1)),    
        '#type' => 'textfield',
        
        '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'placeholder' => t('middle name'),'id' => 'field_middle_name_add_on_'.$i,"maxlength"=>"30"),
        '#default_value' => '',
        '#prefix' => '<div class="col-sm-4 center-xs wow fadeInLeft animated"><div class="form-group">',
        '#suffix' => '</div></div>',
        '#group' => 'field_additional_members',
        '#default_value' => isset($saved_member_data->{$variable_middle_name_obj}['und']) ? $saved_member_data->{$variable_middle_name_obj}['und'][0]['value'] : '',
        );*/
        
        $form['field_additional_members']['member'][$i]['field_last_name_add_on'] = array(
        '#title' => t('Last Name'.' '.($i+1)),  
        '#type' => 'textfield',
        
        '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'placeholder' => t('last name'),'id' => 'field_last_name_add_on_'.$i,"maxlength"=>"30",'autocomplete' => 'off'),
        '#default_value' => '',
        '#prefix' => '<div class="col-sm-2 center-xs wow fadeInLeft animated"><div class="form-group">',
        '#suffix' => '</div></div>',
        '#group' => 'field_additional_members',
        '#default_value' => isset($saved_member_data->{$variable_last_name_obj}['und']) ? $saved_member_data->{$variable_last_name_obj}['und'][0]['value'] : '',
        );
        
        $form['field_additional_members']['member'][$i]['field_relation_add_on'] = array(
        '#title' => t('Relation'.' '.($i+1)),   
        '#type' => 'select',
        
        '#options' => array(''=> t('Select'), 'Child' => t('Child (5-18 Years)'),'Spouse' => t('Spouse'),'Parent' => t('Parent')),
        '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id' => 'field_relation_add_on_'.$i,'autocomplete' => 'off'),
        '#prefix' => '<div class="col-sm-2 center-xs wow fadeInLeft animated"><div class="form-group">',
        '#suffix' => '</div></div>',
        '#group' => 'field_additional_members',
        '#default_value' => isset($saved_member_data->{$variable_relation_obj}['und']) ? $saved_member_data->{$variable_relation_obj}['und'][0]['value'] : '',
        );
        
        $form['field_additional_members']['member'][$i]['field_alumni_univ_add_on']= array(
        '#title' => t('Alumni '.' '.($i+1)),
        '#type' => 'select',
        
        '#options' => $alumni_universities_option,
        '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id' => 'field_alumni_univ_add_on_'.$i,'autocomplete' => 'off'),
        '#prefix' => '<div class="col-sm-2 center-xs wow fadeInLeft animated"><div class="form-group">',
        '#suffix' => '</div></div>',
        '#group' => 'field_additional_members',
        '#default_value' => isset($saved_member_data->{$variable_alumni_univ_obj}['und'][0]) ? $saved_member_data->{$variable_alumni_univ_obj}['und'][0]['nid'] : '',
		);
        
        /*$form['field_additional_members']['member'][$i]['field_alumni_year_add_on']= array(
        '#title' => t('Alumni Year'.' '.($i+1)),
        '#type' => 'select',
        
        '#options' => $alumni_year,
        '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id' => 'field_alumni_year_add_on_'.$i,),
        '#default_value' => '',
        '#prefix' => '<div class="col-sm-4 center-xs wow fadeInLeft animated"><div class="form-group">',
        '#suffix' => '</div></div>',
        '#group' => 'field_additional_members',
        '#default_value' => isset($saved_member_data->{$variable_alumni_year_obj}['und']) ? date('Y',strtotime($saved_member_data->{$variable_alumni_year_obj}['und'][0]['value'])) : '',
        );
        
        $form['field_additional_members']['member'][$i]['field_cruise_add_on'] = array(
        '#title' => t('Cruise'.' '.($i+1)),
        '#type' => 'select',
        
        '#options' => $cruise_list_option,
        '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id' => 'field_cruise_add_on_'.$i,),
        '#prefix' => '<div class="col-sm-6 center-xs wow fadeInLeft animated"><div class="form-group">',
        '#suffix' => '</div></div>',
        '#group' => 'field_additional_members',
        '#default_value' => ($cruise_plan_add_on) ? $cruise_plan_add_on['nid'].'|'.$cruise_plan_add_on['cruise_price'] : '',
        );  
        
        $form['field_additional_members']['member'][$i]['field_meal_plan_add_on'] = array(
        '#title' => t('Meal Plan'.' '.($i+1)),
        '#type' => 'select',  
        '#prefix' => '<div class="col-sm-6 center-xs wow fadeInLeft animated"><div class="form-group">',
        '#suffix' => '</div></div>',
        '#options' => $meal_plan_option,
        '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id' => 'field_meal_plan_add_on_'.$i,),
        '#default_value' => ($meal_plan_add_on) ? $meal_plan_add_on['nid'].'|'.$meal_plan_add_on['meal_plan_price'] : '',
        );  */
        
        $form['field_additional_members']['member'][$i]['field_sunday_night_show_add_on'] = array(
        '#title' => t('Sunday Night Show'.' '.($i+1)),
        '#type' => 'select',
        '#prefix' => '<div class="col-sm-4 center-xs wow fadeInLeft animated"><div class="form-group col-sm-6 col-md-offset-3">',
        '#suffix' => '</div></div>',
        '#options' => array(''=>t('Select'),'yes'=>t('Yes'),'no'=>t('No')),
        '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'), 'onchange'=>'javascript:update_total_price();','id' => 'field_sunday_night_show_add_on_'.$i,'autocomplete' => 'off'),
        '#default_value' => isset($saved_member_data->{$variable_sunday_night_show_obj}['und'][0]) ? $saved_member_data->{$variable_sunday_night_show_obj}['und'][0]['value'] : '',
        );
        	$k++;
        }
	$_SESSION['no_of_pre_fillled_additional_members'] = $no_of_pre_fillled_additional_members;
	$form['actions']['button'] = array(
    '#type' => 'button',
    '#value' => t('Modify Details'),
    '#attributes' => array(
		'class' => array('btn', 'btn-default'),
		'id' => 'backbtn4',
		'onclick' => 'javascript: reg_goto(\'step1\');',
		),
  	'#name' => 'backbtn4',
	'#submit' => array('core_overrides_membership_donor_previous'),	
    );
	
	
	$form['actions']['submit1'] = array(
    '#type' => 'submit',
    '#value' => t('Save and Register Later'),
    '#attributes' => array(
		'class' => array('btn', 'btn-default'),
		'id' => 'add-member-btn',
		
		),
  	'#name' => 'submit-registration',
	'#submit' => array('core_overrides_membership_registration_donor_saved_form_submit'),
    );
	
	$form['actions']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Register & Pay'),
    '#attributes' => array(
		'class' => array('btn', 'btn-default'),
		'id' => 'register-pay-member-btn',
		
		),
  	'#name' => 'submit-registration-pay',
	'#submit' => array('core_overrides_membership_registration_donor_saved_form_pay_submit'),	
    );
	
	$form['field_subscription_price'] = array(
    '#type' => 'hidden',
    '#default_value' => '',
    '#attributes' => array(
		'id' => 'field_subscription_price',
		),
  	'#name' => 'field_subscription_price',
    );
	
	$form['#method'] = 'post';
	
	$form['#action'] = url('registration/donor/complete');
    
    /*$form_id = 'membership_registration';
    if (isset($form['#token']) && $form['#token'] !== FALSE) {
       $form['#token'] = FALSE;
     }
    else{
      $form['#token'] = $form_id;
     }
    
    $form ['form_token'] = array(
      '#id' => drupal_html_id('edit-' . $form_id . '-form-token'),
      '#type' => 'token',
      '#default_value' => drupal_get_token($form['#token']),
      '#parents' => array('form_token'),
    );  */
    
	$form['#validate'][] = 'core_overrides_membership_registration_donor_saved_form_validate';	
	$form['#submit'][] = 'core_overrides_membership_registration_donor_saved_form_submit';
    
    $form['#cache'] = FALSE; 
    $form['#no_cache'] = TRUE; 
    $form_state['cache'] = FALSE; 
    
	return $form;
	}
}

function core_overrides_membership_registration_donor_saved_form_validate(&$form, &$form_state){
            
        
    //echo "<pre>"; print_r($form_state); echo "</pre>"; die(); 
    $field_member_title = $form_state['input']['field_member_title'];
    $field_first_name = $form_state['input']['field_first_name'];
    $field_middle_name = $form_state['input']['field_middle_name'];
    $field_last_name = $form_state['input']['field_last_name'];
    //$field_country_of_origin = $form_state['input']['field_country_of_origin'];
    $field_address = $form_state['input']['field_address'];
    $field_address_1 = $form_state['input']['field_address_1'];
    $field_country = $form_state['input']['field_country'];
    $field_city = $form_state['input']['field_city'];
    $field_state = $form_state['input']['field_state'];
    $field_state_others = $form_state['input']['field_state_others'];
    $field_zip_code = $form_state['input']['field_zip_code'];
    //$field_evening_phone = $form_state['input']['field_evening_phone'];
    $field_mobile_phone = $form_state['input']['field_mobile_phone'];
    $field_email = $form_state['input']['field_email'];
    $field_alumni_univ = $form_state['input']['field_alumni_univ'];
    $field_alumni_year = $form_state['input']['field_alumni_year'];
    $field_meal_plan = isset($form_state['input']['field_meal_plan']) ? $form_state['input']['field_meal_plan'] : '';
    $field_business_forums = $form_state['input']['field_business_forums'];
	$field_attend_reunion = $form_state['input']['field_attend_reunion'];
    //$field_cruise = $form_state['input']['field_cruise'];
	$field_hotel = $form_state['input']['field_hotel'];
    $field_additional_members = $form_state['input']['field_additional_members']['member'];
    
    $query = new EntityFieldQuery();
      
    $query->entityCondition('entity_type', 'node');
    $query->entityCondition('bundle', 'register');
    $query->propertyCondition('status', 1);
    $query->fieldCondition('field_email_address', 'value', $field_email , '=');
    $result = $query->execute();

    if($field_member_title == ''){
        form_set_error('field_member_title',t('Please select title'));
    }
    
    if($field_first_name==''){
        form_set_error('field_first_name',t('Please enter first name'));
    }
    
     if($field_last_name==''){
        form_set_error('field_last_name',t('Please enter last name'));
    }

    /*if($field_country_of_origin==''){
        form_set_error('field_country_of_origin',t('Please select country of origin'));
    }*/

    if($field_address==''){
        form_set_error('field_address',t('Please enter address'));
    }
    
    if($field_country==''){
        form_set_error('field_country',t('Please select country'));
    }
    
     if($field_city==''){
        form_set_error('field_city',t('Please enter city'));
    }
     
     if($field_country =='US' && $field_state == ''){
        form_set_error('field_state',t('Please select state (US)'));
    }
     
     if($field_country !='US' && $field_state_others == ''){
        form_set_error('field_state_others',t('Please enter state (Non-US)'));
    }
     
   if($field_zip_code == ''){
        form_set_error('field_zip_code',t('Please enter zip code'));
    }   
     
    /*if($field_evening_phone == ''){
        form_set_error('field_evening_phone',t('Please enter evening phone'));
    } */
    
    if($field_mobile_phone == ''){
        form_set_error('field_mobile_phone',t('Please enter evening phone'));
    }
    
    if($field_email==''){
        form_set_error('field_email',t('Please enter email address'));
    }
	
    if($field_email!='' && !valid_email_address($field_email)){
        form_set_error('field_email',t('Please enter valid email address'));
    }

	if($field_email != $_SESSION['valid_membership_email']){
		if($field_email!='' && isset($result['node'])){
			form_set_error('field_email',t('email has already been registered. Thank you.'));
		}
	}

    /*if($field_alumni_univ==''){
        form_set_error('field_alumni_univ',t('Please select alumni university'));
    }
    
    if($field_alumni_year==''){
        form_set_error('field_alumni_year',t('Please select alumni year'));
    }
    
    if($field_alumni_year==''){
        form_set_error('field_alumni_year',t('Please select alumni year'));
    }


	if($field_attend_reunion == ''){
		form_set_error('field_attend_reunion',t('Please select attend re-union'));
	}*/
	
	/*if($field_hotel==''){
        form_set_error('field_hotel',t('Please select hotel'));
    }*/
    
    if(count($field_additional_members) > 0){
        $i = 1;
        foreach($field_additional_members as $member){
            if($member['field_first_name_add_on'] != ''){
                if($member['field_last_name_add_on']==''){ 
                    form_set_error('field_additional_members[member]['+$i+'][field_last_name_add_on]',t('Please enter additional member '.$i.' last name'));
                }
                 /*if($member['field_relation_add_on']==''){ 
                    form_set_error('field_additional_members[member]['+$i+'][field_relation_add_on]',t('Please select additional member '.$i.' relation'));
                }*/
                /* if($member['field_alumni_univ_add_on']==''){ 
                    form_set_error('field_additional_members[member]['+$i+'][field_alumni_univ_add_on]',t('Please select additional member '.$i.' Alumni University'));
                }
                 if($member['field_alumni_year_add_on']==''){ 
                    form_set_error('field_additional_members[member]['+$i+'][field_alumni_year_add_on]',t('Please select additional member '.$i.' Alumni Year'));
                }*/
				
				/*if($member['field_sunday_night_show_add_on']==''){ 
                    form_set_error('field_additional_members[member]['+$i+'][field_sunday_night_show_add_on]',t('Please select Sunday Night Show '.$i));
                }*/
				
				
            }
            $i++;
        }
    }
    
}

function core_overrides_membership_donor_previous($form, &$form_state){

}

function core_overrides_membership_registration_donor_form_pay_submit($form, &$form_state){

	global $base_url;
	$membership_number = generate_membership_number_1(); // Membership Number.
    $membership_token = generate_membership_token(); // Membership Token.
	$field_member_title = $form['field_member_title']['#value'];	
	$field_first_name = $form['field_first_name']['#value'];
	$field_middle_name = $form['field_middle_name']['#value'];
	$field_last_name = $form['field_last_name']['#value'];
	$field_country = $form['field_country']['#value'];
	$field_address = $form['field_address']['#value'];
	$field_address_1 = $form['field_address_1']['#value'];
	//$field_country_of_origin = $form['field_country_of_origin']['#value'];
    $field_city = $form['field_city']['#value'];
    $field_state = $form['field_state']['#value'];
    $field_state_others = $form['field_state_others']['#value'];
	$field_zip_code = $form['field_zip_code']['#value'];
    //$field_evening_phone = $form['field_evening_phone']['#value'];
    $field_mobile_phone = $form['field_mobile_phone']['#value'];
    $field_email = $form['field_email']['#value'];
	$field_hotel = $form['field_hotel']['#value'];
    $field_alumni_univ = $form['field_alumni_univ']['#value'];
    $field_alumni_year = $form['field_alumni_year']['#value'];
    $field_business_forums = $form['field_business_forums']['#value'];
	$field_tourism = $form['field_tourism']['#value'];
	$field_attend_reunion = $form['field_attend_reunion']['#value'];
    $field_sunday_night_show= $form['field_sunday_night_show']['#value'];
     
	/*$cruise = explode('|',$form['field_cruise']['#value']);
	$field_cruise = $cruise[0];
	$field_cruise_price = (isset($cruise[1]) && $cruise[1] != '') ? $cruise[1] : 0.00;*/
    
	$meal_plan = explode('|',$form['field_meal_plan']['#value']);
	$field_meal_plan = $meal_plan[0];
	$field_meal_plan_price = (isset($meal_plan[1]) && $meal_plan[1] != '') ? $meal_plan[1] : 0.00;
	
	$field_membership_type = 98;
	
	
    $field_membership_number = $membership_number;
    $field_membership_token = $membership_token;
    $field_payment_status = 'Processing';
    $field_date_of_registration = date('Y-m-d',time());
    $field_amount_paid = number_format($form['field_subscription_price']['#value'],2,'.',''); // Subscription Price.

	
	$systemUser = user_load_by_name('system_user');	
	//echo $field_amount_paid.'<br>';
	//echo "<pre>"; print_r($form); echo "<pre>"; die();
	$node_register = new StdClass();
	$node_register->title = $membership_number;    
	$node_register->type = 'register';
	node_object_prepare($node_register);
	$node_register->language = LANGUAGE_NONE;
	$node_register->uid = (isset($systemUser->uid) && !empty($systemUser->uid) ? $systemUser->uid : 1);
		
	
	$node_register->field_member_title['und'][0]['value'] = $field_member_title;	
	$node_register->field_first_name['und'][0]['value']   = $field_first_name;
	$node_register->field_first_name['und'][0]['safe_value']   = $field_first_name;
		
	$node_register->field_middle_name['und'][0]['value']   = $field_middle_name;
	$node_register->field_middle_name['und'][0]['safe_value']   = $field_middle_name;
	
	$node_register->field_last_name['und'][0]['value']   = $field_last_name;
	$node_register->field_last_name['und'][0]['safe_value']   = $field_last_name;
	
	$node_register->field_country['und'][0]['iso2']   = $field_country;
	
	$node_register->field_address['und'][0]['value']   = $field_address;
	$node_register->field_address['und'][0]['safe_value']   = $field_address;
	
	$node_register->field_address_1['und'][0]['value']   = $field_address_1;
	$node_register->field_address_1['und'][0]['safe_value']   = $field_address_1;   
	
	//$node_register->field_country_of_origin['und'][0]['iso2']   = $field_country_of_origin;
	
	$node_register->field_city['und'][0]['value']   = $field_city;
	$node_register->field_city['und'][0]['safe_value']   = $field_city;
	
	$node_register->field_state['und'][0]['value']   = (isset($field_country) && $field_country == 'US') ? $field_state : '';
	
	$node_register->field_state_others['und'][0]['value']   = (isset($field_country) && $field_country != 'US') ? $field_state_others : '';
	$node_register->field_state_others['und'][0]['safe_value']   = (isset($field_country) && $field_country != 'US') ? $field_state_others : '';
	
	$node_register->field_zip_code['und'][0]['value']   = $field_zip_code;
	$node_register->field_zip_code['und'][0]['safe_value']   = $field_zip_code;
	
	/*$node_register->field_evening_phone['und'][0]['value']   = $field_evening_phone;
	$node_register->field_evening_phone['und'][0]['safe_value']   = $field_evening_phone;*/
	
	$node_register->field_mobile_phone['und'][0]['value']   = $field_mobile_phone;
	$node_register->field_mobile_phone['und'][0]['safe_value']   = $field_mobile_phone;
	
	$node_register->field_email_address['und'][0]['value']   = $field_email;
	$node_register->field_email_address['und'][0]['safe_value']   = $field_email;
	
	if($field_alumni_univ != ''){
		$node_register->field_alumni_univ['und'][0]['nid']   = $field_alumni_univ;
	}
	else{
		unset($node_register->field_alumni_univ['und']);
	}
	if($field_alumni_year != ''){
	$node_register->field_alumni_year['und'][0]['value']   = $field_alumni_year.'-01-01 00:00:00';
	}
	else{
		unset($node_register->field_alumni_year['und']);
	}
	
    if(isset($field_business_forums) && count($field_business_forums) > 0){
		$bf = 0;
		foreach($field_business_forums as $field_business_forum){
			if($field_business_forum != ''){
        		$node_register->field_business_forums['und'][$bf]['nid']   = $field_business_forum;
			}
			$bf++;
		}
    }

    if(isset($field_tourism) && count($field_tourism) > 0){
		$ft = 0;
		foreach($field_tourism as $fieldtourism){
			if($fieldtourism != ''){
        		$node_register->field_tourism['und'][$ft]['nid']   = $fieldtourism;
			}
			$ft++;
		}
    }
	if($field_meal_plan != ''){
		$node_register->field_meal_plan['und'][0]['nid']   = $field_meal_plan;
	}
	
	/*if($field_cruise != ''){
		$node_register->field_cruise['und'][0]['nid']   = $field_cruise;
	}*/
	
    if($field_sunday_night_show != ''){
        $node_register->field_sunday_night_show['und'][0]['value']  = $field_sunday_night_show;
    }


	if($field_attend_reunion != ''){
		$node_register->field_attend_reunion['und'][0]['value'] = $field_attend_reunion; 
	}
	else{
		unset($node_register->field_attend_reunion['und']);
	}
	
	if($field_hotel != ''){
		$node_register->field_hotel['und'][0]['nid']   = $field_hotel;
	}
    
	$node_register->field_membership['und'][0]['nid']   = $field_membership_type;
	
	$node_register->field_membership_number['und'][0]['value']   = $membership_number;
	$node_register->field_membership_number['und'][0]['safe_value']   = $membership_number;
	
	$node_register->field_membership_token['und'][0]['value']   = $membership_token;
	$node_register->field_membership_token['und'][0]['safe_value']   = $membership_token;
	
	$node_register->field_amount_paid['und'][0]['value']   = $field_amount_paid;
	$node_register->field_amount_paid['und'][0]['safe_value']   = $field_amount_paid;
	
	$node_register->field_date_of_registration['und'][0]['value']   = $field_date_of_registration;
	$node_register->field_date_of_registration['und'][0]['safe_value']   = $field_date_of_registration;
	
	$node_register->field_payment_status['und'][0]['value'] = 'Processing';
/***Additional Members Information***/
	if(count($form['field_additional_members']['member']) > 0 && $field_membership_type == '98'){
	$k = 1;
	foreach($form['field_additional_members']['member'] as $member){
	if(isset($member['field_first_name_add_on']['#value']) && $member['field_first_name_add_on']['#value'] !=''){
		/*$cruise_add_on = explode('|',$member['field_cruise_add_on']['#value']);
		$field_cruise_add_on = $cruise[0];
		$field_cruise_price_add_on = (isset($cruise_add_on[1]) && $cruise_add_on[1] != '') ? $cruise_add_on[1] : 0.00;
		
		$meal_plan_add_on = explode('|',$member['field_meal_plan_add_on']['#value']);
		$field_meal_plan_add_on = $meal_plan_add_on[0];
		$field_meal_plan_price_add_on = (isset($meal_plan_add_on[1]) && $meal_plan_add_on[1] != '') ? $meal_plan_add_on[1] : 0.00;*/
		$variable_first_name_obj = 'field_first_name_additional_'.$k; 
		//$variable_middle_name_obj = 'field_middle_name_additional_'.$k;
		$variable_last_name_obj = 'field_last_name_additional_'.$k;
		$variable_relation_obj = 'field_relation_additional_'.$k;
		$variable_alumni_univ_obj = 'field_alumni_univ_additional_'.$k;
		//$variable_alumni_year_obj = 'field_alumni_year_additional_'.$k;
		$variable_sunday_night_show_obj = 'field_sunday_ns_additional_'.$k;
        //$variable_meal_plan_obj = 'field_meal_plan_additional_'.$k; 
		//$variable_cruise_plan_obj = 'field_cruise_additional_'.$k;	
		if($member['field_first_name_add_on']['#value'] != ''){
		  $node_register->{$variable_first_name_obj}['und'][0]['value'] = $member['field_first_name_add_on']['#value'];
		  $node_register->{$variable_first_name_obj}['und'][0]['safe_value'] = $member['field_first_name_add_on']['#value'];
		}
		/*if($member['field_middle_name_add_on']['#value'] != ''){	
			$node_register->{$variable_middle_name_obj}['und'][0]['value'] = $member['field_middle_name_add_on']['#value'];
			$node_register->{$variable_middle_name_obj}['und'][0]['safe_value'] = $member['field_middle_name_add_on']['#value'];	
		}*/
		if($member['field_last_name_add_on']['#value'] != ''){
		$node_register->{$variable_last_name_obj}['und'][0]['value'] = $member['field_last_name_add_on']['#value'];
		$node_register->{$variable_last_name_obj}['und'][0]['safe_value'] = $member['field_last_name_add_on']['#value'];
		}
		if($member['field_relation_add_on']['#value'] != ''){
			  $node_register->{$variable_relation_obj}['und'][0]['value'] = $member['field_relation_add_on']['#value'];
		}
		if($member['field_alumni_univ_add_on']['#value'] != ''){
		  $node_register->{$variable_alumni_univ_obj}['und'][0]['nid'] = $member['field_alumni_univ_add_on']['#value'];
		}
		/*if($member['field_alumni_year_add_on']['#value'] != ''){
		  $node_register->{$variable_alumni_year_obj}['und'][0]['value'] = $member['field_alumni_year_add_on']['#value'].'-01-01 00:00:00';
		}
		if($field_cruise_add_on != ''){	
			 $node_register->{$variable_cruise_plan_obj}['und'][0]['nid'] = $field_cruise_add_on;
			}
		if($field_meal_plan_add_on != ''){
			 $node_register->{$variable_meal_plan_obj}['und'][0]['nid'] = $field_meal_plan_add_on;
		}*/
		if($member['field_sunday_night_show_add_on']['#value'] != ''){
		 $node_register->{$variable_sunday_night_show_obj}['und'][0]['value'] = $member['field_sunday_night_show_add_on']['#value'];
		}
		$k++;
		}
	  }
	}
	/************************************/	
	
	$node_register->status = 1;
	$node_register->promote = 0;
	$node_register->comment = 0;
	//echo "<pre>"; print_r($node_register); echo "</pre>"; die();
	$result = node_save($node_register);
    $nid = $node_register->nid;

    
	$from = $systemUser->mail;
	$to = $field_email; //variable_get('site_mail', 'notification@nabc2017.com');
	$subject = 'Thank You for registering at NABC 2017 : Welcome';
	if(file_exists(drupal_get_path('module','core_overrides').'/email_templates/email_template_welcome.php')) require(drupal_get_path('module','core_overrides').'/email_templates/email_template_welcome.php');
	$body    = $email_body;
	//echo $from.'<br/>';
	//echo $from.'<br/>';
	//echo $to.'<br/>';
	//echo $subject.'<br/>';
	//echo $message.'<br/>';
	//echo $body.'<br/>';
	//die();
	if(core_overrides_mail($from,$to,$subject,$body)){
      //drupal_set_message('Message sent successfully. Our representative will get back to you shortly.','status');		
	}
	else{
		drupal_set_message('Error Unable to send Message. Try again.','error');	
	}
	
	
	drupal_set_message('Please wait - Processing Payment','status');
	drupal_goto('payment/process',array('query'=>array('membership'=>$membership_number)));
}

function core_overrides_membership_registration_donor_form_submit($form, &$form_state){

	global $base_url;
	
    $membership_number = generate_membership_number_1(); // Membership Number.
    $membership_token = generate_membership_token(); // Membership Token.
	$field_member_title = $form['field_member_title']['#value'];	
	$field_first_name = $form['field_first_name']['#value'];
	$field_middle_name = $form['field_middle_name']['#value'];
	$field_last_name = $form['field_last_name']['#value'];
	$field_country = $form['field_country']['#value'];
	$field_address = $form['field_address']['#value'];
	$field_address_1 = $form['field_address_1']['#value'];
	//$field_country_of_origin = $form['field_country_of_origin']['#value'];
    $field_city = $form['field_city']['#value'];
    $field_state = $form['field_state']['#value'];
    $field_state_others = $form['field_state_others']['#value'];
	$field_zip_code = $form['field_zip_code']['#value'];
    //$field_evening_phone = $form['field_evening_phone']['#value'];
    $field_mobile_phone = $form['field_mobile_phone']['#value'];
    $field_email = $form['field_email']['#value'];
    $field_alumni_univ = $form['field_alumni_univ']['#value'];
    $field_alumni_year = $form['field_alumni_year']['#value'];
    $field_business_forums = $form['field_business_forums']['#value'];
	$field_tourism = $form['field_tourism']['#value'];
	$field_attend_reunion = $form['field_attend_reunion']['#value'];
    $field_sunday_night_show= $form['field_sunday_night_show']['#value'];
	$field_hotel = $form['field_hotel']['#value'];
     
	/*$cruise = explode('|',$form['field_cruise']['#value']);
	$field_cruise = $cruise[0];
	$field_cruise_price = (isset($cruise[1]) && $cruise[1] != '') ? $cruise[1] : 0.00;*/
    
	$meal_plan = explode('|',$form['field_meal_plan']['#value']);
	$field_meal_plan = $meal_plan[0];
	$field_meal_plan_price = (isset($meal_plan[1]) && $meal_plan[1] != '') ? $meal_plan[1] : 0.00;
	
	$field_membership_type = 98;
	
	
    $field_membership_number = $membership_number;
    $field_membership_token = $membership_token;
    $field_payment_status = 'Processing';
    $field_date_of_registration = date('Y-m-d',time());
    $field_amount_paid = number_format($form['field_subscription_price']['#value'],2,'.',''); // Subscription Price.

	
	$systemUser = user_load_by_name('system_user');	
	//echo $field_amount_paid.'<br>';
	//echo "<pre>"; print_r($form); echo "<pre>"; die();
	$node_register = new StdClass();
	$node_register->title = $membership_number;    
	$node_register->type = 'register';
	node_object_prepare($node_register);
	$node_register->language = LANGUAGE_NONE;
	$node_register->uid = (isset($systemUser->uid) && !empty($systemUser->uid) ? $systemUser->uid : 1);
		
	
	$node_register->field_member_title['und'][0]['value'] = $field_member_title;	
	$node_register->field_first_name['und'][0]['value']   = $field_first_name;
	$node_register->field_first_name['und'][0]['safe_value']   = $field_first_name;
		
	$node_register->field_middle_name['und'][0]['value']   = $field_middle_name;
	$node_register->field_middle_name['und'][0]['safe_value']   = $field_middle_name;
	
	$node_register->field_last_name['und'][0]['value']   = $field_last_name;
	$node_register->field_last_name['und'][0]['safe_value']   = $field_last_name;
	
	$node_register->field_country['und'][0]['iso2']   = $field_country;
	
	$node_register->field_address['und'][0]['value']   = $field_address;
	$node_register->field_address['und'][0]['safe_value']   = $field_address;
	
	$node_register->field_address_1['und'][0]['value']   = $field_address_1;
	$node_register->field_address_1['und'][0]['safe_value']   = $field_address_1;   
	
	//$node_register->field_country_of_origin['und'][0]['iso2']   = $field_country_of_origin;
	
	$node_register->field_city['und'][0]['value']   = $field_city;
	$node_register->field_city['und'][0]['safe_value']   = $field_city;
	
	$node_register->field_state['und'][0]['value']   = (isset($field_country) && $field_country == 'US') ? $field_state : '';
	
	$node_register->field_state_others['und'][0]['value']   = (isset($field_country) && $field_country != 'US') ? $field_state_others : '';
	$node_register->field_state_others['und'][0]['safe_value']   = (isset($field_country) && $field_country != 'US') ? $field_state_others : '';
	
	$node_register->field_zip_code['und'][0]['value']   = $field_zip_code;
	$node_register->field_zip_code['und'][0]['safe_value']   = $field_zip_code;
	
	/*$node_register->field_evening_phone['und'][0]['value']   = $field_evening_phone;
	$node_register->field_evening_phone['und'][0]['safe_value']   = $field_evening_phone;*/
	
	$node_register->field_mobile_phone['und'][0]['value']   = $field_mobile_phone;
	$node_register->field_mobile_phone['und'][0]['safe_value']   = $field_mobile_phone;
	
	$node_register->field_email_address['und'][0]['value']   = $field_email;
	$node_register->field_email_address['und'][0]['safe_value']   = $field_email;
	
	if($field_alumni_univ != ''){
		$node_register->field_alumni_univ['und'][0]['nid']   = $field_alumni_univ;
	}
	else{
		unset($node_register->field_alumni_univ['und']);
	}
	if($field_alumni_year != ''){
		$node_register->field_alumni_year['und'][0]['value']   = $field_alumni_year.'-01-01 00:00:00';
	}
	else{
		unset($node_register->field_alumni_year['und']);
	}
	
    if(isset($field_business_forums) && count($field_business_forums) > 0){
		$bf = 0;
		foreach($field_business_forums as $field_business_forum){
			if($field_business_forum != ''){
        		$node_register->field_business_forums['und'][$bf]['nid']   = $field_business_forum;
			}
			$bf++;
		}
    }

    if(isset($field_tourism) && count($field_tourism) > 0){
		$ft = 0;
		foreach($field_tourism as $fieldtourism){
			if($fieldtourism != ''){
        		$node_register->field_tourism['und'][$ft]['nid']   = $fieldtourism;
			}
			$ft++;
		}
    }

	if($field_attend_reunion != ''){
		$node_register->field_attend_reunion['und'][0]['value'] = $field_attend_reunion; 
	}

	if($field_meal_plan != ''){
		$node_register->field_meal_plan['und'][0]['nid']   = $field_meal_plan;
	}
	
	/*if($field_cruise != ''){
		$node_register->field_cruise['und'][0]['nid']   = $field_cruise;
	}*/
	
    if($field_sunday_night_show != ''){
        $node_register->field_sunday_night_show['und'][0]['value']  = $field_sunday_night_show;
    }
	
	if($field_hotel != ''){
		$node_register->field_hotel['und'][0]['nid']   = $field_hotel;
	}
    
	$node_register->field_membership['und'][0]['nid']   = $field_membership_type;
	
	$node_register->field_membership_number['und'][0]['value']   = $membership_number;
	$node_register->field_membership_number['und'][0]['safe_value']   = $membership_number;
	
	$node_register->field_membership_token['und'][0]['value']   = $membership_token;
	$node_register->field_membership_token['und'][0]['safe_value']   = $membership_token;
	
	$node_register->field_amount_paid['und'][0]['value']   = $field_amount_paid;
	$node_register->field_amount_paid['und'][0]['safe_value']   = $field_amount_paid;
	
	$node_register->field_date_of_registration['und'][0]['value']   = $field_date_of_registration;
	$node_register->field_date_of_registration['und'][0]['safe_value']   = $field_date_of_registration;
	
	$node_register->field_payment_status['und'][0]['value'] = 'Processing';

/***Additional Members Information***/
	if(count($form['field_additional_members']['member']) > 0 && $field_membership_type == '98'){
	$k = 1;
	foreach($form['field_additional_members']['member'] as $member){
	if(isset($member['field_first_name_add_on']['#value']) && $member['field_first_name_add_on']['#value'] !=''){
		/*$cruise_add_on = explode('|',$member['field_cruise_add_on']['#value']);
		$field_cruise_add_on = $cruise[0];
		$field_cruise_price_add_on = (isset($cruise_add_on[1]) && $cruise_add_on[1] != '') ? $cruise_add_on[1] : 0.00;*/
		if(isset($member['field_meal_plan_add_on']['#value']) && $member['field_meal_plan_add_on']['#value']!=''){
		$meal_plan_add_on = explode('|',$member['field_meal_plan_add_on']['#value']);
		$field_meal_plan_add_on = $meal_plan_add_on[0];
		}
		$field_meal_plan_price_add_on = (isset($meal_plan_add_on[1]) && $meal_plan_add_on[1] != '') ? $meal_plan_add_on[1] : 0.00;
		$variable_first_name_obj = 'field_first_name_additional_'.$k; 
		//$variable_middle_name_obj = 'field_middle_name_additional_'.$k;
		$variable_last_name_obj = 'field_last_name_additional_'.$k;
		$variable_relation_obj = 'field_relation_additional_'.$k;
		$variable_alumni_univ_obj = 'field_alumni_univ_additional_'.$k;
		//$variable_alumni_year_obj = 'field_alumni_year_additional_'.$k;
		$variable_sunday_night_show_obj = 'field_sunday_ns_additional_'.$k;
        //$variable_meal_plan_obj = 'field_meal_plan_additional_'.$k; 
		//$variable_cruise_plan_obj = 'field_cruise_additional_'.$k;	
		if($member['field_first_name_add_on']['#value'] != ''){
		  $node_register->{$variable_first_name_obj}['und'][0]['value'] = $member['field_first_name_add_on']['#value'];
		  $node_register->{$variable_first_name_obj}['und'][0]['safe_value'] = $member['field_first_name_add_on']['#value'];
		}
		/*if($member['field_middle_name_add_on']['#value'] != ''){	
			$node_register->{$variable_middle_name_obj}['und'][0]['value'] = $member['field_middle_name_add_on']['#value'];
			$node_register->{$variable_middle_name_obj}['und'][0]['safe_value'] = $member['field_middle_name_add_on']['#value'];	
		}*/
		if($member['field_last_name_add_on']['#value'] != ''){
		$node_register->{$variable_last_name_obj}['und'][0]['value'] = $member['field_last_name_add_on']['#value'];
		$node_register->{$variable_last_name_obj}['und'][0]['safe_value'] = $member['field_last_name_add_on']['#value'];
		}
		if($member['field_relation_add_on']['#value'] != ''){
			  $node_register->{$variable_relation_obj}['und'][0]['value'] = $member['field_relation_add_on']['#value'];
		}
		if($member['field_alumni_univ_add_on']['#value'] != ''){
		  $node_register->{$variable_alumni_univ_obj}['und'][0]['nid'] = $member['field_alumni_univ_add_on']['#value'];
		}
		/*if($member['field_alumni_year_add_on']['#value'] != ''){
		  $node_register->{$variable_alumni_year_obj}['und'][0]['value'] = $member['field_alumni_year_add_on']['#value'].'-01-01 00:00:00';
		}
		if($field_cruise_add_on != ''){	
			 $node_register->{$variable_cruise_plan_obj}['und'][0]['nid'] = $field_cruise_add_on;
			}
		if($field_meal_plan_add_on != ''){
			 $node_register->{$variable_meal_plan_obj}['und'][0]['nid'] = $field_meal_plan_add_on;
		}*/
		if($member['field_sunday_night_show_add_on']['#value'] != ''){
		 $node_register->{$variable_sunday_night_show_obj}['und'][0]['value'] = $member['field_sunday_night_show_add_on']['#value'];
		}
		$k++;
		}
	  }
	}
	/************************************/	
	
	$node_register->status = 1;
	$node_register->promote = 0;
	$node_register->comment = 0;
	//echo "<pre>"; print_r($node_register); echo "</pre>"; die();
	$result = node_save($node_register);
    $nid = $node_register->nid;

    
	$from = $systemUser->mail;
	$to = $field_email; //variable_get('site_mail', 'notification@nabc2017.com');
	$subject = 'Thank You for registering at NABC 2017 : Welcome';
	if(file_exists(drupal_get_path('module','core_overrides').'/email_templates/email_template_welcome.php')) require(drupal_get_path('module','core_overrides').'/email_templates/email_template_welcome.php');
	$body    = $email_body;
	//echo $from.'<br/>';
	//echo $from.'<br/>';
	//echo $to.'<br/>';
	//echo $subject.'<br/>';
	//echo $message.'<br/>';
	//echo $body.'<br/>';
	//die();
	if(core_overrides_mail($from,$to,$subject,$body)){
      //drupal_set_message('Message sent successfully. Our representative will get back to you shortly.','status');		
	}
	else{
		drupal_set_message('Error Unable to send Message. Try again.','error');	
	}
	
	
	drupal_set_message('Thanks for interest at NABC2017. Please check email for all details to complete the process','status');
}

function core_overrides_membership_registration_donor_saved_form_pay_submit($form, &$form_state){

	global $base_url;
	$member_nid = isset($_SESSION['valid_membership_nid']) ? $_SESSION['valid_membership_nid'] : '';
    $membership_email = isset($_SESSION['valid_membership_email']) ? $_SESSION['valid_membership_email'] : '';
    $membership_token = isset($_SESSION['valid_membership_token']) ? $_SESSION['valid_membership_token'] : '';
	
	$saved_member_data = get_membership_data($member_nid);
    $_SESSION['valid_membership_number'] = $saved_member_data->field_membership_number['und'][0]['value'];
	
	if($saved_member_data){
	$field_member_title = $form['field_member_title']['#value'];	
	$field_first_name = $form['field_first_name']['#value'];
	$field_middle_name = $form['field_middle_name']['#value'];
	$field_last_name = $form['field_last_name']['#value'];
	$field_country = $form['field_country']['#value'];
	$field_address = $form['field_address']['#value'];
	$field_address_1 = $form['field_address_1']['#value'];
	//$field_country_of_origin = $form['field_country_of_origin']['#value'];
    $field_city = $form['field_city']['#value'];
    $field_state = $form['field_state']['#value'];
    $field_state_others = $form['field_state_others']['#value'];
	$field_zip_code = $form['field_zip_code']['#value'];
    //$field_evening_phone = $form['field_evening_phone']['#value'];
    $field_mobile_phone = $form['field_mobile_phone']['#value'];
    $field_email = $form['field_email']['#value'];
	$field_hotel = $form['field_hotel']['#value'];
    $field_alumni_univ = $form['field_alumni_univ']['#value'];
    $field_alumni_year = $form['field_alumni_year']['#value'];
    $field_business_forums = $form['field_business_forums']['#value'];
	$field_tourism = $form['field_tourism']['#value'];
	$field_attend_reunion = $form['field_attend_reunion']['#value'];
    $field_sunday_night_show= $form['field_sunday_night_show']['#value'];
     
	/*$cruise = explode('|',$form['field_cruise']['#value']);
	$field_cruise = $cruise[0];
	$field_cruise_price = (isset($cruise[1]) && $cruise[1] != '') ? $cruise[1] : 0.00;*/
    
	$meal_plan = explode('|',$form['field_meal_plan']['#value']);
	$field_meal_plan = $meal_plan[0];
	$field_meal_plan_price = (isset($meal_plan[1]) && $meal_plan[1] != '') ? $meal_plan[1] : 0.00;
	
	$field_membership_type = 98;
	
    $field_payment_status = 'Processing';
    $field_date_of_registration = date('Y-m-d',time());
    $field_amount_paid = number_format($form['field_subscription_price']['#value'],2,'.',''); // Subscription Price.

	
	$systemUser = user_load_by_name('system_user');	
	//echo $field_amount_paid.'<br>';
	//echo "<pre>"; print_r($form); echo "<pre>"; die();
	$node_register = node_load($member_nid);
	$node_register->uid = (isset($systemUser->uid) && !empty($systemUser->uid) ? $systemUser->uid : 1);
		
	
	$node_register->field_member_title['und'][0]['value'] = $field_member_title;	
	$node_register->field_first_name['und'][0]['value']   = $field_first_name;
	$node_register->field_first_name['und'][0]['safe_value']   = $field_first_name;
		
	$node_register->field_middle_name['und'][0]['value']   = $field_middle_name;
	$node_register->field_middle_name['und'][0]['safe_value']   = $field_middle_name;
	
	$node_register->field_last_name['und'][0]['value']   = $field_last_name;
	$node_register->field_last_name['und'][0]['safe_value']   = $field_last_name;
	
	$node_register->field_country['und'][0]['iso2']   = $field_country;
	
	$node_register->field_address['und'][0]['value']   = $field_address;
	$node_register->field_address['und'][0]['safe_value']   = $field_address;
	
	$node_register->field_address_1['und'][0]['value']   = $field_address_1;
	$node_register->field_address_1['und'][0]['safe_value']   = $field_address_1;   
	
	//$node_register->field_country_of_origin['und'][0]['iso2']   = $field_country_of_origin;
	
	$node_register->field_city['und'][0]['value']   = $field_city;
	$node_register->field_city['und'][0]['safe_value']   = $field_city;
	
	$node_register->field_state['und'][0]['value']   = (isset($field_country) && $field_country == 'US') ? $field_state : '';
	
	$node_register->field_state_others['und'][0]['value']   = (isset($field_country) && $field_country != 'US') ? $field_state_others : '';
	$node_register->field_state_others['und'][0]['safe_value']   = (isset($field_country) && $field_country != 'US') ? $field_state_others : '';
	
	$node_register->field_zip_code['und'][0]['value']   = $field_zip_code;
	$node_register->field_zip_code['und'][0]['safe_value']   = $field_zip_code;
	
	/*$node_register->field_evening_phone['und'][0]['value']   = $field_evening_phone;
	$node_register->field_evening_phone['und'][0]['safe_value']   = $field_evening_phone;*/
	
	$node_register->field_mobile_phone['und'][0]['value']   = $field_mobile_phone;
	$node_register->field_mobile_phone['und'][0]['safe_value']   = $field_mobile_phone;
	
	$node_register->field_email_address['und'][0]['value']   = $field_email;
	$node_register->field_email_address['und'][0]['safe_value']   = $field_email;
	
	if($field_alumni_univ != ''){
	$node_register->field_alumni_univ['und'][0]['nid']   = $field_alumni_univ;
	}
	else{
	 unset($node_register->field_alumni_univ['und']);
	}
	if($field_alumni_year != ''){
	$node_register->field_alumni_year['und'][0]['value']   = $field_alumni_year.'-01-01 00:00:00';
	}
	else{
	unset($node_register->field_alumni_year['und']);
	}
	
    if(isset($field_business_forums) && count($field_business_forums) > 0){
		$bf = 0;
		unset($node_register->field_business_forums['und']);
		foreach($field_business_forums as $field_business_forum){
			if($field_business_forum != ''){
        		$node_register->field_business_forums['und'][$bf]['nid']   = $field_business_forum;
			}
			$bf++;
		}
    }

    if(isset($field_tourism) && count($field_tourism) > 0){
		$ft = 0;
		unset($node_register->field_tourism['und']);
		foreach($field_tourism as $fieldtourism){
			if($fieldtourism != ''){
        		$node_register->field_tourism['und'][$ft]['nid']   = $fieldtourism;
			}
			$ft++;
		}
    }

	if($field_attend_reunion != ''){
		$node_register->field_attend_reunion['und'][0]['value'] = $field_attend_reunion; 
	}
	else{
		unset($node_register->field_attend_reunion['und']);
	}

	if($field_meal_plan != ''){
		$node_register->field_meal_plan['und'][0]['nid']   = $field_meal_plan;
	}
	
	/*if($field_cruise != ''){
		$node_register->field_cruise['und'][0]['nid']   = $field_cruise;
	}*/
	
    if($field_sunday_night_show != ''){
        $node_register->field_sunday_night_show['und'][0]['value']  = $field_sunday_night_show;
    }
	
	if($field_hotel != ''){
		$node_register->field_hotel['und'][0]['nid']   = $field_hotel;
	}
    
	$node_register->field_membership['und'][0]['nid']   = $field_membership_type;
	
	$node_register->field_amount_paid['und'][0]['value']   = $field_amount_paid;
	$node_register->field_amount_paid['und'][0]['safe_value']   = $field_amount_paid;
	
	$node_register->field_payment_status['und'][0]['value'] = 'Processing';

/***Additional Members Information***/
	if(count($form['field_additional_members']['member']) > 0 && $field_membership_type == '98'){
	$k = 1;
	foreach($form['field_additional_members']['member'] as $member){
	if(isset($member['field_first_name_add_on']['#value']) && $member['field_first_name_add_on']['#value'] !=''){
		/*$cruise_add_on = explode('|',$member['field_cruise_add_on']['#value']);
		$field_cruise_add_on = $cruise[0];
		$field_cruise_price_add_on = (isset($cruise_add_on[1]) && $cruise_add_on[1] != '') ? $cruise_add_on[1] : 0.00;
		
		$meal_plan_add_on = explode('|',$member['field_meal_plan_add_on']['#value']);
		$field_meal_plan_add_on = $meal_plan_add_on[0];
		$field_meal_plan_price_add_on = (isset($meal_plan_add_on[1]) && $meal_plan_add_on[1] != '') ? $meal_plan_add_on[1] : 0.00;*/
		$variable_first_name_obj = 'field_first_name_additional_'.$k; 
		//$variable_middle_name_obj = 'field_middle_name_additional_'.$k;
		$variable_last_name_obj = 'field_last_name_additional_'.$k;
		$variable_relation_obj = 'field_relation_additional_'.$k;
		$variable_alumni_univ_obj = 'field_alumni_univ_additional_'.$k;
		//$variable_alumni_year_obj = 'field_alumni_year_additional_'.$k;
		$variable_sunday_night_show_obj = 'field_sunday_ns_additional_'.$k;
        //$variable_meal_plan_obj = 'field_meal_plan_additional_'.$k; 
		//$variable_cruise_plan_obj = 'field_cruise_additional_'.$k;	
		if($member['field_first_name_add_on']['#value'] != ''){
		  $node_register->{$variable_first_name_obj}['und'][0]['value'] = $member['field_first_name_add_on']['#value'];
		  $node_register->{$variable_first_name_obj}['und'][0]['safe_value'] = $member['field_first_name_add_on']['#value'];
		}
		/*if($member['field_middle_name_add_on']['#value'] != ''){	
			$node_register->{$variable_middle_name_obj}['und'][0]['value'] = $member['field_middle_name_add_on']['#value'];
			$node_register->{$variable_middle_name_obj}['und'][0]['safe_value'] = $member['field_middle_name_add_on']['#value'];	
		}*/
		if($member['field_last_name_add_on']['#value'] != ''){
		$node_register->{$variable_last_name_obj}['und'][0]['value'] = $member['field_last_name_add_on']['#value'];
		$node_register->{$variable_last_name_obj}['und'][0]['safe_value'] = $member['field_last_name_add_on']['#value'];
		}
		if($member['field_relation_add_on']['#value'] != ''){
			  $node_register->{$variable_relation_obj}['und'][0]['value'] = $member['field_relation_add_on']['#value'];
		}
		if($member['field_alumni_univ_add_on']['#value'] != ''){
		  $node_register->{$variable_alumni_univ_obj}['und'][0]['nid'] = $member['field_alumni_univ_add_on']['#value'];
		}
		/*if($member['field_alumni_year_add_on']['#value'] != ''){
		  $node_register->{$variable_alumni_year_obj}['und'][0]['value'] = $member['field_alumni_year_add_on']['#value'].'-01-01 00:00:00';
		}
		if($field_cruise_add_on != ''){	
			 $node_register->{$variable_cruise_plan_obj}['und'][0]['nid'] = $field_cruise_add_on;
			}
		if($field_meal_plan_add_on != ''){
			 $node_register->{$variable_meal_plan_obj}['und'][0]['nid'] = $field_meal_plan_add_on;
		}*/
		if($member['field_sunday_night_show_add_on']['#value'] != ''){
		 $node_register->{$variable_sunday_night_show_obj}['und'][0]['value'] = $member['field_sunday_night_show_add_on']['#value'];
		}
		$k++;
		}
	  }
	}
	/************************************/	
	
	$node_register->status = 1;
	$node_register->promote = 0;
	$node_register->comment = 0;
	//echo "<pre>"; print_r($node_register); echo "</pre>"; die();
	$result = node_save($node_register);
    $nid = $node_register->nid;
	
	drupal_set_message('Please wait - Processing Payment','status');
	drupal_goto('payment/process',array('query'=>array('membership'=>$_SESSION['valid_membership_number'])));
	}
}

function core_overrides_membership_registration_donor_saved_form_submit($form, &$form_state){

	global $base_url;
	
    $member_nid = isset($_SESSION['valid_membership_nid']) ? $_SESSION['valid_membership_nid'] : '';
    $membership_email = isset($_SESSION['valid_membership_email']) ? $_SESSION['valid_membership_email'] : '';
    $membership_token = isset($_SESSION['valid_membership_token']) ? $_SESSION['valid_membership_token'] : '';
	$field_member_title = $form['field_member_title']['#value'];	
	$field_first_name = $form['field_first_name']['#value'];
	$field_middle_name = $form['field_middle_name']['#value'];
	$field_last_name = $form['field_last_name']['#value'];
	$field_country = $form['field_country']['#value'];
	$field_address = $form['field_address']['#value'];
	$field_address_1 = $form['field_address_1']['#value'];
	//$field_country_of_origin = $form['field_country_of_origin']['#value'];
    $field_city = $form['field_city']['#value'];
    $field_state = $form['field_state']['#value'];
    $field_state_others = $form['field_state_others']['#value'];
	$field_zip_code = $form['field_zip_code']['#value'];
    //$field_evening_phone = $form['field_evening_phone']['#value'];
    $field_mobile_phone = $form['field_mobile_phone']['#value'];
    $field_email = $form['field_email']['#value'];
    $field_alumni_univ = $form['field_alumni_univ']['#value'];
    $field_alumni_year = $form['field_alumni_year']['#value'];
    $field_business_forums = $form['field_business_forums']['#value'];
	$field_tourism = $form['field_tourism']['#value'];
	$field_attend_reunion = $form['field_attend_reunion']['#value'];
    $field_sunday_night_show= $form['field_sunday_night_show']['#value'];
	$field_hotel = $form['field_hotel']['#value'];
     
	/*$cruise = explode('|',$form['field_cruise']['#value']);
	$field_cruise = $cruise[0];
	$field_cruise_price = (isset($cruise[1]) && $cruise[1] != '') ? $cruise[1] : 0.00;*/
    
	$meal_plan = explode('|',$form['field_meal_plan']['#value']);
	$field_meal_plan = $meal_plan[0];
	$field_meal_plan_price = (isset($meal_plan[1]) && $meal_plan[1] != '') ? $meal_plan[1] : 0.00;
	
	$field_membership_type = 98;
	
    $field_payment_status = 'Processing';
    $field_date_of_registration = date('Y-m-d',time());
    $field_amount_paid = number_format($form['field_subscription_price']['#value'],2,'.',''); // Subscription Price.

	
	$systemUser = user_load_by_name('system_user');	
	//echo $field_amount_paid.'<br>';
	//echo "<pre>"; print_r($form); echo "<pre>"; die();
	$node_register = node_load($member_nid); 
	$node_register->uid = (isset($systemUser->uid) && !empty($systemUser->uid) ? $systemUser->uid : 1);
		
	
	$node_register->field_member_title['und'][0]['value'] = $field_member_title;	
	$node_register->field_first_name['und'][0]['value']   = $field_first_name;
	$node_register->field_first_name['und'][0]['safe_value']   = $field_first_name;
		
	$node_register->field_middle_name['und'][0]['value']   = $field_middle_name;
	$node_register->field_middle_name['und'][0]['safe_value']   = $field_middle_name;
	
	$node_register->field_last_name['und'][0]['value']   = $field_last_name;
	$node_register->field_last_name['und'][0]['safe_value']   = $field_last_name;
	
	$node_register->field_country['und'][0]['iso2']   = $field_country;
	
	$node_register->field_address['und'][0]['value']   = $field_address;
	$node_register->field_address['und'][0]['safe_value']   = $field_address;
	
	$node_register->field_address_1['und'][0]['value']   = $field_address_1;
	$node_register->field_address_1['und'][0]['safe_value']   = $field_address_1;   
	
	//$node_register->field_country_of_origin['und'][0]['iso2']   = $field_country_of_origin;
	
	$node_register->field_city['und'][0]['value']   = $field_city;
	$node_register->field_city['und'][0]['safe_value']   = $field_city;
	
	$node_register->field_state['und'][0]['value']   = (isset($field_country) && $field_country == 'US') ? $field_state : '';
	
	$node_register->field_state_others['und'][0]['value']   = (isset($field_country) && $field_country != 'US') ? $field_state_others : '';
	$node_register->field_state_others['und'][0]['safe_value']   = (isset($field_country) && $field_country != 'US') ? $field_state_others : '';
	
	$node_register->field_zip_code['und'][0]['value']   = $field_zip_code;
	$node_register->field_zip_code['und'][0]['safe_value']   = $field_zip_code;
	
	/*$node_register->field_evening_phone['und'][0]['value']   = $field_evening_phone;
	$node_register->field_evening_phone['und'][0]['safe_value']   = $field_evening_phone;*/
	
	$node_register->field_mobile_phone['und'][0]['value']   = $field_mobile_phone;
	$node_register->field_mobile_phone['und'][0]['safe_value']   = $field_mobile_phone;
	
	$node_register->field_email_address['und'][0]['value']   = $field_email;
	$node_register->field_email_address['und'][0]['safe_value']   = $field_email;
	
	if($field_alumni_univ != ''){
		$node_register->field_alumni_univ['und'][0]['nid']   = $field_alumni_univ;
	}
	else{
		unset($node_register->field_alumni_univ['und']);
	}
	
	if($field_alumni_year != ''){
	$node_register->field_alumni_year['und'][0]['value']   = $field_alumni_year.'-01-01 00:00:00';
	}
	else{
	unset($node_register->field_alumni_year['und']);
	}
	
    if(isset($field_business_forums['und']) && count($field_business_forums['und']) > 0){
		$bf = 0;
		unset($node_register->field_business_forums['und']);
		foreach($field_business_forums['und'] as $field_business_forum){
			if($field_business_forum != ''){
        		$node_register->field_business_forums['und'][$bf]['nid']   = $field_business_forum;
			}
			$bf++;
		}
    }

    if(isset($field_tourism['und']) && count($field_tourism['und']) > 0){
		$ft = 0;
		unset($node_register->field_tourism['und']);
		foreach($field_tourism['und'] as $fieldtourism){
			if($fieldtourism != ''){
        		$node_register->field_tourism['und'][$ft]['nid']   = $fieldtourism;
			}
			$ft++;
		}
    }

	if($field_attend_reunion != ''){
		$node_register->field_attend_reunion['und'][0]['value'] = $field_attend_reunion; 
	}
	else{
		unset($node_register->field_attend_reunion['und']);
	}
	
	if($field_meal_plan != ''){
		$node_register->field_meal_plan['und'][0]['nid']   = $field_meal_plan;
	}
	else{
		unset($node_register->field_meal_plan['und']);
	}
	
	/*if($field_cruise != ''){
		$node_register->field_cruise['und'][0]['nid']   = $field_cruise;
	}*/
	
    if($field_sunday_night_show != ''){
        $node_register->field_sunday_night_show['und'][0]['value']  = $field_sunday_night_show;
    }
	
	if($field_hotel != ''){
		$node_register->field_hotel['und'][0]['nid']   = $field_hotel;
	}
    
	$node_register->field_membership['und'][0]['nid']   = $field_membership_type;
	
	$node_register->field_amount_paid['und'][0]['value']   = $field_amount_paid;
	$node_register->field_amount_paid['und'][0]['safe_value']   = $field_amount_paid;
	
	$node_register->field_payment_status['und'][0]['value'] = 'Processing';

/***Additional Members Information***/
	if(count($form['field_additional_members']['member']) > 0 && $field_membership_type == '98'){
	$k = 1;
	foreach($form['field_additional_members']['member'] as $member){
	if(isset($member['field_first_name_add_on']['#value']) && $member['field_first_name_add_on']['#value'] !=''){
		/*$cruise_add_on = explode('|',$member['field_cruise_add_on']['#value']);
		$field_cruise_add_on = $cruise[0];
		$field_cruise_price_add_on = (isset($cruise_add_on[1]) && $cruise_add_on[1] != '') ? $cruise_add_on[1] : 0.00;*/
		
		/*$meal_plan_add_on = explode('|',$member['field_meal_plan_add_on']['#value']);
		$field_meal_plan_add_on = $meal_plan_add_on[0];
		$field_meal_plan_price_add_on = (isset($meal_plan_add_on[1]) && $meal_plan_add_on[1] != '') ? $meal_plan_add_on[1] : 0.00;*/
		
		
		$variable_first_name_obj = 'field_first_name_additional_'.$k; 
		//$variable_middle_name_obj = 'field_middle_name_additional_'.$k;
		$variable_last_name_obj = 'field_last_name_additional_'.$k;
		$variable_relation_obj = 'field_relation_additional_'.$k;
		$variable_alumni_univ_obj = 'field_alumni_univ_additional_'.$k;
		//$variable_alumni_year_obj = 'field_alumni_year_additional_'.$k;
		$variable_sunday_night_show_obj = 'field_sunday_ns_additional_'.$k;
        //$variable_meal_plan_obj = 'field_meal_plan_additional_'.$k; 
		//$variable_cruise_plan_obj = 'field_cruise_additional_'.$k;	
		if($member['field_first_name_add_on']['#value'] != ''){
		  $node_register->{$variable_first_name_obj}['und'][0]['value'] = $member['field_first_name_add_on']['#value'];
		  $node_register->{$variable_first_name_obj}['und'][0]['safe_value'] = $member['field_first_name_add_on']['#value'];
		}
		/*if($member['field_middle_name_add_on']['#value'] != ''){	
			$node_register->{$variable_middle_name_obj}['und'][0]['value'] = $member['field_middle_name_add_on']['#value'];
			$node_register->{$variable_middle_name_obj}['und'][0]['safe_value'] = $member['field_middle_name_add_on']['#value'];	
		}*/
		if($member['field_last_name_add_on']['#value'] != ''){
		$node_register->{$variable_last_name_obj}['und'][0]['value'] = $member['field_last_name_add_on']['#value'];
		$node_register->{$variable_last_name_obj}['und'][0]['safe_value'] = $member['field_last_name_add_on']['#value'];
		}
		if($member['field_relation_add_on']['#value'] != ''){
			  $node_register->{$variable_relation_obj}['und'][0]['value'] = $member['field_relation_add_on']['#value'];
		}
		if($member['field_alumni_univ_add_on']['#value'] != ''){
		  $node_register->{$variable_alumni_univ_obj}['und'][0]['nid'] = $member['field_alumni_univ_add_on']['#value'];
		}
		/*if($member['field_alumni_year_add_on']['#value'] != ''){
		  $node_register->{$variable_alumni_year_obj}['und'][0]['value'] = $member['field_alumni_year_add_on']['#value'].'-01-01 00:00:00';
		}
		if($field_cruise_add_on != ''){	
			 $node_register->{$variable_cruise_plan_obj}['und'][0]['nid'] = $field_cruise_add_on;
			}
		if($field_meal_plan_add_on != ''){
			 $node_register->{$variable_meal_plan_obj}['und'][0]['nid'] = $field_meal_plan_add_on;
		}*/
		if($member['field_sunday_night_show_add_on']['#value'] != ''){
		 $node_register->{$variable_sunday_night_show_obj}['und'][0]['value'] = $member['field_sunday_night_show_add_on']['#value'];
		}
		$k++;
		}
	  }
	}
	/************************************/	
	
	$node_register->status = 1;
	$node_register->promote = 0;
	$node_register->comment = 0;
	//echo "<pre>"; print_r($node_register); echo "</pre>"; die();
	$result = node_save($node_register);
    $nid = $node_register->nid;

	drupal_set_message('Information has been saved successfully. Please login using email address and login token to complete the payment process.','status');
}
 
/****************************************************************/

/*********************Sponsor Registration*************************/

function core_overrides_membership_registration_sponsor_form($form, $form_state, $no_js_use = FALSE){
	global $language;
	$currentLanguage = $language->language;
	
	$membership_types = get_membership_types();
	$membership_types_option = array();
	if(count($membership_types) > 0){
	$membership_types_option[''] = t('Select');    
	foreach($membership_types as $membership_type){
		$membership_types_option[$membership_type['nid'].'|'.$membership_type['subscription_amount']] = t($membership_type['title']);
		}
	}
	
	$countries_option = get_countries_list();
	$state_list_us_option = get_state_list_us();
	
	$related_organizers = get_related_organizers();
	$related_organizer_option = array();
	if(count($related_organizers) > 0){
	$related_organizer_option[''] = t('Select');      
	foreach($related_organizers as $related_organizer){
		$related_organizer_option[$related_organizer['nid']] = t($related_organizer['title']);
		}
	}
	
	$sponsor_membership_plans = get_sponsor_membership_plans();
	
	$sponsor_membership_plan_option = array();
	if(count($sponsor_membership_plans) > 0){      
	foreach($sponsor_membership_plans as $sponsor_membership_plan){
		$sponsor_membership_plan_option[$sponsor_membership_plan['nid']] = t($sponsor_membership_plan['title']);
		}
	}
	//echo "<pre>"; print_r($sponsor_membership_plan_option); echo "</pre>"; die();
	$hotels = get_hotel_list();
	$hotels_option = array();
	if(count($hotels) > 0){
	$hotels_option[''] = t('Select');      
	foreach($hotels as $hotel){
		$hotels_option[$hotel['nid']] = t($hotel['title']);
		}
	}
	//echo "<pre>"; print_r($countries_option); echo "</pre>"; die();
	
	$form = array();
	
	/*$form['field_membership_type'] = array(
	'#title' => t('Membership Type'),
    '#type' => 'select',
    '#options' => $membership_types_option,
    '#attributes' => array('class'=> array('c-select'),"onchange"=>"javascript:update_total_price();", "id"=>"field_membership_type"),
    '#default_value' => '',
    );	*/
	
    $form['field_sponsor_title'] = array(
    '#title' => t('Title'),
    '#type' => 'select',
    '#options' => array(''=>t('Select'),'Dr.'=>t('Dr.'),'Mr.'=>t('Mr.'),'Mrs.'=>t('Mrs.'),'Ms.'=>t('Ms.'),'Miss'=>t('Miss'),'Master'=>t('Master')),
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id'=>'field_sponsor_title',),
    '#default_value' => '',
    );
	
	$form['field_sponsor_first_name'] = array(
	'#title' => t('First Name'),	
    '#type' => 'textfield',
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'placeholder' => t('first name'),'id'=>'field_sponsor_first_name', "maxlength"=>"30"),
  	'#default_value' => '',
	);
	
	$form['field_sponsor_middle_name'] = array(
	'#title' => t('Middle Name'),	
    '#type' => 'textfield',
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'placeholder' => t('middle name'),'id'=>'field_sponsor_middle_name', "maxlength"=>"30"),
  	'#default_value' => '',
	);
	
	$form['field_sponsor_last_name'] = array(
	'#title' => t('Last Name'),	
    '#type' => 'textfield',
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'), 'placeholder' => t('last name'),'id'=>'field_sponsor_last_name', "maxlength"=>"30"),
  	'#default_value' => '',
	);
	
	$form['field_sponsor_address_1'] = array(
	'#title' => t('Address 1'),
    '#type' => 'textfield',
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'placeholder' => t('address 1'),'id'=>'field_sponsor_address_1',"maxlength"=>"100"),
	); 
	
	$form['field_sponsor_address_2'] = array(
	'#title' => t('Address 2'),
    '#type' => 'textfield',
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'placeholder' => t('address 2'),'id'=>'field_sponsor_address_2',"maxlength"=>"100"),
	); 
	
	$form['field_sponsor_country'] = array(
	'#title' => t('Country'),
    '#type' => 'select',
	'#default_value' => 'US',
    '#options' => $countries_option,
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id'=>'field_sponsor_country','onchange'=>'javascript:changeStateForm();'),
  	);
	
	$form['field_sponsor_city'] = array(
	'#title' => t('City'),	
    '#type' => 'textfield',
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'), 'placeholder' => t('city'),'id'=>'field_sponsor_city', "maxlength"=>"30"),
  	'#default_value' => '',
	);
	
	$form['field_sponsor_state'] = array(
	'#title' => t('State (US)'),
    '#type' => 'select',
    '#options' => $state_list_us_option,
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id'=>'field_sponsor_state',),
  	);
	
	$form['field_sponsor_state_others'] = array(
	'#title' => t('State (Non US)'),	
    '#type' => 'textfield',
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'placeholder' => t('state if non US'),'id'=>'field_sponsor_state_others', "maxlength"=>"30"),
  	'#default_value' => '',
	);
	
	$form['field_sponsor_zip_code'] = array(
	'#title' => t('Zip Code'),	
    '#type' => 'telfield',
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md','tel'),'placeholder' => t('zip code'),'id'=>'field_sponsor_zip_code', "maxlength"=>"8"),
  	'#default_value' => '',
	);	
	
	$form['field_sponsor_phone_number'] = array(
	'#title' => t('Phone Number'),	
    '#type' => 'telfield',
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md','tel'),'placeholder' => t('Phone number'),'id'=>'field_sponsor_phone_number', "maxlength"=>"16"),
  	'#default_value' => '',
	);
	
	$form['field_sponsor_email_address'] = array(
	'#title' => t('Email'),
    '#type' => 'emailfield',
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md','email'),'placeholder' => t('email address'),'id'=>'field_sponsor_email_address', "maxlength"=>"60"),
  	'#default_value' => '',
	);
	
	$form['field_referral_organization'] = array(
	'#title' => t('Organization that requested you to register'),
    '#type' => 'select',
    '#options' => $related_organizer_option,
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id'=>'field_referral_organization',),
    '#default_value' => '',
  	);
	
	$form['field_sponsor_membership_plan'] = array(
	'#title' => t('Sponsorship Registration : Category and Rate (Select one only)'),
    '#type' => 'radios',
    '#options' => $sponsor_membership_plan_option,
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),),
	'#default_value' => '',
  	);
	
	$form['field_sponsor_hotel'] = array(
    '#title' => t('Hotel'),
    '#type' => 'select',
    '#options' => $hotels_option,
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id'=>'field_sponsor_hotel', 'onchange' => 'javascript: update_total_price();'),
    '#default_value' => '',
    );
    
	/**Add On Members Fields**/
	
	if (empty($form_state['sponsor_badge_name'])) {
        $form_state['sponsor_badge_name'] = 10;
    }
    
	$form['field_sponsor_badge_name'] = array(
	  '#type' => 'container', 
	  '#title' => t('Sponsor Badge Names'),  
	  '#collapsible' => FALSE, 
	  '#tree' => TRUE,
	  '#prefix' => '<div class="col-sm-12 center-xs wow fadeInLeft animated"><div id="additional-members-wrapper" class="additional-members-wrapper"> <h5 class="form-heading" id="step1a-form-heading">Badge Names (please provide names for badges)</h5></div>',
   	  '#suffix' => '<div class="col-sm-12 center-xs wow fadeInLeft animated add_more_sponsor_badge_container"><div class="form-group"><button class="btn btn-sm btn-primary add_more_sponsor_badge_name_btn" id="add_more_sponsor_badge_name_btn" onclick="javascript:add_more_sponsor_badge();">Add More</button></div></div></div>',
	);

	for ($i = 1; $i <= $form_state['sponsor_badge_name']; $i++) {
    
    $form['field_sponsor_badge_name']['member'][$i] = array(
      '#type' => 'fieldset', 
      '#tree' => TRUE,
	  '#attributes' => array('class'=>array('col-sm-6')),
    );
    
	$form['field_sponsor_badge_name']['member'][$i]['field_sponsor_badge_name'] = array(
	'#title' => t('Individual Name'.' '.$i),	
    '#type' => 'textfield',
    
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'placeholder' => t('individual name '.$i),'id' => 'field_sponsor_badge_name_'.$i, "maxlength"=>"60"),
  	'#default_value' => '',
	'#prefix' => '<div class="col-sm-12 center-xs wow fadeInLeft animated"><div class="form-group">',
	'#suffix' => '</div></div>',
	'#group' => 'field_sponsor_badge_name',
	);
	
    }

	$form['actions']['button'] = array(
    '#type' => 'button',
    '#value' => t('Modify Details'),
    '#attributes' => array(
		'class' => array('btn', 'btn-default'),
		'id' => 'backbtn4',
		'onclick' => 'javascript: reg_goto(\'step1\');',
		),
  	'#name' => 'backbtn4',
	'#submit' => array('core_overrides_membership_sponsor_previous'),	
    );
	
	
	$form['actions']['submit1'] = array(
    '#type' => 'submit',
    '#value' => t('Save and Register Later'),
    '#attributes' => array(
		'class' => array('btn', 'btn-default'),
		'id' => 'add-member-btn',
		
		),
  	'#name' => 'submit-registration',
	'#submit' => array('core_overrides_membership_registration_sponsor_form_submit'),
    );
	
	$form['actions']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Register & Pay'),
    '#attributes' => array(
		'class' => array('btn', 'btn-default'),
		'id' => 'register-pay-member-btn',
		
		),
  	'#name' => 'submit-registration-pay',
	'#submit' => array('core_overrides_membership_registration_sponsor_form_pay_submit'),	
    );
	
	$form['field_subscription_price'] = array(
    '#type' => 'hidden',
    '#default_value' => '',
    '#attributes' => array(
		'id' => 'field_subscription_price',
		),
  	'#name' => 'field_subscription_price',
    );
	
	$form['#method'] = 'post';
	
	$form['#action'] = url('sponsor-registration');
    
    /*$form_id = 'membership_registration';
    if (isset($form['#token']) && $form['#token'] !== FALSE) {
       $form['#token'] = FALSE;
     }
    else{
      $form['#token'] = $form_id;
     }
    
    $form ['form_token'] = array(
      '#id' => drupal_html_id('edit-' . $form_id . '-form-token'),
      '#type' => 'token',
      '#default_value' => drupal_get_token($form['#token']),
      '#parents' => array('form_token'),
    );  */
    
	$form['#validate'][] = 'core_overrides_membership_registration_sponsor_form_validate';	
	$form['#submit'][] = 'core_overrides_membership_registration_sponsor_form_submit';
    
    $form['#cache'] = FALSE; 
    $form['#no_cache'] = TRUE; 
    $form_state['cache'] = FALSE; 
    
	return $form;
}

function core_overrides_membership_registration_sponsor_form_validate(&$form, &$form_state){
            
        
    //echo "<pre>"; print_r($form_state); echo "</pre>"; die(); 
    $field_sponsor_title = $form_state['input']['field_sponsor_title'];
    $field_sponsor_first_name = $form_state['input']['field_sponsor_first_name'];
    $field_sponsor_middle_name = $form_state['input']['field_sponsor_middle_name'];
    $field_sponsor_last_name = $form_state['input']['field_sponsor_last_name'];
    $field_sponsor_address_1 = $form_state['input']['field_sponsor_address_1'];
    $field_sponsor_address_2 = $form_state['input']['field_sponsor_address_2'];
    $field_sponsor_country = $form_state['input']['field_sponsor_country'];
    $field_sponsor_city = $form_state['input']['field_sponsor_city'];
    $field_sponsor_state = $form_state['input']['field_sponsor_state'];
    $field_sponsor_state_others = $form_state['input']['field_sponsor_state_others'];
    $field_sponsor_zip_code = $form_state['input']['field_sponsor_zip_code'];;
    $field_sponsor_phone_number = $form_state['input']['field_sponsor_phone_number'];
    $field_sponsor_email_address = $form_state['input']['field_sponsor_email_address'];
    $field_referral_organization = $form_state['input']['field_referral_organization'];
    $field_sponsor_membership_plan = $form_state['input']['field_sponsor_membership_plan'];
	$field_sponsor_hotel = $form_state['input']['field_sponsor_hotel'];
    
    $query = new EntityFieldQuery();
      
    $query->entityCondition('entity_type', 'node');
    $query->entityCondition('bundle', 'sponsor_registration');
    $query->propertyCondition('status', 1);
    $query->fieldCondition('field_sponsor_email_address', 'value', $field_sponsor_email_address , '=');
    $result = $query->execute();

    if($field_sponsor_title == ''){
        form_set_error('field_sponsor_title',t('Please select title'));
    }
    
    if($field_sponsor_first_name==''){
        form_set_error('field_sponsor_first_name',t('Please enter first name'));
    }
    
     if($field_sponsor_last_name==''){
        form_set_error('field_sponsor_last_name',t('Please enter last name'));
    }

    if($field_sponsor_address_1==''){
        form_set_error('field_sponsor_address_1',t('Please enter address 1'));
    }
    
    if($field_sponsor_country==''){
        form_set_error('field_sponsor_country',t('Please select country'));
    }
    
     if($field_sponsor_city==''){
        form_set_error('field_sponsor_city',t('Please enter city'));
    }
     
     if($field_sponsor_country =='US' && $field_sponsor_state == ''){
        form_set_error('field_sponsor_state',t('Please select state (US)'));
    }
     
     if($field_sponsor_country !='US' && $field_sponsor_state_others == ''){
        form_set_error('field_sponsor_state_others',t('Please enter state (Non-US)'));
    }
     
   if($field_sponsor_zip_code == ''){
        form_set_error('field_sponsor_zip_code',t('Please enter zip code'));
    }   
   
    if($field_sponsor_phone_number == ''){
        form_set_error('field_sponsor_phone_number',t('Please enter evening phone'));
    }
    
    if($field_sponsor_email_address==''){
        form_set_error('field_sponsor_email_address',t('Please enter email address'));
    }
    if($field_sponsor_email_address!='' && !valid_email_address($field_sponsor_email_address)){
        form_set_error('field_sponsor_email_address',t('Please enter valid email address'));
    }

    if($field_sponsor_email_address!='' && isset($result['node'])){
        form_set_error('field_sponsor_email_address',t('email has already been registered. Thank you.'));
    }

	if($field_referral_organization == ''){
        form_set_error('field_referral_organization',t('Please select referral organization.'));
    }
	
	if($field_sponsor_membership_plan == ''){
        form_set_error('field_sponsor_membership_plan',t('Please select membership plan.'));
    }

	if($field_sponsor_hotel==''){
        form_set_error('field_sponsor_hotel',t('Please select hotel'));
    }
        
}

function core_overrides_membership_sponsor_previous($form, &$form_state){

}

function core_overrides_membership_registration_sponsor_form_pay_submit($form, &$form_state){

	global $base_url;
	$membership_number = generate_sponsor_membership_number_1(); // Membership Number.
    $membership_token = generate_sponsor_membership_token(); // Membership Token.
	$field_sponsor_title = $form['field_sponsor_title']['#value'];	
	$field_sponsor_first_name = $form['field_sponsor_first_name']['#value'];
	$field_sponsor_middle_name = $form['field_sponsor_middle_name']['#value'];
	$field_sponsor_last_name = $form['field_sponsor_last_name']['#value'];
	$field_sponsor_country = $form['field_sponsor_country']['#value'];
	$field_sponsor_address_1 = $form['field_sponsor_address_1']['#value'];
	$field_sponsor_address_2 = $form['field_sponsor_address_2']['#value'];
    $field_sponsor_city = $form['field_sponsor_city']['#value'];
    $field_sponsor_state = $form['field_sponsor_state']['#value'];
    $field_sponsor_state_others = $form['field_sponsor_state_others']['#value'];
	$field_sponsor_zip_code = $form['field_sponsor_zip_code']['#value'];
    $field_sponsor_phone_number = $form['field_sponsor_phone_number']['#value'];
    $field_sponsor_email_address = $form['field_sponsor_email_address']['#value'];
	$field_referral_organization = $form['field_referral_organization']['#value'];
	$field_sponsor_membership_plan= $form['field_sponsor_membership_plan']['#value'];
	$field_sponsor_hotel = $form['field_sponsor_hotel']['#value'];

    $field_sponsor_membership_number = $membership_number;
    $field_sponsor_membership_token = $membership_token;
    $field_sponsor_payment_status = 'Processing';
    $field_sponsor_date_of_regis = date('Y-m-d',time());
    
	if($field_sponsor_membership_plan == 137){
		$field_sponsor_amount_paid = 25000.00; // Subscription Price.
	}
	
	if($field_sponsor_membership_plan == 136){
		$field_sponsor_amount_paid = 20000.00; // Subscription Price.
	}
	
	if($field_sponsor_membership_plan == 135){
		$field_sponsor_amount_paid = 10000.00; // Subscription Price.
	}
	
	if($field_sponsor_membership_plan == 134){
		$field_sponsor_amount_paid = 5000.00; // Subscription Price.
	}
	
	if($field_sponsor_membership_plan == 133){
		$field_sponsor_amount_paid = 3000.00; // Subscription Price.
	}
	

	
	$systemUser = user_load_by_name('system_user');	
	//echo $field_amount_paid.'<br>';
	//echo "<pre>"; print_r($form); echo "<pre>"; die();
	$node_register = new StdClass();
	$node_register->title = $membership_number;    
	$node_register->type = 'sponsor_registration';
	node_object_prepare($node_register);
	$node_register->language = LANGUAGE_NONE;
	$node_register->uid = (isset($systemUser->uid) && !empty($systemUser->uid) ? $systemUser->uid : 1);
		
	
	$node_register->field_sponsor_title['und'][0]['value'] = $field_sponsor_title;	
	$node_register->field_sponsor_first_name['und'][0]['value']   = $field_sponsor_first_name;
	$node_register->field_sponsor_first_name['und'][0]['safe_value']   = $field_sponsor_first_name;
		
	$node_register->field_sponsor_middle_name['und'][0]['value']   = $field_sponsor_middle_name;
	$node_register->field_sponsor_middle_name['und'][0]['safe_value']   = $field_sponsor_middle_name;
	
	$node_register->field_sponsor_last_name['und'][0]['value']   = $field_sponsor_last_name;
	$node_register->field_sponsor_last_name['und'][0]['safe_value']   = $field_sponsor_last_name;
	
	$node_register->field_sponsor_country['und'][0]['iso2']   = $field_sponsor_country;
	
	$node_register->field_sponsor_address_1['und'][0]['value']   = $field_sponsor_address_1;
	$node_register->field_sponsor_address_1['und'][0]['safe_value']   = $field_sponsor_address_1;
	
	$node_register->field_sponsor_address_2['und'][0]['value']   = $field_sponsor_address_2;
	$node_register->field_sponsor_address_2['und'][0]['safe_value']   = $field_sponsor_address_2;   
	
	$node_register->field_sponsor_city['und'][0]['value']   = $field_sponsor_city;
	$node_register->field_sponsor_city['und'][0]['safe_value']   = $field_sponsor_city;
	
	$node_register->field_sponsor_state['und'][0]['value']   = (isset($field_sponsor_country) && $field_sponsor_country == 'US') ? $field_sponsor_state : '';
	
	$node_register->field_sponsor_state_others['und'][0]['value']   = (isset($field_sponsor_country) && $field_sponsor_country != 'US') ? $field_sponsor_state_others : '';
	$node_register->field_sponsor_state_others['und'][0]['safe_value']   = (isset($field_country) && $field_country != 'US') ? $field_sponsor_state_others : '';
	
	$node_register->field_sponsor_zip_code['und'][0]['value']   = $field_sponsor_zip_code;
	$node_register->field_sponsor_zip_code['und'][0]['safe_value']   = $field_sponsor_zip_code;
	
	$node_register->field_sponsor_phone_number['und'][0]['value']   = $field_sponsor_phone_number;
	$node_register->field_sponsor_phone_number['und'][0]['safe_value']   = $field_sponsor_phone_number;
	
	$node_register->field_sponsor_email_address['und'][0]['value']   = $field_sponsor_email_address;
	$node_register->field_sponsor_email_address['und'][0]['safe_value']   = $field_sponsor_email_address;

	if($field_referral_organization != ''){
		$node_register->field_referral_organization['und'][0]['target_id']   = $field_referral_organization;
	}
	if($field_sponsor_membership_plan != ''){
		$node_register->field_sponsor_membership_plan['und'][0]['target_id']   = $field_sponsor_membership_plan;
	}

	if($field_sponsor_hotel != ''){
		$node_register->field_sponsor_hotel['und'][0]['nid']   = $field_sponsor_hotel;
	}
    	
	$node_register->field_sponsor_membership_number['und'][0]['value']   = $membership_number;
	$node_register->field_sponsor_membership_number['und'][0]['safe_value']   = $membership_number;
	
	$node_register->field_sponsor_membership_token['und'][0]['value']   = $membership_token;
	$node_register->field_sponsor_membership_token['und'][0]['safe_value']   = $membership_token;
	
	$node_register->field_sponsor_amount_paid['und'][0]['value']   = number_format($field_sponsor_amount_paid,2,'.','');
	$node_register->field_sponsor_amount_paid['und'][0]['safe_value']   = number_format($field_sponsor_amount_paid,2,'.','');
	
	$node_register->field_sponsor_date_of_regis['und'][0]['value']   = $field_sponsor_date_of_regis;
	$node_register->field_sponsor_date_of_regis['und'][0]['safe_value']   = $field_sponsor_date_of_regis;
	
	$node_register->field_sponsor_payment_status['und'][0]['value'] = 'Processing';
/***Additional Members Information***/
	if(count($form['field_sponsor_badge_name']['member']) > 0){
	$k = 1;
	foreach($form['field_sponsor_badge_name']['member'] as $member){
	if(isset($member['field_sponsor_badge_name']['#value']) && $member['field_sponsor_badge_name']['#value'] !=''){
		$variable_sponsor_badge_name_obj = 'field_sponsor_badge_name_'.$k; 

		if($member['field_sponsor_badge_name']['#value'] != ''){
		  $node_register->{$variable_sponsor_badge_name_obj}['und'][0]['value'] = $member['field_sponsor_badge_name']['#value'];
		  $node_register->{$variable_sponsor_badge_name_obj}['und'][0]['safe_value'] = $member['field_sponsor_badge_name']['#value'];
		}
		$k++;
		}
	  }
	}
	/************************************/	
	
	$node_register->status = 1;
	$node_register->promote = 0;
	$node_register->comment = 0;
	//echo "<pre>"; print_r($node_register); echo "</pre>"; die();
	$result = node_save($node_register);
    $nid = $node_register->nid;

    
	$from = $systemUser->mail;
	$to = $field_sponsor_email_address; //variable_get('site_mail', 'notification@nabc2017.com');
	$subject = 'Thank You for registering as Sponsor at NABC 2017 : Welcome';
	$email_body = '';
	if(file_exists(drupal_get_path('module','core_overrides').'/email_templates/email_template_sponsor_welcome.php')) require(drupal_get_path('module','core_overrides').'/email_templates/email_template_sponsor_welcome.php');
	$body    = $email_body;
	//echo $from.'<br/>';
	//echo $from.'<br/>';
	//echo $to.'<br/>';
	//echo $subject.'<br/>';
	//echo $message.'<br/>';
	//echo $body.'<br/>';
	//die();
	if(core_overrides_mail($from,$to,$subject,$body)){
      //drupal_set_message('Message sent successfully. Our representative will get back to you shortly.','status');		
	}
	else{
		drupal_set_message('Error Unable to send Message. Try again.','error');	
	}
	
	
	drupal_set_message('Please wait - Processing Payment','status');
	drupal_goto('payment/process/sponsor',array('query'=>array('membership'=>$membership_number)));
}

function core_overrides_membership_registration_sponsor_form_submit($form, &$form_state){

	global $base_url;
	//echo "<pre>"; print_r(node_load(144)); echo "</pre>"; die();
    $membership_number = generate_sponsor_membership_number_1(); // Membership Number.
    $membership_token = generate_sponsor_membership_token(); // Membership Token.
	$field_sponsor_title = $form['field_sponsor_title']['#value']; 
    $field_sponsor_first_name = $form['field_sponsor_first_name']['#value'];
    $field_sponsor_middle_name = $form['field_sponsor_middle_name']['#value'];
    $field_sponsor_last_name = $form['field_sponsor_last_name']['#value'];
    $field_sponsor_country = $form['field_sponsor_country']['#value'];
    $field_sponsor_address_1 = $form['field_sponsor_address_1']['#value'];
    $field_sponsor_address_2 = $form['field_sponsor_address_2']['#value'];
    $field_sponsor_city = $form['field_sponsor_city']['#value'];
    $field_sponsor_state = $form['field_sponsor_state']['#value'];
    $field_sponsor_state_others = $form['field_sponsor_state_others']['#value'];
    $field_sponsor_zip_code = $form['field_sponsor_zip_code']['#value'];
    $field_sponsor_phone_number = $form['field_sponsor_phone_number']['#value'];
    $field_sponsor_email_address = $form['field_sponsor_email_address']['#value'];
    $field_referral_organization = $form['field_referral_organization']['#value'];
    $field_sponsor_membership_plan= $form['field_sponsor_membership_plan']['#value'];
    $field_sponsor_hotel = $form['field_sponsor_hotel']['#value'];
     
		
    $field_membership_number = $membership_number;
    $field_membership_token = $membership_token;
    $field_payment_status = 'Processing';
    $field_sponsor_date_of_regis = date('Y-m-d',time());
    if($field_sponsor_membership_plan == 137){
		$sponsor_amount_paid = 25000.00; // Subscription Price.
	}
	
	if($field_sponsor_membership_plan == 137){
		$field_sponsor_amount_paid = 25000.00; // Subscription Price.
	}
	
	if($field_sponsor_membership_plan == 136){
		$field_sponsor_amount_paid = 20000.00; // Subscription Price.
	}
	
	if($field_sponsor_membership_plan == 135){
		$field_sponsor_amount_paid = 10000.00; // Subscription Price.
	}
	
	if($field_sponsor_membership_plan == 134){
		$field_sponsor_amount_paid = 5000.00; // Subscription Price.
	}
	
	if($field_sponsor_membership_plan == 133){
		$field_sponsor_amount_paid = 3000.00; // Subscription Price.
	}

	
	$systemUser = user_load_by_name('system_user');	
	//echo $field_amount_paid.'<br>';
	//echo "<pre>"; print_r($form); echo "<pre>"; die();
	$node_register = new StdClass();
	$node_register->title = $membership_number;    
	$node_register->type = 'sponsor_registration';
	node_object_prepare($node_register);
	$node_register->language = LANGUAGE_NONE;
	$node_register->uid = (isset($systemUser->uid) && !empty($systemUser->uid) ? $systemUser->uid : 1);
		
	
	$node_register->field_sponsor_title['und'][0]['value'] = $field_sponsor_title;  
    $node_register->field_sponsor_first_name['und'][0]['value']   = $field_sponsor_first_name;
    $node_register->field_sponsor_first_name['und'][0]['safe_value']   = $field_sponsor_first_name;
        
    $node_register->field_sponsor_middle_name['und'][0]['value']   = $field_sponsor_middle_name;
    $node_register->field_sponsor_middle_name['und'][0]['safe_value']   = $field_sponsor_middle_name;
    
    $node_register->field_sponsor_last_name['und'][0]['value']   = $field_sponsor_last_name;
    $node_register->field_sponsor_last_name['und'][0]['safe_value']   = $field_sponsor_last_name;
    
    $node_register->field_sponsor_country['und'][0]['iso2']   = $field_sponsor_country;
    
    $node_register->field_sponsor_address_1['und'][0]['value']   = $field_sponsor_address_1;
    $node_register->field_sponsor_address_1['und'][0]['safe_value']   = $field_sponsor_address_1;
    
    $node_register->field_sponsor_address_2['und'][0]['value']   = $field_sponsor_address_2;
    $node_register->field_sponsor_address_2['und'][0]['safe_value']   = $field_sponsor_address_2;   
    
    $node_register->field_sponsor_city['und'][0]['value']   = $field_sponsor_city;
    $node_register->field_sponsor_city['und'][0]['safe_value']   = $field_sponsor_city;
    
    $node_register->field_sponsor_state['und'][0]['value']   = (isset($field_sponsor_country) && $field_sponsor_country == 'US') ? $field_sponsor_state : '';
    
    $node_register->field_sponsor_state_others['und'][0]['value']   = (isset($field_sponsor_country) && $field_sponsor_country != 'US') ? $field_sponsor_state_others : '';
    $node_register->field_sponsor_state_others['und'][0]['safe_value']   = (isset($field_country) && $field_country != 'US') ? $field_sponsor_state_others : '';
    
    $node_register->field_sponsor_zip_code['und'][0]['value']   = $field_sponsor_zip_code;
    $node_register->field_sponsor_zip_code['und'][0]['safe_value']   = $field_sponsor_zip_code;
    
    $node_register->field_sponsor_phone_number['und'][0]['value']   = $field_sponsor_phone_number;
    $node_register->field_sponsor_phone_number['und'][0]['safe_value']   = $field_sponsor_phone_number;
    
    $node_register->field_sponsor_email_address['und'][0]['value']   = $field_sponsor_email_address;
    $node_register->field_sponsor_email_address['und'][0]['safe_value']   = $field_sponsor_email_address;

    if($field_referral_organization != ''){
        $node_register->field_referral_organization['und'][0]['target_id']   = $field_referral_organization;
    }
    if($field_sponsor_membership_plan != ''){
        $node_register->field_sponsor_membership_plan['und'][0]['target_id']   = $field_sponsor_membership_plan;
    }

    if($field_sponsor_hotel != ''){
        $node_register->field_sponsor_hotel['und'][0]['nid']   = $field_sponsor_hotel;
    }
        
    $node_register->field_sponsor_membership_number['und'][0]['value']   = $membership_number;
    $node_register->field_sponsor_membership_number['und'][0]['safe_value']   = $membership_number;
    
    $node_register->field_sponsor_membership_token['und'][0]['value']   = $membership_token;
    $node_register->field_sponsor_membership_token['und'][0]['safe_value']   = $membership_token;
    
    $node_register->field_sponsor_amount_paid['und'][0]['value']   = number_format($field_sponsor_amount_paid,2,'.','');
    $node_register->field_sponsor_amount_paid['und'][0]['safe_value']   = number_format($field_sponsor_amount_paid,2,'.','');
    
    $node_register->field_sponsor_date_of_regis['und'][0]['value']   = $field_sponsor_date_of_regis;
    $node_register->field_sponsor_date_of_regis['und'][0]['safe_value']   = $field_sponsor_date_of_regis;
    
    $node_register->field_sponsor_payment_status['und'][0]['value'] = 'Processing';
/***Additional Members Information***/
    if(count($form['field_sponsor_badge_name']['member']) > 0){
    $k = 1;
    foreach($form['field_sponsor_badge_name']['member'] as $member){
    if(isset($member['field_sponsor_badge_name']['#value']) && $member['field_sponsor_badge_name']['#value'] !=''){
        $variable_sponsor_badge_name_obj = 'field_sponsor_badge_name_'.$k; 

        if($member['field_sponsor_badge_name']['#value'] != ''){
          $node_register->{$variable_sponsor_badge_name_obj}['und'][0]['value'] = $member['field_sponsor_badge_name']['#value'];
          $node_register->{$variable_sponsor_badge_name_obj}['und'][0]['safe_value'] = $member['field_sponsor_badge_name']['#value'];
        }
        $k++;
        }
      }
    }
    /************************************/  
	
	$node_register->status = 1;
	$node_register->promote = 0;
	$node_register->comment = 0;
	//echo "<pre>"; print_r($node_register); echo "</pre>"; die();
	$result = node_save($node_register);
    $nid = $node_register->nid;

    
	$from = $systemUser->mail;
	$to = $field_sponsor_email_address; //variable_get('site_mail', 'notification@nabc2017.com');
	$subject = 'Thank You for registering as Sponsor at NABC 2017 : Welcome';
	$email_body = '';
	if(file_exists(drupal_get_path('module','core_overrides').'/email_templates/email_template_sponsor_welcome.php')) require(drupal_get_path('module','core_overrides').'/email_templates/email_template_sponsor_welcome.php');
	$body    = $email_body;	//echo $from.'<br/>';
	//echo $to.'<br/>';
	//echo $subject.'<br/>';
	//echo $message.'<br/>';
	//echo $body.'<br/>';
	//die();
	if(core_overrides_mail($from,$to,$subject,$body)){
      //drupal_set_message('Message sent successfully. Our representative will get back to you shortly.','status');		
	}
	else{
		drupal_set_message('Error Unable to send Message. Try again.','error');	
	}
	
	
	drupal_set_message('Thanks for interest at NABC2017. Please check email for all details to complete the process','status');
}



function core_overrides_membership_registration_sponsor_saved_form($form, $form_state, $no_js_use = FALSE){
	global $language;
	
	$member_nid = isset($_SESSION['valid_sponsor_membership_nid']) ? $_SESSION['valid_sponsor_membership_nid'] : '';
    $membership_email = isset($_SESSION['valid_sponsor_membership_email']) ? $_SESSION['valid_sponsor_membership_email'] : '';
    $membership_token = isset($_SESSION['valid_sponsor_membership_token']) ? $_SESSION['valid_sponsor_membership_token'] : '';
    
    $saved_member_data = get_membership_data($member_nid);
    $_SESSION['valid_sponsor_membership_number'] = $saved_member_data->field_sponsor_membership_number['und'][0]['value'];
    
    //echo "<pre>"; print_r($saved_member_data); echo "</pre>"; die();
    
    $currentLanguage = $language->language;
	
	$membership_types = get_membership_types();
	$membership_types_option = array();
	if(count($membership_types) > 0){
	$membership_types_option[''] = t('Select');    
	foreach($membership_types as $membership_type){
		$membership_types_option[$membership_type['nid'].'|'.$membership_type['subscription_amount']] = t($membership_type['title']);
		}
	}
	
	$countries_option = get_countries_list();
	$state_list_us_option = get_state_list_us();
	
	$related_organizers = get_related_organizers();
	$related_organizer_option = array();
	if(count($related_organizers) > 0){
	$related_organizer_option[''] = t('Select');      
	foreach($related_organizers as $related_organizer){
		$related_organizer_option[$related_organizer['nid']] = t($related_organizer['title']);
		}
	}
	
	$sponsor_membership_plans = get_sponsor_membership_plans();
	
	$sponsor_membership_plan_option = array();
	if(count($sponsor_membership_plans) > 0){      
	foreach($sponsor_membership_plans as $sponsor_membership_plan){
		$sponsor_membership_plan_option[$sponsor_membership_plan['nid']] = t($sponsor_membership_plan['title']);
		}
	}
	//echo "<pre>"; print_r($sponsor_membership_plan_option); echo "</pre>"; die();
	$hotels = get_hotel_list();
	$hotels_option = array();
	if(count($hotels) > 0){
	$hotels_option[''] = t('Select');      
	foreach($hotels as $hotel){
		$hotels_option[$hotel['nid']] = t($hotel['title']);
		}
	}
	//echo "<pre>"; print_r($countries_option); echo "</pre>"; die();
	
	$form = array();
	
    $form['field_sponsor_title'] = array(
    '#title' => t('Title'),
    '#type' => 'select',
    '#options' => array(''=>t('Select'),'Dr.'=>t('Dr.'),'Mr.'=>t('Mr.'),'Mrs.'=>t('Mrs.'),'Ms.'=>t('Ms.'),'Miss'=>t('Miss'),'Master'=>t('Master')),
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id'=>'field_sponsor_title',),
    '#default_value' => isset($saved_member_data->field_sponsor_title['und']) ? $saved_member_data->field_sponsor_title['und'][0]['value'] : '',
    );
	
	$form['field_sponsor_first_name'] = array(
	'#title' => t('First Name'),	
    '#type' => 'textfield',
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'placeholder' => t('first name'),'id'=>'field_sponsor_first_name', "maxlength"=>"30"),
  	'#default_value' => isset($saved_member_data->field_sponsor_first_name['und']) ? $saved_member_data->field_sponsor_first_name['und'][0]['value'] : '',
	);
	
	$form['field_sponsor_middle_name'] = array(
	'#title' => t('Middle Name'),	
    '#type' => 'textfield',
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'placeholder' => t('middle name'),'id'=>'field_sponsor_middle_name', "maxlength"=>"30"),
  	'#default_value' => isset($saved_member_data->field_sponsor_middle_name['und']) ? $saved_member_data->field_sponsor_middle_name['und'][0]['value'] : '',
	);
	
	$form['field_sponsor_last_name'] = array(
	'#title' => t('Last Name'),	
    '#type' => 'textfield',
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'), 'placeholder' => t('last name'),'id'=>'field_sponsor_last_name', "maxlength"=>"30"),
  	'#default_value' => isset($saved_member_data->field_sponsor_last_name['und']) ? $saved_member_data->field_sponsor_last_name['und'][0]['value'] : '',
	);
	
	$form['field_sponsor_address_1'] = array(
	'#title' => t('Address 1'),
    '#type' => 'textfield',
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'placeholder' => t('address 1'),'id'=>'field_sponsor_address_1',"maxlength"=>"100"),
	'#default_value' => isset($saved_member_data->field_sponsor_address_1['und']) ? $saved_member_data->field_sponsor_address_1['und'][0]['value'] : '',
    ); 
	
	$form['field_sponsor_address_2'] = array(
	'#title' => t('Address 2'),
    '#type' => 'textfield',
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'placeholder' => t('address 2'),'id'=>'field_sponsor_address_2',"maxlength"=>"100"),
	'#default_value' => isset($saved_member_data->field_sponsor_address_2['und']) ? $saved_member_data->field_sponsor_address_2['und'][0]['value'] : '',
    ); 
	
	$form['field_sponsor_country'] = array(
	'#title' => t('Country'),
    '#type' => 'select',
	'#default_value' => isset($saved_member_data->field_sponsor_country['und']) ? $saved_member_data->field_sponsor_country['und'][0]['iso2'] : '',
    '#options' => $countries_option,
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id'=>'field_sponsor_country','onchange'=>'javascript:changeStateForm();'),
  	);
	
	$form['field_sponsor_city'] = array(
	'#title' => t('City'),	
    '#type' => 'textfield',
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'), 'placeholder' => t('city'),'id'=>'field_sponsor_city', "maxlength"=>"30"),
  	'#default_value' => isset($saved_member_data->field_sponsor_city['und']) ? $saved_member_data->field_sponsor_city['und'][0]['value'] : '',
	);
	
	$form['field_sponsor_state'] = array(
	'#title' => t('State (US)'),
    '#type' => 'select',
    '#options' => $state_list_us_option,
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id'=>'field_sponsor_state',),
    '#default_value' => isset($saved_member_data->field_sponsor_state['und']) ? $saved_member_data->field_sponsor_state['und'][0]['value'] : '',
  	);
	
	$form['field_sponsor_state_others'] = array(
	'#title' => t('State (Non US)'),	
    '#type' => 'textfield',
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'placeholder' => t('state if non US'),'id'=>'field_sponsor_state_others', "maxlength"=>"30"),
  	'#default_value' => isset($saved_member_data->field_sponsor_state_others['und']) ? $saved_member_data->field_sponsor_state_others['und'][0]['value'] : '',
	);
	
	$form['field_sponsor_zip_code'] = array(
	'#title' => t('Zip Code'),	
    '#type' => 'telfield',
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md','tel'),'placeholder' => t('zip code'),'id'=>'field_sponsor_zip_code', "maxlength"=>"8"),
  	'#default_value' => isset($saved_member_data->field_sponsor_zip_code['und']) ? $saved_member_data->field_sponsor_zip_code['und'][0]['value'] : '',
	);	
	
	$form['field_sponsor_phone_number'] = array(
	'#title' => t('Phone Number'),	
    '#type' => 'telfield',
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md','tel'),'placeholder' => t('Phone number'),'id'=>'field_sponsor_phone_number', "maxlength"=>"16"),
  	'#default_value' => isset($saved_member_data->field_sponsor_phone_number['und']) ? $saved_member_data->field_sponsor_phone_number['und'][0]['value'] : '',
	);
	
	$form['field_sponsor_email_address'] = array(
	'#title' => t('Email'),
    '#type' => 'emailfield',
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md','email'),'placeholder' => t('email address'),'id'=>'field_sponsor_email_address', "maxlength"=>"60"),
  	'#default_value' => isset($saved_member_data->field_sponsor_email_address['und']) ? $saved_member_data->field_sponsor_email_address['und'][0]['value'] : '',
	);
	
	$form['field_referral_organization'] = array(
	'#title' => t('Organization that requested you to register'),
    '#type' => 'select',
    '#options' => $related_organizer_option,
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id'=>'field_referral_organization',),
    '#default_value' => isset($saved_member_data->field_referral_organization['und']) ? $saved_member_data->field_referral_organization['und'][0]['target_id'] : '',
  	);
	
	$form['field_sponsor_membership_plan'] = array(
	'#title' => t('Sponsorship Registration : Category and Rate (Select one only)'),
    '#type' => 'radios',
    '#options' => $sponsor_membership_plan_option,
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),),
	'#default_value' => isset($saved_member_data->field_sponsor_membership_plan['und']) ? $saved_member_data->field_sponsor_membership_plan['und'][0]['target_id'] : '',
  	);
	
	$form['field_sponsor_hotel'] = array(
    '#title' => t('Hotel'),
    '#type' => 'select',
    '#options' => $hotels_option,
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'id'=>'field_sponsor_hotel', 'onchange' => 'javascript: update_total_price();'),
    '#default_value' => isset($saved_member_data->field_sponsor_hotel['und']) ? $saved_member_data->field_sponsor_hotel['und'][0]['nid'] : '',
    );
    
	/**Add On Members Fields**/
	
	if (empty($form_state['sponsor_badge_name'])) {
        $form_state['sponsor_badge_name'] = 10;
    }
    
	$form['field_sponsor_badge_name'] = array(
	  '#type' => 'container', 
	  '#title' => t('Sponsor Badge Names'),  
	  '#collapsible' => FALSE, 
	  '#tree' => TRUE,
	  '#prefix' => '<div class="col-sm-12 center-xs wow fadeInLeft animated"><div id="additional-members-wrapper" class="additional-members-wrapper"> <h5 class="form-heading" id="step1a-form-heading">Badge Names (please provide names for badges)</h5></div>',
   	  '#suffix' => '<div class="col-sm-12 center-xs wow fadeInLeft animated add_more_sponsor_badge_container"><div class="form-group"><button class="btn btn-sm btn-primary add_more_sponsor_badge_name_btn" id="add_more_sponsor_badge_name_btn" onclick="javascript:add_more_sponsor_badge();">Add More</button></div></div></div>',
	);
    $no_of_pre_fillled_sponsor_badge = 0;   
	for ($i = 1; $i <= $form_state['sponsor_badge_name']; $i++) {
        
    $sponsor_badge_obj = 'field_sponsor_badge_name_'.$i;
     
    if (isset($saved_member_data->{$sponsor_badge_obj}['und']) && $saved_member_data->{$sponsor_badge_obj}['und'][0]['value'] != ''){ $no_of_pre_fillled_sponsor_badge++; }     
    $form['field_sponsor_badge_name']['member'][$i] = array(
      '#type' => 'fieldset', 
      '#tree' => TRUE,
	  '#attributes' => array('class'=>array('col-sm-6')),
    );
    
	$form['field_sponsor_badge_name']['member'][$i]['field_sponsor_badge_name'] = array(
	'#title' => t('Individual Name'.' '.$i),	
    '#type' => 'textfield',
    
    '#attributes' => array('class'=> array('form-control input-sm mrgn-bttm-md'),'placeholder' => t('individual name '.$i),'id' => 'field_sponsor_badge_name_'.$i, "maxlength"=>"60"),
  	'#default_value' => (isset($saved_member_data->{$sponsor_badge_obj}['und']) && $saved_member_data->{$sponsor_badge_obj}['und'][0]['value'] != '' ) ? $saved_member_data->{$sponsor_badge_obj}['und'][0]['value'] : '',
	'#prefix' => '<div class="col-sm-12 center-xs wow fadeInLeft animated"><div class="form-group">',
	'#suffix' => '</div></div>',
	'#group' => 'field_sponsor_badge_name',
	);
	
    }

    $_SESSION['no_of_pre_fillled_sponsor_badge'] = $no_of_pre_fillled_sponsor_badge;
    
	$form['actions']['button'] = array(
    '#type' => 'button',
    '#value' => t('Modify Details'),
    '#attributes' => array(
		'class' => array('btn', 'btn-default'),
		'id' => 'backbtn4',
		'onclick' => 'javascript: reg_goto(\'step1\');',
		),
  	'#name' => 'backbtn4',
	'#submit' => array('core_overrides_membership_sponsor_saved_previous'),	
    );
	
	
	$form['actions']['submit1'] = array(
    '#type' => 'submit',
    '#value' => t('Save and Register Later'),
    '#attributes' => array(
		'class' => array('btn', 'btn-default'),
		'id' => 'add-member-btn',
		
		),
  	'#name' => 'submit-registration',
	'#submit' => array('core_overrides_membership_registration_sponsor_saved_form_submit'),
    );
	
	$form['actions']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Register & Pay'),
    '#attributes' => array(
		'class' => array('btn', 'btn-default'),
		'id' => 'register-pay-member-btn',
		
		),
  	'#name' => 'submit-registration-pay',
	'#submit' => array('core_overrides_membership_registration_sponsor_saved_form_pay_submit'),	
    );
	
	$form['field_subscription_price'] = array(
    '#type' => 'hidden',
    '#default_value' => '',
    '#attributes' => array(
		'id' => 'field_subscription_price',
		),
  	'#name' => 'field_subscription_price',
    );
	
	$form['#method'] = 'post';
	
	$form['#action'] = url('sponsor-registration/complete');
    
    /*$form_id = 'membership_registration';
    if (isset($form['#token']) && $form['#token'] !== FALSE) {
       $form['#token'] = FALSE;
     }
    else{
      $form['#token'] = $form_id;
     }
    
    $form ['form_token'] = array(
      '#id' => drupal_html_id('edit-' . $form_id . '-form-token'),
      '#type' => 'token',
      '#default_value' => drupal_get_token($form['#token']),
      '#parents' => array('form_token'),
    );  */
    
	$form['#validate'][] = 'core_overrides_membership_registration_sponsor_saved_form_validate';	
	$form['#submit'][] = 'core_overrides_membership_registration_sponsor_saved_form_submit';
    
    $form['#cache'] = FALSE; 
    $form['#no_cache'] = TRUE; 
    $form_state['cache'] = FALSE; 
    
	return $form;
}

function core_overrides_membership_registration_sponsor_saved_form_validate(&$form, &$form_state){
            
        
    //echo "<pre>"; print_r($form_state); echo "</pre>"; die(); 
    $field_sponsor_title = $form_state['input']['field_sponsor_title'];
    $field_sponsor_first_name = $form_state['input']['field_sponsor_first_name'];
    $field_sponsor_middle_name = $form_state['input']['field_sponsor_middle_name'];
    $field_sponsor_last_name = $form_state['input']['field_sponsor_last_name'];
    $field_sponsor_address_1 = $form_state['input']['field_sponsor_address_1'];
    $field_sponsor_address_2 = $form_state['input']['field_sponsor_address_2'];
    $field_sponsor_country = $form_state['input']['field_sponsor_country'];
    $field_sponsor_city = $form_state['input']['field_sponsor_city'];
    $field_sponsor_state = $form_state['input']['field_sponsor_state'];
    $field_sponsor_state_others = $form_state['input']['field_sponsor_state_others'];
    $field_sponsor_zip_code = $form_state['input']['field_sponsor_zip_code'];;
    $field_sponsor_phone_number = $form_state['input']['field_sponsor_phone_number'];
    $field_sponsor_email_address = $form_state['input']['field_sponsor_email_address'];
    $field_referral_organization = $form_state['input']['field_referral_organization'];
    $field_sponsor_membership_plan = $form_state['input']['field_sponsor_membership_plan'];
	$field_sponsor_hotel = $form_state['input']['field_sponsor_hotel'];
    
    $query = new EntityFieldQuery();
      
    $query->entityCondition('entity_type', 'node');
    $query->entityCondition('bundle', 'sponsor_registration');
    $query->propertyCondition('status', 1);
    $query->fieldCondition('field_sponsor_email_address', 'value', $field_sponsor_email_address , '=');
    $result = $query->execute();

    if($field_sponsor_title == ''){
        form_set_error('field_sponsor_title',t('Please select title'));
    }
    
    if($field_sponsor_first_name==''){
        form_set_error('field_sponsor_first_name',t('Please enter first name'));
    }
    
     if($field_sponsor_last_name==''){
        form_set_error('field_sponsor_last_name',t('Please enter last name'));
    }

    if($field_sponsor_address_1==''){
        form_set_error('field_sponsor_address_1',t('Please enter address 1'));
    }
    
    if($field_sponsor_country==''){
        form_set_error('field_sponsor_country',t('Please select country'));
    }
    
     if($field_sponsor_city==''){
        form_set_error('field_sponsor_city',t('Please enter city'));
    }
     
     if($field_sponsor_country =='US' && $field_sponsor_state == ''){
        form_set_error('field_sponsor_state',t('Please select state (US)'));
    }
     
     if($field_sponsor_country !='US' && $field_sponsor_state_others == ''){
        form_set_error('field_sponsor_state_others',t('Please enter state (Non-US)'));
    }
     
   if($field_sponsor_zip_code == ''){
        form_set_error('field_sponsor_zip_code',t('Please enter zip code'));
    }   
   
    if($field_sponsor_phone_number == ''){
        form_set_error('field_sponsor_phone_number',t('Please enter evening phone'));
    }
    
    if($field_sponsor_email_address==''){
        form_set_error('field_sponsor_email_address',t('Please enter email address'));
    }
    if($field_sponsor_email_address!='' && !valid_email_address($field_sponsor_email_address)){
        form_set_error('field_sponsor_email_address',t('Please enter valid email address'));
    }
    if($field_sponsor_email_address != $_SESSION['valid_sponsor_membership_email']){
        if($field_sponsor_email_address!='' && isset($result['node'])){
            form_set_error('field_sponsor_email_address',t('email has already been registered. Thank you.'));
        }
    }

	if($field_referral_organization == ''){
        form_set_error('field_referral_organization',t('Please select referral organization.'));
    }
	
	if($field_sponsor_membership_plan == ''){
        form_set_error('field_sponsor_membership_plan',t('Please select membership plan.'));
    }

	if($field_sponsor_hotel==''){
        form_set_error('field_sponsor_hotel',t('Please select hotel'));
    }
        
}

function core_overrides_membership_sponsor_saved_previous($form, &$form_state){

}

function core_overrides_membership_registration_sponsor_saved_form_pay_submit($form, &$form_state){

	global $base_url;
	
    $member_nid = isset($_SESSION['valid_sponsor_membership_nid']) ? $_SESSION['valid_sponsor_membership_nid'] : '';
    $membership_email = isset($_SESSION['valid_sponsor_membership_email']) ? $_SESSION['valid_sponsor_membership_email'] : '';
    $membership_token = isset($_SESSION['valid_sponsor_membership_token']) ? $_SESSION['valid_sponsor_membership_token'] : '';
    
    $saved_member_data = get_membership_data($member_nid);
    $_SESSION['valid_sponsor_membership_number'] = $saved_member_data->field_sponsor_membership_number['und'][0]['value'];
    
    if($saved_member_data){
	$field_sponsor_title = $form['field_sponsor_title']['#value'];	
	$field_sponsor_first_name = $form['field_sponsor_first_name']['#value'];
	$field_sponsor_middle_name = $form['field_sponsor_middle_name']['#value'];
	$field_sponsor_last_name = $form['field_sponsor_last_name']['#value'];
	$field_sponsor_country = $form['field_sponsor_country']['#value'];
	$field_sponsor_address_1 = $form['field_sponsor_address_1']['#value'];
	$field_sponsor_address_2 = $form['field_sponsor_address_2']['#value'];
    $field_sponsor_city = $form['field_sponsor_city']['#value'];
    $field_sponsor_state = $form['field_sponsor_state']['#value'];
    $field_sponsor_state_others = $form['field_sponsor_state_others']['#value'];
	$field_sponsor_zip_code = $form['field_sponsor_zip_code']['#value'];
    $field_sponsor_phone_number = $form['field_sponsor_phone_number']['#value'];
    $field_sponsor_email_address = $form['field_sponsor_email_address']['#value'];
	$field_referral_organization = $form['field_referral_organization']['#value'];
	$field_sponsor_membership_plan= $form['field_sponsor_membership_plan']['#value'];
	$field_sponsor_hotel = $form['field_sponsor_hotel']['#value'];

    $field_sponsor_payment_status = 'Processing';
    $field_sponsor_date_of_regis = date('Y-m-d',time());
    
	if($field_sponsor_membership_plan == 137){
		$field_sponsor_amount_paid = 25000.00; // Subscription Price.
	}
	
	if($field_sponsor_membership_plan == 136){
		$field_sponsor_amount_paid = 20000.00; // Subscription Price.
	}
	
	if($field_sponsor_membership_plan == 135){
		$field_sponsor_amount_paid = 10000.00; // Subscription Price.
	}
	
	if($field_sponsor_membership_plan == 134){
		$field_sponsor_amount_paid = 5000.00; // Subscription Price.
	}
	
	if($field_sponsor_membership_plan == 133){
		$field_sponsor_amount_paid = 3000.00; // Subscription Price.
	}
	

	
	$systemUser = user_load_by_name('system_user');	
	//echo $field_amount_paid.'<br>';
	//echo "<pre>"; print_r($form); echo "<pre>"; die();
	$node_register = node_load($member_nid);
	$node_register->uid = (isset($systemUser->uid) && !empty($systemUser->uid) ? $systemUser->uid : 1);
		
	
	$node_register->field_sponsor_title['und'][0]['value'] = $field_sponsor_title;	
	$node_register->field_sponsor_first_name['und'][0]['value']   = $field_sponsor_first_name;
	$node_register->field_sponsor_first_name['und'][0]['safe_value']   = $field_sponsor_first_name;
		
	$node_register->field_sponsor_middle_name['und'][0]['value']   = $field_sponsor_middle_name;
	$node_register->field_sponsor_middle_name['und'][0]['safe_value']   = $field_sponsor_middle_name;
	
	$node_register->field_sponsor_last_name['und'][0]['value']   = $field_sponsor_last_name;
	$node_register->field_sponsor_last_name['und'][0]['safe_value']   = $field_sponsor_last_name;
	
	$node_register->field_sponsor_country['und'][0]['iso2']   = $field_sponsor_country;
	
	$node_register->field_sponsor_address_1['und'][0]['value']   = $field_sponsor_address_1;
	$node_register->field_sponsor_address_1['und'][0]['safe_value']   = $field_sponsor_address_1;
	
	$node_register->field_sponsor_address_2['und'][0]['value']   = $field_sponsor_address_2;
	$node_register->field_sponsor_address_2['und'][0]['safe_value']   = $field_sponsor_address_2;   
	
	$node_register->field_sponsor_city['und'][0]['value']   = $field_sponsor_city;
	$node_register->field_sponsor_city['und'][0]['safe_value']   = $field_sponsor_city;
	
	$node_register->field_sponsor_state['und'][0]['value']   = (isset($field_sponsor_country) && $field_sponsor_country == 'US') ? $field_sponsor_state : '';
	
	$node_register->field_sponsor_state_others['und'][0]['value']   = (isset($field_sponsor_country) && $field_sponsor_country != 'US') ? $field_sponsor_state_others : '';
	$node_register->field_sponsor_state_others['und'][0]['safe_value']   = (isset($field_country) && $field_country != 'US') ? $field_sponsor_state_others : '';
	
	$node_register->field_sponsor_zip_code['und'][0]['value']   = $field_sponsor_zip_code;
	$node_register->field_sponsor_zip_code['und'][0]['safe_value']   = $field_sponsor_zip_code;
	
	$node_register->field_sponsor_phone_number['und'][0]['value']   = $field_sponsor_phone_number;
	$node_register->field_sponsor_phone_number['und'][0]['safe_value']   = $field_sponsor_phone_number;
	
	$node_register->field_sponsor_email_address['und'][0]['value']   = $field_sponsor_email_address;
	$node_register->field_sponsor_email_address['und'][0]['safe_value']   = $field_sponsor_email_address;

	if($field_referral_organization != ''){
		$node_register->field_referral_organization['und'][0]['target_id']   = $field_referral_organization;
	}
	if($field_sponsor_membership_plan != ''){
		$node_register->field_sponsor_membership_plan['und'][0]['target_id']   = $field_sponsor_membership_plan;
	}

	if($field_sponsor_hotel != ''){
		$node_register->field_sponsor_hotel['und'][0]['nid']   = $field_sponsor_hotel;
	}
	
	$node_register->field_sponsor_amount_paid['und'][0]['value']   = number_format($field_sponsor_amount_paid,2,'.','');
	$node_register->field_sponsor_amount_paid['und'][0]['safe_value']   = number_format($field_sponsor_amount_paid,2,'.','');
	
	$node_register->field_sponsor_date_of_regis['und'][0]['value']   = $field_sponsor_date_of_regis;
	$node_register->field_sponsor_date_of_regis['und'][0]['safe_value']   = $field_sponsor_date_of_regis;
	
	$node_register->field_sponsor_payment_status['und'][0]['value'] = 'Processing';
/***Additional Members Information***/
	if(count($form['field_sponsor_badge_name']['member']) > 0){
	$k = 1;
	foreach($form['field_sponsor_badge_name']['member'] as $member){
	if(isset($member['field_sponsor_badge_name']['#value'])){
		$variable_sponsor_badge_name_obj = 'field_sponsor_badge_name_'.$k; 

		if($member['field_sponsor_badge_name']['#value'] != ''){
		  $node_register->{$variable_sponsor_badge_name_obj}['und'][0]['value'] = $member['field_sponsor_badge_name']['#value'];
		  $node_register->{$variable_sponsor_badge_name_obj}['und'][0]['safe_value'] = $member['field_sponsor_badge_name']['#value'];
		}
        else{
        unset($node_register->{$variable_sponsor_badge_name_obj}['und'][0]);
        }
		$k++;
		}
    
	  }
	}
	/************************************/	
	
	$node_register->status = 1;
	$node_register->promote = 0;
	$node_register->comment = 0;
	//echo "<pre>"; print_r($node_register); echo "</pre>"; die();
	$result = node_save($node_register);
    $nid = $node_register->nid;

    drupal_set_message('Please wait - Processing Payment','status');
	drupal_goto('payment/process/sponsor',array('query'=>array('membership'=>$_SESSION['valid_sponsor_membership_number'])));
	}
}

function core_overrides_membership_registration_sponsor_saved_form_submit($form, &$form_state){

	global $base_url;
	//echo "<pre>"; print_r(node_load(144)); echo "</pre>"; die();
	
	$member_nid = isset($_SESSION['valid_sponsor_membership_nid']) ? $_SESSION['valid_sponsor_membership_nid'] : '';
    $membership_email = isset($_SESSION['valid_sponsor_membership_email']) ? $_SESSION['valid_sponsor_membership_email'] : '';
    $membership_token = isset($_SESSION['valid_sponsor_membership_token']) ? $_SESSION['valid_sponsor_membership_token'] : '';
    
    $saved_member_data = get_membership_data($member_nid);
    $_SESSION['valid_sponsor_membership_number'] = $saved_member_data->field_sponsor_membership_number['und'][0]['value'];
    
	if($saved_member_data){
	$field_sponsor_title = $form['field_sponsor_title']['#value'];   
    $field_sponsor_first_name = $form['field_sponsor_first_name']['#value'];
    $field_sponsor_middle_name = $form['field_sponsor_middle_name']['#value'];
    $field_sponsor_last_name = $form['field_sponsor_last_name']['#value'];
    $field_sponsor_country = $form['field_sponsor_country']['#value'];
    $field_sponsor_address_1 = $form['field_sponsor_address_1']['#value'];
    $field_sponsor_address_2 = $form['field_sponsor_address_2']['#value'];
    $field_sponsor_city = $form['field_sponsor_city']['#value'];
    $field_sponsor_state = $form['field_sponsor_state']['#value'];
    $field_sponsor_state_others = $form['field_sponsor_state_others']['#value'];
    $field_sponsor_zip_code = $form['field_sponsor_zip_code']['#value'];
    $field_sponsor_phone_number = $form['field_sponsor_phone_number']['#value'];
    $field_sponsor_email_address = $form['field_sponsor_email_address']['#value'];
    $field_referral_organization = $form['field_referral_organization']['#value'];
    $field_sponsor_membership_plan= $form['field_sponsor_membership_plan']['#value'];
    $field_sponsor_hotel = $form['field_sponsor_hotel']['#value'];
     
    $field_payment_status = 'Processing';
    $field_sponsor_date_of_regis = date('Y-m-d',time());
    if($field_sponsor_membership_plan == 137){
		$sponsor_amount_paid = 25000.00; // Subscription Price.
	}
	
	if($field_sponsor_membership_plan == 137){
		$field_sponsor_amount_paid = 25000.00; // Subscription Price.
	}
	
	if($field_sponsor_membership_plan == 136){
		$field_sponsor_amount_paid = 20000.00; // Subscription Price.
	}
	
	if($field_sponsor_membership_plan == 135){
		$field_sponsor_amount_paid = 10000.00; // Subscription Price.
	}
	
	if($field_sponsor_membership_plan == 134){
		$field_sponsor_amount_paid = 5000.00; // Subscription Price.
	}
	
	if($field_sponsor_membership_plan == 133){
		$field_sponsor_amount_paid = 3000.00; // Subscription Price.
	}

	
	$systemUser = user_load_by_name('system_user');	
	//echo $field_amount_paid.'<br>';
	//echo "<pre>"; print_r($form); echo "<pre>"; die();
	$node_register = node_load($member_nid);
	$node_register->uid = (isset($systemUser->uid) && !empty($systemUser->uid) ? $systemUser->uid : 1);
		
	
	$node_register->field_sponsor_title['und'][0]['value'] = $field_sponsor_title;  
    $node_register->field_sponsor_first_name['und'][0]['value']   = $field_sponsor_first_name;
    $node_register->field_sponsor_first_name['und'][0]['safe_value']   = $field_sponsor_first_name;
        
    $node_register->field_sponsor_middle_name['und'][0]['value']   = $field_sponsor_middle_name;
    $node_register->field_sponsor_middle_name['und'][0]['safe_value']   = $field_sponsor_middle_name;
    
    $node_register->field_sponsor_last_name['und'][0]['value']   = $field_sponsor_last_name;
    $node_register->field_sponsor_last_name['und'][0]['safe_value']   = $field_sponsor_last_name;
    
    $node_register->field_sponsor_country['und'][0]['iso2']   = $field_sponsor_country;
    
    $node_register->field_sponsor_address_1['und'][0]['value']   = $field_sponsor_address_1;
    $node_register->field_sponsor_address_1['und'][0]['safe_value']   = $field_sponsor_address_1;
    
    $node_register->field_sponsor_address_2['und'][0]['value']   = $field_sponsor_address_2;
    $node_register->field_sponsor_address_2['und'][0]['safe_value']   = $field_sponsor_address_2;   
    
    $node_register->field_sponsor_city['und'][0]['value']   = $field_sponsor_city;
    $node_register->field_sponsor_city['und'][0]['safe_value']   = $field_sponsor_city;
    
    $node_register->field_sponsor_state['und'][0]['value']   = (isset($field_sponsor_country) && $field_sponsor_country == 'US') ? $field_sponsor_state : '';
    
    $node_register->field_sponsor_state_others['und'][0]['value']   = (isset($field_sponsor_country) && $field_sponsor_country != 'US') ? $field_sponsor_state_others : '';
    $node_register->field_sponsor_state_others['und'][0]['safe_value']   = (isset($field_country) && $field_country != 'US') ? $field_sponsor_state_others : '';
    
    $node_register->field_sponsor_zip_code['und'][0]['value']   = $field_sponsor_zip_code;
    $node_register->field_sponsor_zip_code['und'][0]['safe_value']   = $field_sponsor_zip_code;
    
    $node_register->field_sponsor_phone_number['und'][0]['value']   = $field_sponsor_phone_number;
    $node_register->field_sponsor_phone_number['und'][0]['safe_value']   = $field_sponsor_phone_number;
    
    $node_register->field_sponsor_email_address['und'][0]['value']   = $field_sponsor_email_address;
    $node_register->field_sponsor_email_address['und'][0]['safe_value']   = $field_sponsor_email_address;

    if($field_referral_organization != ''){
        $node_register->field_referral_organization['und'][0]['target_id']   = $field_referral_organization;
    }
    if($field_sponsor_membership_plan != ''){
        $node_register->field_sponsor_membership_plan['und'][0]['target_id']   = $field_sponsor_membership_plan;
    }

    if($field_sponsor_hotel != ''){
        $node_register->field_sponsor_hotel['und'][0]['nid']   = $field_sponsor_hotel;
    }
    
    $node_register->field_sponsor_amount_paid['und'][0]['value']   = number_format($field_sponsor_amount_paid,2,'.','');
    $node_register->field_sponsor_amount_paid['und'][0]['safe_value']   = number_format($field_sponsor_amount_paid,2,'.','');
    
    $node_register->field_sponsor_date_of_regis['und'][0]['value']   = $field_sponsor_date_of_regis;
    $node_register->field_sponsor_date_of_regis['und'][0]['safe_value']   = $field_sponsor_date_of_regis;
    
    $node_register->field_sponsor_payment_status['und'][0]['value'] = 'Processing';
/***Additional Members Information***/
    if(count($form['field_sponsor_badge_name']['member']) > 0){
    $k = 1;
    foreach($form['field_sponsor_badge_name']['member'] as $member){
    if(isset($member['field_sponsor_badge_name']['#value'])){
        $variable_sponsor_badge_name_obj = 'field_sponsor_badge_name_'.$k; 

        if($member['field_sponsor_badge_name']['#value'] != ''){
          $node_register->{$variable_sponsor_badge_name_obj}['und'][0]['value'] = $member['field_sponsor_badge_name']['#value'];
          $node_register->{$variable_sponsor_badge_name_obj}['und'][0]['safe_value'] = $member['field_sponsor_badge_name']['#value'];
        }
        else{
        unset($node_register->{$variable_sponsor_badge_name_obj}['und'][0]);
        }
        $k++;
        }
     
      }
    }
    /************************************/  
	
	$node_register->status = 1;
	$node_register->promote = 0;
	$node_register->comment = 0;
	//echo "<pre>"; print_r($node_register); echo "</pre>"; die();
	$result = node_save($node_register);
    $nid = $node_register->nid;
	
	drupal_set_message('Information has been saved successfully. Please login using email address and login token to complete the payment process.','status');
	}
}

/****************************************************************/
 
/*
 * Creating Blocks Info using hook_block_info
 * */
/*function core_overrides_block_info() {
  $blocks[0] = array(
    'info' => t('Header Menu'),
  );
  $blocks[1] = array(
  	'info' => t('Social Menu Header'),
  );
  $blocks[2] = array(
  	'info' => t('Social Menu Footer'),
  );  
  $blocks[3] = array(
  	'info' => t('Newsletter'),
  ); 
  $blocks[4] = array(
  	'info' => t('Invest Page Header'),
  );
  $blocks[5] = array(
  	'info' => t('Invest Three Column Layout Column 1'),
  );
  $blocks[6] = array(
  	'info' => t('Home Page Below Slide'),
  ); 
  $blocks[7] = array(
  	'info' => t('Invest Three Column Layout Column 2'),
  );    
  $blocks[8] = array(
  	'info' => t('Culture Page Header'),
  );
  $blocks[9] = array(
  	'info' => t('Culture Three Column Layout Column 1'),
  );  
  $blocks[10] = array(
  	'info' => t('Culture Three Column Layout Column 2'),
  );   
  $blocks[11] = array(
  	'info' => t('Residents Page Header'),
  ); 
  $blocks[12] = array(
  	'info' => t('Residents Three Column Layout Column 1'),
  );  
  $blocks[13] = array(
  	'info' => t('Residents Three Column Layout Column 2'),
  );
  $blocks[14] = array(
  	'info' => t('Donegal Event List Navigation'),
  );
  $blocks[15] = array(
  	'info' => t('Quick Contact'),
  );  
  $blocks[16] = array(
  	'info' => t('Other Page Below Slide'),
  );  
  $blocks[17] = array(
  	'info' => t('Footer Slide Show'),
  );
  $blocks[18] = array(
  	'info' => t('Footer Text'),
  );
                       
  return $blocks;
} */

/*
 * Creating block view using hook_block_view
 * */

function core_overrides_block_view($delta='') {
/*  $block = array();
  switch ($delta) {
    case 0:
      $block['subject'] = t('<none>');
      $block['content'] = core_overrides_mainmenu_block_content();
      break;
	case 1:
	  $block['subject'] = t('<none>');
      $block['content'] = core_overrides_social_block_content();
	  break;
	case 2:
	  $block['subject'] = t('<none>');
      $block['content'] = core_overrides_social_footer_block_content();
	  break; 
	case 3:
	  $block['subject'] = t('<none>');
      $block['content'] = core_overrides_newsletter_block_content();
	  break;
	case 4:
	  $block['subject'] = t('<none>');
	  $block['content'] = core_overrides_header_invest_home_block_content();
	  break;	
	case 5:
	  $block['subject'] = t('<none>');
	  $block['content'] = core_overrides_invest_three_column_layout_column_1_content();
	  break;
	case 6:
	  $block['subject'] = t('<none>');
	  $block['content'] = core_overrides_below_content_home_page_block_content();
	  break;	  
	case 7:
	  $block['subject'] = t('<none>');
	  $block['content'] = core_overrides_invest_three_column_layout_column_2_content();
	  break;
	case 8:
	  $block['subject'] = t('<none>');
	  $block['content'] = core_overrides_header_culture_home_block_content();
	  break;  
	case 9:
	  $block['subject'] = t('<none>');
	  $block['content'] = core_overrides_culture_three_column_layout_column_1_content();
	  break;
	case 10:
	  $block['subject'] = t('<none>');
	  $block['content'] = core_overrides_culture_three_column_layout_column_2_content();
	  break;
	case 11:
	  $block['subject'] = t('<none>');
	  $block['content'] = core_overrides_header_residents_home_block_content();
	  break; 
	case 12:
	  $block['subject'] = t('<none>');
	  $block['content'] = core_overrides_residents_three_column_layout_column_1_content();
	  break;
	case 13:
	  $block['subject'] = t('<none>');
	  $block['content'] = core_overrides_residents_three_column_layout_column_2_content();
	  break;
	case 14:
	  $block['subject'] = t('<none>');
	  $block['content'] = core_overrides_donegal_event_list_navigation_content();
	  break;
	case 15:
	  $block['subject'] = t('<none>');
	  $block['content'] = core_overrides_quick_contact_content();
	  break;
	case 16:
	  $block['subject'] = t('<none>');
	  $block['content'] = core_overrides_below_content_other_page_block_content();
	  break;
	case 17:
	  $block['subject'] = t('<none>');
	  $block['content'] = core_overrides_footer_slide_show_block_content();
	  break;
	case 18:
      $block['subject'] = t('<none>');
	  $block['content'] = core_overrides_footer_text_block_content();
	  break;  		  	  	  		    	  	   	  	    	  	  	  	        	    
  }*/
  return $block;
}

/*
 * Block Contents used by hook_block_view
 * */

function core_overrides_mainmenu_block_content() {
  /*Here is where you generate the content of block*/
  
  //$menutree = menu_tree_all_data('main-menu');
  //echo "<pre>"; print_r($menutree); echo "</pre>"; die();
  
  //print drupal_render(menu_tree_output(menu_tree_all_data('main-menu')));
  
  //echo "<pre>"; print_r(menu_tree_output(menu_tree_all_data('main-menu'))); echo "</pre>"; die();
  //$menu_arr = menu_tree_output(menu_tree_all_data('main-menu'));
  //$output = core_overrides_process_menu_tree($menu_arr);
  
  return $output;
}

/*
 * Function to process menu in tree structure
 * 
*/
/*function core_overrides_process_menu_tree($menuarr){
  	
  	
  $activeClass = '';	
  $html = '';
  $html .= '<div class="navbar-collapse col-lg-6 collapse no-padding">';
  $html .= '<ul class="nav navbar-nav">';
  
  //echo "<pre>"; print_r($menuarr); echo "</pre>"; //die();
  
  $isFrontPage = drupal_is_front_page();
  $currentURL = current_path();
  
  //echo $currentURL; die();
  $nodeID = explode('/',$currentURL);
  $basicPageTypeParent = '';
  //print_r($nodeID); die();
  if(is_array($nodeID)){
	  if($nodeID[0]=='node'){
	  	if(array_key_exists('1', $nodeID)){
	  	$nodeID = $nodeID[1]; 
         //echo $nodeID; die();
	  	$basicPageTypeParent = getBasicPageParentType($nodeID);
		//echo $basicPageTypeParent;
		}
	 }
  }
  
  $homePage = '';
  if($isFrontPage){
  	$homePage = 'class ="active"';
  }
  //echo $currentURL;
  foreach($menuarr as $menu){
  		$menu_tree = '';
  	if(isset($menu[0])){
  		$menu_tree = 'menu_tree__main_menu';
  	}
  	if($menu!=1 && $menu_tree!='menu_tree__main_menu'){
		$hasChildMenu = 0;	
		if(is_array($menu['#below'])){	
		$hasChildMenu = count($menu['#below']);
		}
		$anchorTagAttr = '';
		$caratImg = '';
		if($hasChildMenu>0){
		$anchorTagAttr = 'class="dropdown-toggle" data-hover="dropdown"';		
		$caratImg = '<b class="caret"></b>';
		}  	
	  	//echo $menu['#href']."<br/>";
	  	//echo $currentURL."<br />";
		//echo $isFrontPage."<br />";
		$url_parent = url(drupal_get_path_alias($menu['#href']));
	    $target_window_parent = '';
	    if(url_is_external($url_parent)){
	    	$target_window_parent = ' target="_blank"';
	    }
		
		if($menu['#href'] == $currentURL){
			$activeClass = 'class="active"';
			//echo "Is Active Page";
			//echo "<br/>";		
		}
		
		/* Checking If Current Page is related to Menu */
		/*if(is_array($basicPageTypeParent)){
			if(in_array($menu['#title'],$basicPageTypeParent)){
				$activeClass = 'class="active"';
			}
		}*/
		/*Checking If Current Page is related to Menu */
	
	    /*if($hasChildMenu > 0){
	    	$activeClass = 'class="dropdown" data-hover="dropdown"';
			//echo "has drop down";	
			//echo "<br/>";	
	    }*/
	    
/*	    if($menu['#href'] == $currentURL && $hasChildMenu > 0){
	    	//echo "Hi";
			$activeClass = 'class="active dropdown"';
			//echo "has drop down and active";
			//echo "<br/>";	
	    }
	    $html .= '<li '.$homePage.$activeClass.'><a href="'.url(drupal_get_path_alias($menu['#href'])).'" '.$anchorTagAttr.$target_window_parent.'>'.$menu['#title'].$caratImg.'</a>';
		if($hasChildMenu > 0){
			$html .= '<ul class="dropdown-menu">';
			foreach($menu['#below'] as $menu_child){
				
				//echo $menu_child[0];
				$menu_tree_child = '';
				if(isset($menu_child[0])){
					$menu_tree_child = 'menu_tree__main_menu';
				}
				if($menu_child!=1 && $menu_tree_child!='menu_tree__main_menu'){
				$url_child = url(drupal_get_path_alias($menu_child['#href']));
			    $target_window_child = '';
			    if(url_is_external($url_child)){
			    	$target_window_child = ' target="_blank"';
			    }
				$html .= '<li><a href="'.url(drupal_get_path_alias($menu_child['#href'])).'" '.$target_window_child.'>'.$menu_child['#title'].'</a></li>';
				}
			}
			$html .= '</ul>';
		}
		$html .= '</li>';
		$homePage = '';
		$activeClass = '';
		}  
  }
    
  $html .= '</ul>'; 
  $html .= '</div>';
  	
  //echo $html; die();
  //die();
  return $html;
	
}*/
 
/*function core_overrides_social_block_content(){
		
	$variables=array();
    return theme('header_social', $variables);	
} 

function core_overrides_social_footer_block_content(){
	$html = '
	<div class="col-lg-12 pull-right no-padding">
	<h3>Get in tuch with</h3>
	<ul class="sign-social">
            	<li><a class="fa fa-facebook" href="'.variable_get('facebooklink', '#').'"></a></li>
                <li><a class="fa fa-twitter" href="'.variable_get('twitterlink', '#').'"></a></li>
                <li><a class="fa fa-linkedin" href="'.variable_get('linkedinlink', '#').'"></a></li>
            </ul>
	</div>';
	
	return $html;
}

function core_overrides_newsletter_block_content(){
     
     $ajaxform = drupal_get_form('core_overrides_newsletter_ajax_form');	 
	 
	 $html = '';
	 $html .= '<div class="col-lg-8 col-md-7 col-sm-6 pull-right no-padding" id="newsletter_form_wrapper">
               	<h2>'.t('Get Our NewsLetter').'</h2>';
	 $html .= drupal_render($ajaxform);	 
	 $html .= '</div>';			
	 	
    
	return $html; 				
} 
 
 
function core_overrides_header_invest_home_block_content(){
	    $variables=array();
        return theme('header_invest_home', $variables);
}

function core_overrides_invest_three_column_layout_column_1_content(){
	    $variables=array();
        return theme('invest_three_column_layout_column_1', $variables);
}

function core_overrides_invest_three_column_layout_column_2_content(){
	    $variables=array();
        return theme('invest_three_column_layout_column_2', $variables);
}

 
function core_overrides_below_content_home_page_block_content(){
	    $variables=array();
        return theme('below_content_home_page', $variables);	
} 

function core_overrides_header_culture_home_block_content(){
	    $variables=array();
        return theme('header_culture_home', $variables);
}

function core_overrides_culture_three_column_layout_column_1_content(){
	    $variables=array();
        return theme('culture_three_column_layout_column_1', $variables);
}

function core_overrides_culture_three_column_layout_column_2_content(){
	    $variables=array();
        return theme('culture_three_column_layout_column_2', $variables);
}

function core_overrides_header_residents_home_block_content(){
	    $variables=array();
        return theme('header_residents_home', $variables);
}

function core_overrides_residents_three_column_layout_column_1_content(){
	    $variables=array();
        return theme('residents_three_column_layout_column_1', $variables);
}

function core_overrides_residents_three_column_layout_column_2_content(){
	    $variables=array();
        return theme('residents_three_column_layout_column_2', $variables);
}

function core_overrides_donegal_event_list_navigation_content(){
	    $variables=array();
        return theme('donegal_event_address_navigation', $variables);	
}

function core_overrides_quick_contact_content(){
	    $quickcontact = core_overrides_load_node_by_url_alias('quick-contact');
		//echo "<pre>"; print_r($quickcontact); echo "</pre>"; die();
		return $quickcontact->body['und'][0]['value'];
		
}

function core_overrides_below_content_other_page_block_content(){
	    $variables=array();
        return theme('below_slide_content_other_page', $variables);	
} 

function core_overrides_footer_slide_show_block_content(){
	$variables=array();
	return theme('footer_slide_show_block',$variables);
}
function core_overrides_footer_text_block_content(){
	$variables=array();
	return theme('footer_text_block',$variables);
}*/
/*
 * Core Overrides Configuration Section For Social Networks
 * 
 */ 
 
function core_overrides_social_form(){
	
$form = array();
$form['facebooklink'] = array(
    '#type' => 'textfield',
    '#title' => t('Facebook.Com Link'),
    '#default_value' => variable_get('facebooklink', '#'),
    '#description' => t("Link to Facebook.Com page. Example : http://example.com"),
    '#required' => TRUE,
  );
$form['twitterlink'] = array(
    '#type' => 'textfield',
    '#title' => t('Twitter.Com Link'),
    '#default_value' => variable_get('twitterlink', '#'),
    '#description' => t("Link to Twitter.Com page. Example : http://example.com"),
    '#required' => TRUE,
  );  
$form['youtubelink'] = array(
    '#type' => 'textfield',
    '#title' => t('YouTube.Com Link'),
    '#default_value' => variable_get('youtubelink', '#'),
    '#description' => t("Link to YouTube.Com page. Example : http://example.com"),
    '#required' => TRUE,
  );  
return system_settings_form($form);
} 


/*Core Overrides Validating SOcial Networks Admin Form*/

function core_overrides_social_form_validate($form, &$form_state){
	if($form['facebooklink']['#value']!='#' && !valid_url($form['facebooklink']['#value'],TRUE)) { form_set_error('facebooklink', t('Please enter valid URL for Facebook')); }	
	if($form['twitterlink']['#value']!='#' && !valid_url($form['twitterlink']['#value'],TRUE)) {  form_set_error('twitterlink', t('Please enter valid URL for Twitter')); }	
	if($form['youtubelink']['#value']!='#' && !valid_url($form['youtubelink']['#value'],TRUE)) { form_set_error('youtubelink', t('Please enter valid URL for YouTube')); }	
		
	//echo "<pre>"; print_r($form); echo "<pre>"; die();
}

/*
 * Core Overrides Configuration Section For Paypal Account
 * */ 
 
function core_overrides_paypal_settings_form(){
	
$form = array();
$form['paypal_email_address'] = array(
    '#type' => 'textfield',
    '#title' => t('Paypal Email Address'),
    '#default_value' => variable_get('paypal_email_address', 'pskswebservices@gmail.com'),
    '#description' => t("Paypal Email Address. This is the account where money will be deposited."),
    '#required' => TRUE,
  );
  $form['paypal_email_address_sandbox'] = array(
    '#type' => 'textfield',
    '#title' => t('Paypal Email Address (Sandbox)'),
    '#default_value' => variable_get('paypal_email_address_sandbox', 'info1@pskswebservices.com'),
    '#description' => t("Paypal Email Address for Testing. This is the account where money will be deposited during Sandbox Mode."),
    '#required' => TRUE,
  );
  $form['paypal_mode'] = array(
    '#title' => t('Paypal Mode'),
    '#type' => 'select',
    '#options' => array('sandbox'=>t('Sandbox'),'live'=>t('Live')),
    '#default_value' => variable_get('paypal_mode', 'sandbox'),
    '#description' => t("This is the mode of Paypal Account. Set it to \"Sandbox\" for testing and \"Live\" for production"),
    '#required' => TRUE,
  );
return system_settings_form($form);
} 




/**
* This function is called the "form builder". It builds the form.
* Notice, it takes one argument, the $form_state
*/

/*function core_overrides_newsletter_ajax_form($form, &$form_state){
	//echo "<pre>"; print_r($form); echo "</pre>";
	$form["wrapper"] = array("#markup" => '<div id="newsletter-ajax"></div>');
	$form['#attributes']['class'][] = 'newsletter';
	
	$form['field_newsletter_fullname'] = array(
	'#type' => 'textfield',
	'#attributes' => array(
		'class' => array('input-sm'),
		'placeholder'=> t('Full Name'),
		),
	);
	
	$form['field_newsletter_email'] = array(
	'#type' => 'textfield',
	'#attributes' => array(
		'class' => array('input-sm'),
		'placeholder'=> t('Email Address'),
		), 		
	);
    $form['submit'] = array(
    '#prefix' => '<div class="col-lg-12 no-padding">',
    '#type' => 'submit',
    '#ajax' => array(
      'callback' => 'core_overrides_newsletter_ajax_callback',
      'wrapper' => 'newsletter_form_wrapper',
    ),
    '#value' => t('Submit'),
    '#attributes' => array(
		'class' => array('btn','btn-danger'),
		),
    );

	$form['reset'] = array(
    '#type' => 'submit',
    '#value' => t('Reset'),
    '#attributes' => array(
		'class' => array('btn','btn-block'),
		'onclick' => array('javascript:reset();'),
		),
	'#suffix' => '</div>',	
    '#ajax' => array(
      'callback' => 'core_overrides_newsletter_ajax_form_reset',
      'wrapper' => 'newsletter_form_wrapper',
     )
	);	
	
	return $form;
}

function core_overrides_newsletter_ajax_form_reset($form, &$form_state){
    $form_state['input']['field_newsletter_fullname'] = '';
    $form_state['input']['field_newsletter_email'] = '';
	$rebuild_form = drupal_build_form('core_overrides_newsletter_ajax_form', $form_state); 
	$commands = array();
	$form_state['input']['field_newsletter_fullname'] = '';
    $form_state['input']['field_newsletter_email'] = '';		
	$rebuild_form = drupal_build_form('core_overrides_newsletter_ajax_form', $form_state); 
	$commands[] = ajax_command_replace('#core-overrides-newsletter-ajax-form', drupal_render($rebuild_form));
	$commands[] = ajax_command_replace('#newsletter-ajax', '<div id="newsletter-ajax"></div>');	
	return array('#type'=>'ajax', '#commands'=>$commands);
}*/

/*
 * Implementing hook_form_validate
*/

/*function core_overrides_newsletter_ajax_form_validate($form, &$form_state){
    //echo "<pre>"; print_r($form_state); echo "</pre>"; die();		
	
	if($form_state['input']['field_newsletter_fullname']==''){
		form_set_error('field_newsletter_fullname',t('Please enter full name'));
	}
	if($form_state['input']['field_newsletter_email']==''){
		form_set_error('field_newsletter_email',t('Please enter email address'));
	}
	if($form_state['input']['field_newsletter_email']!='' && !valid_email_address($form_state['input']['field_newsletter_email'])){
		form_set_error('field_newsletter_email',t('Please enter valid email address'));
	}
	
}*/

/*
 * Newsletter ajax form hook call back function 
*/

/*function core_overrides_newsletter_ajax_callback($form, &$form_state){
	if($form_state['input']['field_newsletter_fullname']==''){
		form_set_error('field_newsletter_fullname',t('Please enter full name'));
	}
	if($form_state['input']['field_newsletter_email']==''){
		form_set_error('field_newsletter_email',t('Please enter email address'));
	}
	if($form_state['input']['field_newsletter_email']!='' && !valid_email_address($form_state['input']['field_newsletter_email'])){
		form_set_error('field_newsletter_email',t('Please enter valid email address'));
	}
	
	$query = new EntityFieldQuery();
      
    $query->entityCondition('entity_type', 'node');
    $query->entityCondition('bundle', 'donegal_newsletter_subcribers');
	$query->propertyCondition('status', 1);
	$query->fieldCondition('field_subscriber_email', 'value', $form_state['input']['field_newsletter_email'] , '=');
	$result = $query->execute();
	
	if($result['node']){
		form_set_error('field_newsletter_email',t('Email Address Already exists.'));
		//echo "Already exists";
	}

	//echo "<pre>"; print_r($result); echo "</pre>"; die();
	
	if(form_get_errors()){
		//echo "Hi "; die();
		$messages = theme('status_messages');
		$commands = array();
		$commands[] = ajax_command_replace('#newsletter-ajax', '<div id="newsletter-ajax">'.$messages.'</div>');
		return array('#type'=>'ajax', '#commands'=>$commands);
	}
	else{
		//echo "Hi "; die();
		
		//echo "<pre>"; print_r($form); echo "</pre>"; die();
		//$node = node_load(26);
		//echo "<pre>"; print_r($node); echo "</pre>"; die();
		$systemUser = user_load_by_name('system');	
		$subscriber_full_name = $form_state['input']['field_newsletter_fullname']; 
		$subscriber_email = $form_state['input']['field_newsletter_email'];
		$subscriber_status = 1;
		
		$node = new StdClass();
		$node->type = 'donegal_newsletter_subcribers';
		node_object_prepare($node);
		
		$node->language = LANGUAGE_NONE;
		$node->uid = (isset($systemUser->uid) && !empty($systemUser->uid) ? $systemUser->uid : 1);
		$node->promote = 0;
		$node->comment = 0;
		
		$node->title = 'Newsletter Subscribers - '.$subscriber_full_name;    
		
		$node->field_subcribers_name['und'][0]['value']   = $subscriber_full_name;
		$node->field_subcribers_name['und'][0]['safe_value']   = $subscriber_full_name;
		
		$node->field_subscriber_email['und'][0]['value']   = $subscriber_email;
		$node->field_subscriber_email['und'][0]['safe_value']   = $subscriber_email;
		
		$node->field_subscriber_status['und'][0]['value'] = $subscriber_status;
		
		node_save($node);
		
	    $from = $systemUser->mail;
		$to = variable_get('site_mail', 'example@nabc2017.com');
		$subject = 'Donegal Notification : You have a new subscriber for Newsletter - '.$subscriber_full_name;
		$body    = '<table cellpadding="0" cellspacing="0">
		<tr><td align="left"><b>Full Name</b></td><td align="left">'.$subscriber_full_name.'</td></tr>
		<tr><td align="left"><b>Email Address</b></td><td align="left">'.$subscriber_email.'</td></tr>
		</table>';
		//echo $from.'<br/>';
		//echo $to.'<br/>';
		//echo $subject.'<br/>';
		//echo $message.'<br/>';
		//echo $body.'<br/>';
		//die();
		if(core_overrides_mail($from,$to,$subject,$body)){
	      //drupal_set_message('Message sent successfully. Our representative will get back to you shortly.','status');		
		}
		else{
			drupal_set_message('Error Unable to send Message. Try again.','error');	
		}		
		
		$form_state['rebuild'] = TRUE;
	    $form_state['input']['field_newsletter_fullname'] = '';
        $form_state['input']['field_newsletter_email'] = '';
		
		drupal_set_message("Thank you for subscribing.");
		$messages = theme('status_messages');
		$commands = array();
		$rebuild_form = drupal_build_form('core_overrides_newsletter_ajax_form', $form_state); 
		$commands[] = ajax_command_replace('#core-overrides-newsletter-ajax-form', drupal_render($rebuild_form));
		$commands[] = ajax_command_replace('#newsletter-ajax', '<div id="newsletter-ajax">'.$messages.'</div>');
		return array('#type'=>'ajax', '#commands'=>$commands);
	}
} */

/*function to get Homepage Below Slide Icon Data Starts*/
/*function core_overrides_get_homepage_slide_icon_info_by_url_alias($urlAlias){
  	$nodeinfo = drupal_lookup_path('source',$urlAlias);
	$result = false;
	if($nodeinfo){
		$nodeinfo = explode('/',$nodeinfo);
		
		$nid = $nodeinfo[1];
		
		$node = node_load($nid);
		
		$result = array();
		$result['text'] = $node->body['und'][0]['summary'];
		if(isset($node->field_basic_page_read_more_link['und'])){
		 $result['url'] = $node->field_basic_page_read_more_link['und'][0]['value'];
		}
		else{
		$result['url'] = url($urlAlias);
		}
		//echo "<pre>"; print_r($node); echo "</pre>"; die();
		//echo "<pre>"; print_r($result); echo "</pre>"; die();
	}
	return $result;
}*/
/*function to get Homepage Below Slide Icon Data Ends*/


/*Implement hook_permission*/

function core_overrides_permission(){
	return array(
    'administer' => array(
    'title' => t('Manage Theme Configurations'),
    'description' => t('Managing different configurations like social settings etc.'),
    ),
  );
}

/*
 * Implementing Hook_theme
 * */
function core_overrides_theme(){
	$arr = array();	
	//echo drupal_get_path('theme', 'impulse').'/templates/page--security_gift'; die();
	$arr['member_login_form'] = array(
          'variables' => array(),
          'template' => 'node--member-login',
          'path' => drupal_get_path('theme', 'nabc2017').'/templates/',
        );
	$arr['sponsor_member_login_form'] = array(
          'variables' => array(),
          'template' => 'node--sponsor-login',
          'path' => drupal_get_path('theme', 'nabc2017').'/templates/',
        );	
		
	/*$arr['below_content_home_page'] = array(
          'variables' => array(),
          'template' => 'block--front--below--slide',
          'path' => drupal_get_path('theme', 'donegal').'/templates/',
        );	
	$arr['invest_three_column_layout_column_1'] = array(
          'variables' => array(),
          'template' => 'block--invest--three--column--col1',
          'path' => drupal_get_path('theme', 'donegal').'/templates/',
        );						
	$arr['invest_three_column_layout_column_2'] = array(
          'variables' => array(),
          'template' => 'block--invest--three--column--col2',
          'path' => drupal_get_path('theme', 'donegal').'/templates/',
        );
	$arr['header_culture_home'] = array(
          'variables' => array(),
          'template' => 'block--culture--home--header',
          'path' => drupal_get_path('theme', 'donegal').'/templates/',
        );
	$arr['header_social'] = array(
          'variables' => array(),
          'template' => 'block--header--social',
          'path' => drupal_get_path('theme', 'donegal').'/templates/',
        );	
	$arr['culture_three_column_layout_column_1'] = array(
          'variables' => array(),
          'template' => 'block--culture--three--column--col1',
          'path' => drupal_get_path('theme', 'donegal').'/templates/',
        );
	$arr['culture_three_column_layout_column_2'] = array(
          'variables' => array(),
          'template' => 'block--culture--three--column--col2',
          'path' => drupal_get_path('theme', 'donegal').'/templates/',
        );
	$arr['cms-map']	= array(
          'variables' => array(),
          'template' => 'node--cms--map',
          'path' => drupal_get_path('theme', 'donegal').'/templates/',
        );
	$arr['header_residents_home'] = array(
          'variables' => array(),
          'template' => 'block--residents--home--header',
          'path' => drupal_get_path('theme', 'donegal').'/templates/',
        );
	$arr['residents_three_column_layout_column_1'] = array(
          'variables' => array(),
          'template' => 'block--residents--three--column--col1',
          'path' => drupal_get_path('theme', 'donegal').'/templates/',
        );
	$arr['residents_three_column_layout_column_2'] = array(
          'variables' => array(),
          'template' => 'block--residents--three--column--col2',
          'path' => drupal_get_path('theme', 'donegal').'/templates/',
        );	
	$arr['donegal_event_address_navigation'] = array(
          'variables' => array(),
          'template' => 'block--events-list-navigation',
          'path' => drupal_get_path('theme', 'donegal').'/templates/',
        );	
	$arr['below_slide_content_other_page'] = array(
          'variables' => array(),
          'template' => 'block--other--page--below--slide',
          'path' => drupal_get_path('theme', 'donegal').'/templates/',
        );
	$arr['footer_slide_show_block'] = array(
          'variables' => array(),
          'template' => 'block--footer_slide',
          'path' => drupal_get_path('theme', 'donegal').'/templates/',
        );
	$arr['footer_text_block'] = array(
          'variables' => array(),
          'template' => 'block--footer_text',
          'path' => drupal_get_path('theme', 'donegal').'/templates/',
        );*/
																		
	return	$arr;
}

/*function to load Node Using URL Alias Starts*/
function core_overrides_load_node_by_url_alias($urlAlias){
  	$nodeinfo = drupal_lookup_path('source',$urlAlias);
	$result = false;
	if($nodeinfo){
		$nodeinfo = explode('/',$nodeinfo);
		
		$nid = $nodeinfo[1];
		
		$node = node_load($nid);
		
		$result = $node;
		//echo "<pre>"; print_r($result); echo "</pre>"; die();
	}
	return $result;
}
/*function to load Node Using URL Alias Ends*/

/*Implements hook_preprocess_page Starts*/
function core_overrides_preprocess_page(&$variables){
	$arg1 = arg(0);
	$arg2 = arg(1);
    /*if($arg1 == 'cms' && $arg2 == 'map'){
    	drupal_add_js('https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false','external');
		drupal_add_js(drupal_get_path('theme','donegal').'/js/googlemap.js');
    }*/
}
/*Implements hook_preprocess_page Ends*/

/*Implementing hook_form_form_id_alter for node search form*/
/*function core_overrides_form_search_form_alter(&$form, &$form_state, $form_id) {
  if (isset($form['module']) && $form['module']['#value'] == 'node') {
     //echo "<pre>"; print_r($form); echo "</pre>";
	 $form['#attributes']['class'] = array('input-lg-search');
	 $form['basic']['submit']['#suffix'] = '<i class="fa fa-search" onclick="$(\'#'.str_replace('_','-',$form_id).'\').submit();"></i>';
	 $form['basic']['submit']['#value'] = '';	
	 $form['basic']['submit']['#attributes']['class'] = array('btn','btn-danger','btnsearch'); 
  }
}*/

/*Contact Us Form*/
function core_overrides_contact_us_form(){
	$form = array();
	
	$form['#method'] = 'post';
	
	$form['#action'] = url('contact-us');
	$form['#validate'][] = 'core_overrides_contact_us_form_validate';
	
	$form['contact-us-name'] = array(
	'#size' => 60, 
	'#maxlength' => 128, 
	'#required' => TRUE,
	'#type' => 'textfield',
	'#attributes' => array(
		'class' => array('form-control'),
		'placeholder'=> t('Enter Name'),
		'required' => 'TRUE'
		),
	);
	$form['contact-us-email'] = array(
	'#size' => 60, 
	'#maxlength' => 128, 
	'#required' => TRUE,
	'#type' => 'textfield',
	'#attributes' => array(
		'class' => array('form-control','email'),
		'placeholder'=> t('Enter Email Address'),
		'required' => 'TRUE'
		),
	);
	$form['contact-us-subject'] = array(
	'#size' => 60, 
	'#maxlength' => 128, 
	'#required' => TRUE,
	'#type' => 'textfield',
	'#attributes' => array(
		'class' => array('form-control'),
		'placeholder'=> t('Enter Subject'),
		'required' => 'TRUE'
		),
	);
	$form['contact-us-message'] = array(
	'#required' => TRUE,
	'#type' => 'textarea',
	'#attributes' => array(
		'class' => array('form-control'),
		'placeholder'=> t('Enter Message'),
		'required' => 'TRUE'
		),
	'#resizable' => FALSE,
	'#cols' => 60, 
    '#rows' => 5,	
	);	
	
	$form['actions']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit'),
    '#attributes' => array(
		'class' => array('btn', 'btn-primary', 'float-right'),
		),
	'#submit' => array('core_overrides_contact_us_form_submit'),	
  	);
	return $form;
	
}

function core_overrides_contact_us_form_validate($form, &$form_state) {
  	
  //echo "In form Validate";	
  //echo "<pre>"; print_r($form); echo "</pre>";
  //die();
  if ($form['contact-us-name']['#value'] == '') {

    form_set_error('contact-us-name', t('Please enter name.'));

  }
  if ($form['contact-us-email']['#value'] == '') {

    form_set_error('contact-us-email', t('Please enter email address.'));

  }
  if($form['contact-us-email']['#value'] != '' && !valid_email_address($form['contact-us-email']['#value'])){
  	form_set_error('contact-us-email', t('Please enter valid email address.'));
  }  
  if ($form['contact-us-subject']['#value'] == '') {

    form_set_error('contact-us-subject', t('Please enter subject.'));

  }
  if ($form['contact-us-message']['#value'] == '') {

    form_set_error('contact-us-message', t('Please enter message.'));
  }
  if ($form['contact-us-message']['#value'] != '' && drupal_strlen($form['contact-us-message']['#value']) < 10) {

    form_set_error('contact-us-message', t('Please enter message with minimum 10 Characters.'));
  }    
} 

function core_overrides_contact_us_form_submit($form, &$form_state){
	//echo "In form Submit";
	//echo "<pre>"; print_r($form); echo "</pre>";
	//die();
	$from = $form['contact-us-email']['#value'];
	$to = variable_get('site_mail', 'registrations@nabc2017.com');
	$subject = 'Donegal : New Enquiry Received';
	$message = $form['contact-us-message']['#value'];
	$body    = '<table cellpadding="0" cellspacing="0">
	<tr><td align="left"><b>Name</b></td><td align="left">'.$form['contact-us-name']['#value'].'</td></tr>
	<tr><td align="left"><b>Email</b></td><td align="left">'.$form['contact-us-email']['#value'].'</td></tr>
	<tr><td align="left"><b>Subject</b></td><td align="left">'.$form['contact-us-subject']['#value'].'</td></tr>
	<tr><td align="left" colspan="2"><b>Message</b></td></tr>
	<tr><td align="left" colspan="2">'.$form['contact-us-message']['#value'].'</td></tr>	
	</table>';
	//echo $from.'<br/>';
	//echo $to.'<br/>';
	//echo $subject.'<br/>';
	//echo $message.'<br/>';
	//echo $body.'<br/>';
	//die();
	if(core_overrides_mail($from,$to,$subject,$body)){
      drupal_set_message(t('Message sent successfully. Our representative will get back to you shortly.'),'status');		
	}
	else{
		drupal_set_message(t('Error Unable to send Message. Try again.'),'error');	
	}
}
/*Contact Us Form*/


function core_overrides_mail($from,$to,$subject,$body){
	
$module_name = 'core_overrides';
$mail_token = 'NABC2017-'.time();


$headers = array(
    'MIME-Version' => '1.0',
    'Content-Type' => 'text/html; charset=UTF-8;',
    'Content-Transfer-Encoding' => '8Bit',
    'X-Mailer' => 'Drupal',
    'From' => $from,
    'Sender' => $from,
    'Return-Path' => $from,
  );

$message = array(
  'id' => $module_name . '_' . $mail_token,
  'to' => $to,
  'subject' => $subject,
  'body' => $body,
  'headers' => $headers,
);

$system = drupal_mail_system($module_name, $mail_token);
// The format function must be called before calling the mail function. 
//$message = $system->format($message);
if ($system->mail($message)) {
  return TRUE;
}
else {
  return FALSE;
 }
}

function core_overrides_form_user_login_alter(&$form, &$form_state, $form_id){
	
	$form['#submit'][] = 'core_overrides_user_login_submit';
	//echo "<pre>"; print_r($form); echo "</pre>"; die();
}

function core_overrides_user_login_submit(&$form,&$form_state){
	drupal_goto('admin/index');
}

function core_overrides_views_query_alter(&$view, &$query) {
	global $user;
	global $theme;
	//echo $theme; die();
	/*if($view->name == 'donegal_events_list' && $view->current_display == 'block'){
		//echo "<pre>"; print_r($view->args); echo "</pre>"; die();	
		//echo "<pre>"; print_r($view->query); echo "</pre>"; die();
		$currentMonth = date('m');
		$currentYear = date('Y');
		$currentTime = $currentYear.'-'.$currentMonth.'-01 00:00:00';
		
		$join = new views_join();
		$join->table = 'field_data_field_donegal_events_month_year';
        $join->field = 'entity_id';
        $join->left_table = 'node';
        $join->left_field = 'nid';
        $join->type = 'LEFT';
        
		$group = 0;
		
        $query->add_relationship('field_data_field_donegal_events_month_year', $join, 'node', null);
        
		$query->add_where($group,'field_data_field_donegal_events_month_year.entity_type', 'node', '=');
		$query->add_where($group,'field_data_field_donegal_events_month_year.deleted','0','=');
		$query->add_where($group,'field_data_field_donegal_events_month_year.field_donegal_events_month_year_value', $currentTime, '=');
	 }

     if($view->name == 'donegal_events_list' && $view->current_display == 'donegal_events_list_page'){
		//echo "<pre>"; print_r($view->args); echo "</pre>"; die();	
		//echo "<pre>"; print_r($view->query); echo "</pre>"; die();
		$reqDate = arg(1);
		$reqDate = explode('-',$reqDate); 
		if(is_array($reqDate) && count($reqDate)>1){
			$currentMonth = $reqDate[1];
			$currentYear = $reqDate[0];
			$currentTime = $currentYear.'-'.$currentMonth.'-01 00:00:00';
			
			$join = new views_join();
			$join->table = 'field_data_field_donegal_events_month_year';
	        $join->field = 'entity_id';
	        $join->left_table = 'node';
	        $join->left_field = 'nid';
	        $join->type = 'LEFT';
	        
			$group = 0;
			
	        $query->add_relationship('field_data_field_donegal_events_month_year', $join, 'node', null);
	        
			$query->add_where($group,'field_data_field_donegal_events_month_year.entity_type', 'node', '=');
			$query->add_where($group,'field_data_field_donegal_events_month_year.deleted','0','=');
			$query->add_where($group,'field_data_field_donegal_events_month_year.field_donegal_events_month_year_value', $currentTime, '=');
	 	}
	 } 
	 if($view->name == 'did_you_know' && $view->current_display == 'block'){
		//echo "<pre>"; print_r($view->args); echo "</pre>"; die();	
		//echo "<pre>"; print_r($view->query); echo "</pre>"; die();
		$timezone = date_default_timezone(FALSE);
		//echo "<pre>"; print_r($timezone); echo "</pre>"; die();	
		$todayDate = format_date(time(), 'custom', 'Y-m-d H:i:s', $timezone);
		$todayDate = $todayDate;
		
		$join = new views_join();
		$join->table = 'field_data_field_did_you_know_time';
	    $join->field = 'entity_id';
	    $join->left_table = 'node';
	    $join->left_field = 'nid';
	    $join->type = 'LEFT';
	        
		$group = 0;
			
	    $query->add_relationship('field_data_field_did_you_know_time', $join, 'node', null);
		$group = 0;
		
		$query->add_where($group,'field_data_field_did_you_know_time.field_did_you_know_time_value', $todayDate , '<=');
		$query->add_where($group,'field_data_field_did_you_know_time.field_did_you_know_time_value2', $todayDate , '>=');
		//$query->add_orderby('rand');
		
	}    */
}

function core_overrides_form_register_node_form_alter(&$form, &$form_state, $form_id){
	//echo "<pre>"; print_r($form); echo "</pre>"; die();
}

function core_overrides_form_alter(&$form, &$form_state, $form_id){
	

global $user;
if($form_id == 'user_profile_form'){
	if(!in_array('administrator',$user->roles) && !user_access('administer')){
		 $adminArrayKey = array_search('administrator',$form['account']['roles']['#options']);
		 if($form['#user']->uid == 1 && $form['#user']->name == 'administrator'){
			 $form['account']['name']['#disabled'] = 1;
			 $form['account']['mail']['#disabled'] = 1;
			 $form['account']['pass']['#disabled'] = 1;
			 $form['account']['status']['#disabled'] = 1;
			 
			 $form['account']['roles'][$adminArrayKey] = array(
				'#type' => 'checkbox',
				'#title' => 'administrator',
				'#default_value' => $adminArrayKey,
				'#disabled' => 1
				);
		 }	
		 else{
			unset($form['account']['roles']['#options'][$adminArrayKey]);	
		 }	

		 if($form['#user']->name == 'system'){
		 	$systemArrayKey = array_search('system',$form['account']['roles']['#options']);
			 $form['account']['name']['#disabled'] = 1;
			 $form['account']['mail']['#disabled'] = 1;
			 $form['account']['pass']['#disabled'] = 1;
			 $form['account']['status']['#disabled'] = 1;
			 
			 $form['account']['roles'][$systemArrayKey] = array(
				'#type' => 'checkbox',
				'#title' => 'system',
				'#default_value' => $systemArrayKey,
				'#disabled' => 1
				);
		  }			 
	   }
	}	
}

/**
 * Implements hook_wysiwyg_editor_settings_alter().
 */
function core_overrides_wysiwyg_editor_settings_alter(&$settings, $context) {
  if ($context['profile']->editor == 'tinymce') {
    $settings['gecko_spellcheck'] = TRUE;
    // Any init setting taking a string, boolean, number or array/object holding those types can be overridden/forced here.
  }
}

function core_overrides_get_file_reallink($fid){
$file = file_load($fid);	
$output = '#';
//echo "<pre>"; print_r($file); echo "</pre>";
if($file!=''){
$output = file_create_url($file->uri);
}
return $output;
}

function core_overrides_get_file_reallinks($fid){
$file = file_load($fid);	
$output = '#';
//echo "<pre>"; print_r($file); echo "</pre>";
if($file!=''){
$output = file_create_url($file->uri);
}
return $output;
}

/** Form for Footer map image **/
/*function core_overrides_footer_form(){
$form = array();
$form['footer_map_file_fid'] = array(
    '#title' => t('Footer Map Image'),
    '#type' => 'managed_file',
    '#description' => t('Footer Map image. Recommended resolution is 200x200 px.'),
    '#default_value' => variable_get('footer_map_file_fid', ''),
    '#upload_validators' => array(
    'file_validate_extensions' => array('jpeg jpg png gif'),
    ),
  '#upload_location' => 'public://footer_map/',
  '#process' => array('core_overrides_footer_map_element_process')
);  
$form['footer_map_url'] = array(
	'#type' => 'textfield',
	'#title' => t('Map URL'),
	'#description' => t('Url of the map.'),
	'#default_value' => variable_get('footer_map_url', '#'),
	);
$form['#submit'][] = 'core_overrides_footer_form_submit';
return system_settings_form($form);
}
function core_overrides_footer_map_element_process($element, &$form_state, $form) {
  $element = file_managed_file_process($element, $form_state, $form);
  $element['upload_button']['#access'] = TRUE;
return $element;
}
function core_overrides_footer_form_submit(&$form, &$form_state) {
  if($form_state['values']['footer_map_file_fid'] != 0){
  $fid = $form_state['values']['footer_map_file_fid'];
  $file = file_load($fid);
  $file->status = FILE_STATUS_PERMANENT;
  file_save($file);
  //echo "<pre>"; print_r($file); echo "</pre>"; die();
  file_usage_add($file, 'core_overrides', 'core_overrides', $file->fid);
  }
}*/
/** End Footer map image **/



/** Form For Residents Widget Image **/

/*function core_overrides_residents_widget_form(){
$form = array();
$form['residents_footer_title'] = array(
	'#type' => 'textfield',
	'#title' => t('Image Title'),
	'#description' => t('Title of the image'),
	'#default_value' => variable_get('residents_footer_title', '#'),
	);
	
$form['residents_map_file_fid'] = array(
    '#title' => t('Residents Map Image'),
    '#type' => 'managed_file',
    '#description' => t('Residents Map image. Recommended resolution is  413x301px.'),
    '#default_value' => variable_get('residents_map_file_fid', ''),
    '#upload_validators' => array(
    'file_validate_extensions' => array('jpeg jpg png gif'),
    ),
  '#upload_location' => 'public://residents_map/',
  '#process' => array('core_overrides_residents_map_element_process')
);  
$form['residents_footer_map_url'] = array(
	'#type' => 'textfield',
	'#title' => t('Map URL'),
	'#description' => t('Url of the map.'),
	'#default_value' => variable_get('residents_footer_map_url', '#'),
	);

$form['residents_business_directory_file_fid'] = array(
    '#title' => t('Residents Business Directory Image'),
    '#type' => 'managed_file',
    '#description' => t('Residents Business Directory image. Recommended resolution is  413x301px.'),
    '#default_value' => variable_get('residents_business_directory_file_fid', ''),
    '#upload_validators' => array(
    'file_validate_extensions' => array('jpeg jpg png gif'),
    ),
  '#upload_location' => 'public://residents_business_directory/',
  '#process' => array('core_overrides_residents_business_directory_element_process')
);  
$form['residents_business_directory_url'] = array(
	'#type' => 'textfield',
	'#title' => t('Residents Business Directory URL'),
	'#description' => t('Url of the Residents Business Directory.'),
	'#default_value' => variable_get('residents_business_directory_url', '#'),
	);	
	
$form['#submit'][] = 'core_overrides_residents_widget_form_submit';
return system_settings_form($form);
}
function core_overrides_residents_map_element_process($element, &$form_state, $form) {
  $element = file_managed_file_process($element, $form_state, $form);
  $element['upload_button']['#access'] = TRUE;
return $element;
}
function core_overrides_residents_business_directory_element_process($element, &$form_state, $form) {
  $element = file_managed_file_process($element, $form_state, $form);
  $element['upload_button']['#access'] = TRUE;
return $element;
}
function core_overrides_residents_widget_form_submit(&$form, &$form_state) {
  
  if($form_state['values']['residents_map_file_fid'] != 0){
  $fid = $form_state['values']['residents_map_file_fid'];
  $file = file_load($fid);
  $file->status = FILE_STATUS_PERMANENT;
  file_save($file);
  //echo "<pre>"; print_r($file); echo "</pre>"; die();
  file_usage_add($file, 'core_overrides', 'core_overrides', $file->fid);
  }
  
  if($form_state['values']['residents_business_directory_file_fid'] != 0){
  $fid1 = $form_state['values']['residents_business_directory_file_fid'];
  $file1 = file_load($fid1);
  $file1->status = FILE_STATUS_PERMANENT;
  file_save($file1);
  //echo "<pre>"; print_r($file); echo "</pre>"; die();
  file_usage_add($file1, 'core_overrides', 'core_overrides', $file1->fid);
  }
  
}*/

function get_membership_types(){
$results = views_get_view_result('membership_types', 'block');
//echo "<pre>"; print_r($result); echo "</pre>"; die();
$membership_types = array();
if(count($results) > 0){
	foreach($results as $result){
	$membership_types[] = array('nid' => $result->nid, 'title' => $result->node_title, 'subscription_amount' => (isset($result->field_field_membership_fees[0]) ? $result->field_field_membership_fees[0]['raw']['value'] : '0.00'));
	}
}
return $membership_types;
}

function get_membership_type_by_nid($nid){
    $membership_type = node_load($nid);        
    
    if($membership_type){
        $result = array();
        $result['nid'] = $membership_type->nid;
        $result['title'] = $membership_type->title;
        $result['subscription_amount'] = $membership_type->field_membership_fees['und'][0]['value'];
        return $result;
    }
    else{
        return false;
    }
    
}

function get_countries_list(){
	$result = array(
	'US' => 'United States',
	'CA' => 'Canada',
    'IN' => 'India',
    'BD' => 'Bangladesh',
	'AF' => 'Afghanistan',
	'AX' => 'Aland Islands',
	'AL' => 'Albania',
	'DZ' => 'Algeria',
	'AS' => 'American Samoa',
	'AD' => 'Andorra',
	'AO' => 'Angola',
	'AI' => 'Anguilla',
	'AQ' => 'Antarctica',
	'AG' => 'Antigua and Barbuda',
	'AR' => 'Argentina',
	'AM' => 'Armenia',
	'AW' => 'Aruba',
	'AU' => 'Australia',
	'AT' => 'Austria',
	'AZ' => 'Azerbaijan',
	'BS' => 'Bahamas',
	'BH' => 'Bahrain',
	'BB' => 'Barbados',
	'BY' => 'Belarus',
	'BE' => 'Belgium',
	'BZ' => 'Belize',
	'BJ' => 'Benin',
	'BM' => 'Bermuda',
	'BT' => 'Bhutan',
	'BO' => 'Bolivia',
	'BA' => 'Bosnia and Herzegovina',
	'BW' => 'Botswana',
	'BV' => 'Bouvet Island',
	'BR' => 'Brazil',
	'IO' => 'British Indian Ocean Territory',
	'VG' => 'British Virgin Islands',
	'BN' => 'Brunei',
	'BG' => 'Bulgaria',
	'BF' => 'Burkina Faso',
	'BI' => 'Burundi',
	'KH' => 'Cambodia',
	'CM' => 'Cameroon',
	'CV' => 'Cape Verde',
	'BQ' => 'Caribbean Netherlands',
	'KY' => 'Cayman Islands',
	'CF' => 'Central African Republic',
	'TD' => 'Chad',
	'CL' => 'Chile',
	'CN' => 'China',
	'CX' => 'Christmas Island',
	'CC' => 'Cocos (Keeling) Islands',
	'CO' => 'Colombia',
	'KM' => 'Comoros',
	'CG' => 'Congo (Brazzaville)',
	'CD' => 'Congo (Kinshasa)',
	'CK' => 'Cook Islands',
	'CR' => 'Costa Rica',
	'HR' => 'Croatia',
	'CU' => 'Cuba',
	'CW' => 'Curaçao',
	'CY' => 'Cyprus',
	'CZ' => 'Czech Republic',
	'DK' => 'Denmark',
	'DJ' => 'Djibouti',
	'DM' => 'Dominica',
	'DO' => 'Dominican Republic',
	'EC' => 'Ecuador',
	'EG' => 'Egypt',
	'SV' => 'El Salvador',
	'GQ' => 'Equatorial Guinea',
	'ER' => 'Eritrea',
	'EE' => 'Estonia',
	'ET' => 'Ethiopia',
	'FK' => 'Falkland Islands',
	'FO' => 'Faroe Islands',
	'FJ' => 'Fiji',
	'FI' => 'Finland',
	'FR' => 'France',
	'GF' => 'French Guiana',
	'PF' => 'French Polynesia',
	'TF' => 'French Southern Territories',
	'GA' => 'Gabon',
	'GM' => 'Gambia',
	'GE' => 'Georgia',
	'DE' => 'Germany',
	'GH' => 'Ghana',
	'GI' => 'Gibraltar',
	'GR' => 'Greece',
	'GL' => 'Greenland',
	'GD' => 'Grenada',
	'GP' => 'Guadeloupe',
	'GU' => 'Guam',
	'GT' => 'Guatemala',
	'GG' => 'Guernsey',
	'GN' => 'Guinea',
	'GW' => 'Guinea-Bissau',
	'GY' => 'Guyana',
	'HT' => 'Haiti',
	'HM' => 'Heard Island and McDonald Islands',
	'HN' => 'Honduras',
	'HK' => 'Hong Kong S.A.R., China',
	'HU' => 'Hungary',
	'IS' => 'Iceland',
	'ID' => 'Indonesia',
	'IR' => 'Iran',
	'IQ' => 'Iraq',
	'IE' => 'Ireland',
	'IM' => 'Isle of Man',
	'IL' => 'Israel',
	'IT' => 'Italy',
	'CI' => 'Ivory Coast',
	'JM' => 'Jamaica',
	'JP' => 'Japan',
	'JE' => 'Jersey',
	'JO' => 'Jordan',
	'KZ' => 'Kazakhstan',
	'KE' => 'Kenya',
	'KI' => 'Kiribati',
	'KW' => 'Kuwait',
	'KG' => 'Kyrgyzstan',
	'LA' => 'Laos',
	'LV' => 'Latvia',
	'LB' => 'Lebanon',
	'LS' => 'Lesotho',
	'LR' => 'Liberia',
	'LY' => 'Libya',
	'LI' => 'Liechtenstein',
	'LT' => 'Lithuania',
	'LU' => 'Luxembourg',
	'MO' => 'Macao S.A.R., China',
	'MK' => 'Macedonia',
	'MG' => 'Madagascar',
	'MW' => 'Malawi',
	'MY' => 'Malaysia',
	'MV' => 'Maldives',
	'ML' => 'Mali',
	'MT' => 'Malta',
	'MH' => 'Marshall Islands',
	'MQ' => 'Martinique',
	'MR' => 'Mauritania',
	'MU' => 'Mauritius',
	'YT' => 'Mayotte',
	'MX' => 'Mexico',
	'FM' => 'Micronesia',
	'MD' => 'Moldova',
	'MC' => 'Monaco',
	'MN' => 'Mongolia',
	'ME' => 'Montenegro',
	'MS' => 'Montserrat',
	'MA' => 'Morocco',
	'MZ' => 'Mozambique',
	'MM' => 'Myanmar',
	'NA' => 'Namibia',
	'NR' => 'Nauru',
	'NP' => 'Nepal',
	'NL' => 'Netherlands',
	'AN' => 'Netherlands Antilles',
	'NC' => 'New Caledonia',
	'NZ' => 'New Zealand',
	'NI' => 'Nicaragua',
	'NE' => 'Niger',
	'NG' => 'Nigeria',
	'NU' => 'Niue',
	'NF' => 'Norfolk Island',
	'MP' => 'Northern Mariana Islands',
	'KP' => 'North Korea',
	'NO' => 'Norway',
	'OM' => 'Oman',
	'PK' => 'Pakistan',
	'PW' => 'Palau',
	'PS' => 'Palestinian Territory',
	'PA' => 'Panama',
	'PG' => 'Papua New Guinea',
	'PY' => 'Paraguay',
	'PE' => 'Peru',
	'PH' => 'Philippines',
	'PN' => 'Pitcairn',
	'PL' => 'Poland',
	'PT' => 'Portugal',
	'PR' => 'Puerto Rico',
	'QA' => 'Qatar',
	'RE' => 'Reunion',
	'RO' => 'Romania',
	'RU' => 'Russia',
	'RW' => 'Rwanda',
	'BL' => 'Saint Barthélemy',
	'SH' => 'Saint Helena',
	'KN' => 'Saint Kitts and Nevis',
	'LC' => 'Saint Lucia',
	'MF' => 'Saint Martin (French part)',
	'PM' => 'Saint Pierre and Miquelon',
	'VC' => 'Saint Vincent and the Grenadines',
	'WS' => 'Samoa',
	'SM' => 'San Marino',
	'ST' => 'Sao Tome and Principe',
	'SA' => 'Saudi Arabia',
	'SN' => 'Senegal',
	'RS' => 'Serbia',
	'SC' => 'Seychelles',
	'SL' => 'Sierra Leone',
	'SG' => 'Singapore',
	'SX' => 'Sint Maarten',
	'SK' => 'Slovakia',
	'SI' => 'Slovenia',
	'SB' => 'Solomon Islands',
	'SO' => 'Somalia',
	'ZA' => 'South Africa',
	'GS' => 'South Georgia and the South Sandwich Islands',
	'KR' => 'South Korea',
	'SS' => 'South Sudan',
	'ES' => 'Spain',
	'LK' => 'Sri Lanka',
	'SD' => 'Sudan',
	'SR' => 'Suriname',
	'SJ' => 'Svalbard and Jan Mayen',
	'SZ' => 'Swaziland',
	'SE' => 'Sweden',
	'CH' => 'Switzerland',
	'SY' => 'Syria',
	'TW' => 'Taiwan',
	'TJ' => 'Tajikistan',
	'TZ' => 'Tanzania',
	'TH' => 'Thailand',
	'TL' => 'Timor-Leste',
	'TG' => 'Togo',
	'TK' => 'Tokelau',
	'TO' => 'Tonga',
	'TT' => 'Trinidad and Tobago',
	'TN' => 'Tunisia',
	'TR' => 'Turkey',
	'TM' => 'Turkmenistan',
	'TC' => 'Turks and Caicos Islands',
	'TV' => 'Tuvalu',
	'VI' => 'U.S. Virgin Islands',
	'UG' => 'Uganda',
	'UA' => 'Ukraine',
	'AE' => 'United Arab Emirates',
	'GB' => 'United Kingdom',
	'UM' => 'United States Minor Outlying Islands',
	'UY' => 'Uruguay',
	'UZ' => 'Uzbekistan',
	'VU' => 'Vanuatu',
	'VA' => 'Vatican',
	'VE' => 'Venezuela',
	'VN' => 'Vietnam',
	'WF' => 'Wallis and Futuna',
	'EH' => 'Western Sahara',
	'YE' => 'Yemen',
	'ZM' => 'Zambia',
	'ZW' => 'Zimbabwe',
	);
	return $result;
}

function get_state_list_us(){
	$result = array(
	'AL' => 'Alabama',
	'AK' => 'Alaska',
	'AZ' => 'Arizona',
	'AR' => 'Arkansas',
	'CA' => 'California',
	'CO' => 'Colorado',
	'CT' => 'Connecticut',
	'DE' => 'Delaware',
	'DC' => 'District Of Columbia',
	'FL' => 'Florida',
	'GA' => 'Georgia',
	'HI' => 'Hawaii',
	'ID' => 'Idaho',
	'IL' => 'Illinois',
	'IN' => 'Indiana',
	'IA' => 'Iowa',
	'KS' => 'Kansas',
	'KY' => 'Kentucky',
	'LA' => 'Louisiana',
	'ME' => 'Maine',
	'MD' => 'Maryland',
	'MA' => 'Massachusetts',
	'MI' => 'Michigan',
	'MN' => 'Minnesota',
	'MS' => 'Mississippi',
	'MO' => 'Missouri',
	'MT' => 'Montana',
	'NE' => 'Nebraska',
	'NV' => 'Nevada',
	'NH' => 'New Hampshire',
	'NJ' => 'New Jersey',
	'NM' => 'New Mexico',
	'NY' => 'New York',
	'NC' => 'North Carolina',
	'ND' => 'North Dakota',
	'OH' => 'Ohio',
	'OK' => 'Oklahoma',
	'OR' => 'Oregon',
	'PA' => 'Pennsylvania',
	'RI' => 'Rhode Island',
	'SC' => 'South Carolina',
	'SD' => 'South Dakota',
	'TN' => 'Tennessee',
	'TX' => 'Texas',
	'UT' => 'Utah',
	'VT' => 'Vermont',
	'VA' => 'Virginia',
	'WA' => 'Washington',
	'WV' => 'West Virginia',
	'WI' => 'Wisconsin',
	'WY' => 'Wyoming',
	);
	return $result;
}

function get_alumni_university(){
$results = views_get_view_result('alumni_universities', 'block');
//echo "<pre>"; print_r($result); echo "</pre>"; die();
$alumni_universities = array();
if(count($results) > 0){
	foreach($results as $result){
		$alumni_universities[] = array('nid' => $result->nid, 'title' => $result->node_title,);
		}	
	}
	return $alumni_universities;
}

function get_related_organizers(){
$results = views_get_view_result('list_of_related_organizer', 'block');
//echo "<pre>"; print_r($results); echo "</pre>"; die();
$related_organizers = array();
if(count($results) > 0){
	foreach($results as $result){
		$related_organizers[] = array('nid' => $result->nid, 'title' => $result->node_title,);
		}	
	}
	return $related_organizers;
}

function get_sponsor_membership_plans(){
$results = views_get_view_result('sponsor_registration_package_list', 'block');
//echo "<pre>"; print_r($results); echo "</pre>"; die();
$sponsor_membership_plans = array();
if(count($results) > 0){
	foreach($results as $result){
		$sponsor_membership_plans[] = array('nid' => $result->nid, 'title' => '<span class="sponsor_plan_title">'.$result->node_title.'</span><span class="sponsor_plan_desc">'.(isset($result->field_body[0]) ? $result->field_body[0]['rendered']['#markup'] : '').'</span>',);
		}	
	}
	return $sponsor_membership_plans;
}

function get_hotel_list(){
$results = views_get_view_result('hotel_list', 'hotel_list_block');
//echo "<pre>"; print_r($result); echo "</pre>"; die();
$hotels = array();
if(count($results) > 0){
	foreach($results as $result){
		$hotels[] = array('nid' => $result->nid, 'title' => $result->node_title,);
		}	
	}
	return $hotels;
}

function get_alumni_year(){
	$alumni_year = array();
	$alumni_year[''] = t('Select');
	for($i = 1976; $i <= date('Y'); $i++){
		$alumni_year[$i] = $i;
	}
	
	return $alumni_year;
}

function get_business_forums(){
$results = views_get_view_result('business_forums_list', 'block');
//echo "<pre>"; print_r($result); echo "</pre>"; die();
$business_forums = array();
if(count($results) > 0){
	foreach($results as $result){
		$business_forums[] = array('nid' => $result->nid, 'title' => $result->node_title,);
		}	
	}
	return $business_forums;
}

function get_tourism_list(){
$results = views_get_view_result('tourism_list', 'block');
//echo "<pre>"; print_r($result); echo "</pre>"; die();
$tourisms = array();
if(count($results) > 0){
	foreach($results as $result){
		$tourisms[] = array('nid' => $result->nid, 'title' => $result->node_title,);
		}	
	}
	return $tourisms;
}

function get_cruise_list(){
$results = views_get_view_result('cruise_list', 'block');
//echo "<pre>"; print_r($results); echo "</pre>"; die();
$cruise_list = array();
if(count($results) > 0){
	foreach($results as $result){
		$cruise_list[] = array('nid' => $result->nid, 'title' => $result->node_title,'cruise_price'=>(isset($result->field_field_hike_cruise_price[0]) ? $result->field_field_hike_cruise_price[0]['raw']['value'] : 0.00));
		}	
	}
	return $cruise_list;
}

function get_cruise_by_id($nid){
    $cruise = node_load($nid);
    if($cruise){
            $result = array('nid' => $cruise->nid, 'title' => $cruise->title,'cruise_price'=>(isset($cruise->field_hike_cruise_price['und']) ? $cruise->field_hike_cruise_price['und'][0]['value'] : 0.00));
            return $result;
        }
    else{
        return false;
    }
}


function get_meal_plan_list(){
$results = views_get_view_result('meal_plans', 'block');
//echo "<pre>"; print_r($results); echo "</pre>"; die();
$meal_plan_list = array();
if(count($results) > 0){
    foreach($results as $result){
        $meal_plan_list[] = array('nid' => $result->nid, 'title' => $result->node_title,'meal_plan_price'=>(isset($result->field_field_meal_plan_price[0]) ? $result->field_field_meal_plan_price[0]['raw']['value'] : 0.00));
        }   
    }
    return $meal_plan_list;
}

function get_meal_plan_by_id($nid){
    
$meal_plan = node_load($nid);
    if($meal_plan){
        $result = array('nid' => $meal_plan->nid, 'title' => $meal_plan->title,'meal_plan_price'=>(isset($meal_plan->field_meal_plan_price['und']) ? $meal_plan->field_meal_plan_price['und'][0]['value'] : 0.00)); 
        return $result;
        }
    else{
        return false;
    }
}

function generate_membership_number(){
    
    $membership_number = array();
    while(count($membership_number) != 6)
    {
        $membership_number[] = rand(0, 9);
        $membership_number = array_unique($membership_number);
    }
    $membership_number = implode('', $membership_number);    
    $membership_number = 'NABC2017'.$membership_number;
            
    $query = new EntityFieldQuery();
      
    $query->entityCondition('entity_type', 'node');
    $query->entityCondition('bundle', 'register');
    $query->propertyCondition('status', 1);
    $query->fieldCondition('field_membership_number', 'value', $membership_number , '=');
    $result = $query->execute();


    if($membership_number!='' && isset($result['node'])){
       generate_membership_number();
    }
    
    return $membership_number;
}

function generate_membership_number_1(){
    
    $view = views_get_view('last_membership_number');
 	$view->set_display('block');
    $view->pre_execute();
    $view->execute();
	if($view->result){
		foreach($view->result as $result){
		//echo "<pre>"; print_r($result); echo "</pre>";
			$last_membership_number = $result->field_field_membership_number[0]['raw']['value'];
			$last_membership_number_digits = substr($last_membership_number,8,14);
			$membership_number = $last_membership_number_digits+1;
			$membership_number = str_pad($membership_number,6,'0',STR_PAD_LEFT);
		}
	}
	else{
		$membership_number = str_pad(1,6,'0',STR_PAD_LEFT); 
	}   
    $membership_number = (string) $membership_number;
    $membership_number = strip_tags('NABC2017'.$membership_number);
           
    
    $query = new EntityFieldQuery();
      
    $query->entityCondition('entity_type', 'node');
    $query->entityCondition('bundle', 'register');
    $query->propertyCondition('status', 1);
    $query->fieldCondition('field_membership_number', 'value', $membership_number , '=');
    $result = $query->execute();


    if($membership_number!='' && isset($result['node'])){
       generate_membership_number_1();
    }
    
    return $membership_number;
}

function generate_membership_token(){
    
    $membership_token = array();
    while(count($membership_token) != 7)
    {
        $membership_token[] = rand(0, 9);
        $membership_token = array_unique($membership_token);
    }
    $membership_token = implode('', $membership_token);    
            
    $query = new EntityFieldQuery();
      
    $query->entityCondition('entity_type', 'node');
    $query->entityCondition('bundle', 'register');
    $query->propertyCondition('status', 1);
    $query->fieldCondition('field_membership_token', 'value', $membership_token , '=');
    $result = $query->execute();


    if($membership_token!='' && isset($result['node'])){
       generate_membership_token();
    }
    
    return $membership_token;
}

/****Sponsor Membership Number Generator****/
function generate_sponsor_membership_number(){
    
    $membership_number = array();
    while(count($membership_number) != 6)
    {
        $membership_number[] = rand(0, 9);
        $membership_number = array_unique($membership_number);
    }
    $membership_number = implode('', $membership_number);    
    $membership_number = 'NABC2017S'.$membership_number;
            
    $query = new EntityFieldQuery();
      
    $query->entityCondition('entity_type', 'node');
    $query->entityCondition('bundle', 'sponsor_registration');
    $query->propertyCondition('status', 1);
    $query->fieldCondition('field_sponsor_membership_number', 'value', $membership_number , '=');
    $result = $query->execute();


    if($membership_number!='' && isset($result['node'])){
       generate_sponsor_membership_number();
    }
    
    return $membership_number;
}

function generate_sponsor_membership_number_1(){
    
    $view = views_get_view('last_membership_number');
 	$view->set_display('block_1');
    $view->pre_execute();
    $view->execute();
	if($view->result){
		foreach($view->result as $result){
		//echo "<pre>"; print_r($result); echo "</pre>";
			$last_membership_number = $result->field_field_sponsor_membership_number[0]['raw']['value'];
			$last_membership_number_digits = substr($last_membership_number,9,14);
			$membership_number = $last_membership_number_digits+1;
			$membership_number = str_pad($membership_number,6,'0',STR_PAD_LEFT);
		}
	}
	else{
		$membership_number = str_pad(1,6,'0',STR_PAD_LEFT);
	}
	$membership_number = (string) $membership_number;    
    $membership_number = 'NABC2017S'.$membership_number;
    
    
    $query = new EntityFieldQuery();
      
    $query->entityCondition('entity_type', 'node');
    $query->entityCondition('bundle', 'sponsor_registration');
    $query->propertyCondition('status', 1);
    $query->fieldCondition('field_sponsor_membership_number', 'value', $membership_number , '=');
    $result = $query->execute();


    if($membership_number!='' && isset($result['node'])){
       generate_sponsor_membership_number_1();
    }
    
    return $membership_number;
}

function generate_sponsor_membership_token(){
    
    $membership_token = array();
    while(count($membership_token) != 7)
    {
        $membership_token[] = rand(0, 9);
        $membership_token = array_unique($membership_token);
    }
    $membership_token = implode('', $membership_token);    
            
    $query = new EntityFieldQuery();
      
    $query->entityCondition('entity_type', 'node');
    $query->entityCondition('bundle', 'sponsor_registration');
    $query->propertyCondition('status', 1);
    $query->fieldCondition('field_sponsor_membership_token', 'value', $membership_token , '=');
    $result = $query->execute();


    if($membership_token!='' && isset($result['node'])){
       generate_sponsor_membership_token();
    }
    
    return $membership_token;
}
/***************************************/

function get_membership_data($member_nid){
      
  $membership_details = node_load($member_nid);
  if($membership_details){
      return $membership_details;
    }else{
        return false;
    }
}

function get_membership_plan_by_id($id){
   
     $membership_plan = node_load($id);
     if($membership_plan){
     $member_plan['title'] = $membership_plan->title;
     $member_plan['nid'] = $membership_plan->nid;
     //echo "<pre>"; print_r($member_plan); print "</pre>"; die();
     }
    return $member_plan;
}

function get_node_by_url_alias($alias){
    $path = drupal_lookup_path("source", $alias);
    $node = menu_get_object("node", 1, $path);
    //echo "<pre>"; print_r($node); echo "</pre>"; die();
    return $node;
}

function validate_non_paid_member_session(){
     if(isset($_SESSION['valid_membership_email']) &&  $_SESSION['valid_membership_email']!='' &&  isset($_SESSION['valid_membership_token']) && $_SESSION['valid_membership_token']!='' && isset($_SESSION['valid_membership_nid']) && $_SESSION['valid_membership_nid'] != ''){
         // Stay on page.
     }
     else{
         drupal_set_message('Please login to access the page with email address and login token information.','error');  
         drupal_goto('member/login');
     }
}

function validate_paid_member_session(){
     if(isset($_SESSION['valid_membership_email']) &&  $_SESSION['valid_membership_email']!='' &&  isset($_SESSION['valid_membership_number']) && $_SESSION['valid_membership_number']!='' && isset($_SESSION['valid_membership_nid']) && $_SESSION['valid_membership_nid'] != ''){
         // Stay on page.
     }
     else{
         drupal_set_message('Please login to access the page with email address and login token information.','error');  
         drupal_goto('member/login');
     }
}

function validate_non_paid_sponsor_member_session(){
     if(isset($_SESSION['valid_sponsor_membership_email']) &&  $_SESSION['valid_sponsor_membership_email']!='' &&  isset($_SESSION['valid_sponsor_membership_token']) && $_SESSION['valid_sponsor_membership_token']!='' && isset($_SESSION['valid_sponsor_membership_nid']) && $_SESSION['valid_sponsor_membership_nid'] != ''){
         // Stay on page.
     }
     else{
         drupal_set_message('Please login to access the page with email address and login token information.','error');  
         drupal_goto('sponsor/login');
     }
}

function validate_paid_sponsor_member_session(){
     if(isset($_SESSION['valid_sponsor_membership_email']) &&  $_SESSION['valid_sponsor_membership_email']!='' &&  isset($_SESSION['valid_sponsor_membership_number']) && $_SESSION['valid_sponsor_membership_number']!='' && isset($_SESSION['valid_sponsor_membership_nid']) && $_SESSION['valid_sponsor_membership_nid'] != ''){
         // Stay on page.
     }
     else{
         drupal_set_message('Please login to access the page with email address and login token information.','error');  
         drupal_goto('sponsor/login');
     }
}

function core_overrides_get_current_url_path_alias(){
	$current_path = current_path();
	$path = drupal_lookup_path("alias", $current_path);	
	return $path;
}

function get_tourism_values($array){
	$result = array();
	if(count($array) > 0){
		foreach($array as $arr){
			$result[] = $arr['nid'];
		}
	}
	return $result;
}

function get_business_form_values($array){
	$result = array();
	if(count($array) > 0){
		foreach($array as $arr){
			$result[] = $arr['nid'];
		}
	}
	return $result;
}

function get_additional_member_statistics($member_details){
	$additional_member_info = array();
	$additional_member_info['no_of_child'] = 0;
	$additional_member_info['no_of_child_allowed'] = 4;
	$additional_member_info['no_of_spouse'] = 0;
	$additional_member_info['no_of_spouse_allowed'] = 1;
	$additional_member_info['no_of_parent'] = 0;
	$additional_member_info['no_of_parent_allowed'] = 2;
	
	for($i=1;$i<=7;$i++){
	$field_relation_additional = 'field_relation_additional_'.$i;
		if(isset($member_details->{$field_relation_additional}['und'])){
			if($member_details->{$field_relation_additional}['und'][0]['value'] == 'Child'){
				$additional_member_info['no_of_child'] = $additional_member_info['no_of_child'] + 1;
				$additional_member_info['no_of_child_allowed'] = (integer) (4 - $additional_member_info['no_of_child']);
			}
			if($member_details->{$field_relation_additional}['und'][0]['value'] == 'Spouse'){
				$additional_member_info['no_of_spouse'] = $additional_member_info['no_of_spouse'] + 1;
				$additional_member_info['no_of_spouse_allowed'] = (integer) (1 - $additional_member_info['no_of_spouse']);
			}
			if($member_details->{$field_relation_additional}['und'][0]['value'] == 'Parent'){
				$additional_member_info['no_of_parent'] = $additional_member_info['no_of_parent'] + 1;
				$additional_member_info['no_of_parent_allowed'] = (integer) (2 - $additional_member_info['no_of_parent']);
			}
		}
	}
	$additional_member_info['no_of_allowed_additional_members'] = (integer) 7-$_SESSION['no_of_pre_fillled_additional_members'];
	return $additional_member_info;
}
?>
